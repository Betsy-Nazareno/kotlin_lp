
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ACTUAL ADD ANNOTATION APPEND ARRAYLIST ARRAYOF ARROW AS AS_SAFE AT_NO_WS BOOLEAN BREAK BY CATCH CHAR CLASS COLONCOLON COMMA COMMENT COMPANION CONJ CONST CONSTRUCTOR CONTINUE CROSSINLINE DATA DECR DECREMENTIN DECREMENTONE DISJ DIVIDE DIVIDEIN DO DOT DOTS DOUBLE_ARROW DOUBLE_SEMICOLON DYNAMIC ELSE ENUM EQEQ EQEQEQ EQUAL EXCL_EQ EXCL_EQEQ EXCL_NO_WS EXCL_WS EXPECT EXTERNAL FIELD FILE FINAL FINALLY FIRST FLOAT FOR FUN GE GET HASH ID IF IMPORT IN INCR INCREMENTIN INCREMENTONE INCREMENTTIMES INDICES INFIX INIT INLINE INNER INT INTERFACE INTERNAL IS ISEMPTY LANGLE LAST LATEINIT LCURL LE LINEBREAK LINKEDL LISTOF LONG LPAREN LSQUARE MARK_1 MARK_2 MINUS MOD MODIN NOINLINE OBJECT OPEN OPERATOR OUT OVERRIDE PACKAGE PARAM PEEK PLUS POLL POP PRINT PRINTLN PRIVATE PROPERTY PROTECTED PUBLIC PUSH QUEST_WS QUEUE RANGE RANGLE RCURL RECEIVER REIFIED REMOVE REMOVEI REMOVEL REMOVEN RETURN RPAREN RSQUARE SEALED SEMICOLON SET SETPARAM SINGLE_QUOTE SIZE STACK STRING_1 SUM SUPER SUSPEND TAILREC TBOOLEAN TCHAR TDOUBLE TEMPLATE TFLOAT THIS THREEDOTS THROW TIMES TINT TLONG TRY TSTRING TYPEOF TYPE_ALIAS VAL VALUE VAL_TIPO_1 VAR VARARG VAR_TIPO_1 WHEN WHERE WHILEline : lineas\n                | expression\n                | estructurasControl\n                | condicion\n\n                blocks : impresion\n                | asignacion\n                | estructurasDatoslineas : blocks\n            | blocks SEMICOLONestructurasDatos : queue\n                        | queue_operations\n                        | stack\n                        | stack_actuar\n                        | instance_linkedlist\n                        | def_estruct_tipoDato\n                        | lista\n                        | lsimplem\n                        | lcomp\n\n                         |estructurasControl : for\n                         | if\n                         | while queue_operations : queue_add\n                        | queue_peek\n                        | queue_remove\n                        | queue_pollqueue_add : ID DOT ADD LPAREN factor RPARENqueue_peek : ID DOT PEEK LPAREN RPARENqueue_poll : ID DOT POLL LPAREN RPARENqueue_remove : ID DOT REMOVE LPAREN RPARENimpresion : PRINT LPAREN expression RPAREN\n                |  PRINTLN LPAREN expression RPARENqueue : VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPARENfor : FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL  iterable : ID\n                | INT THREEDOTS INT\n                | ID DOT INDICESmorelines : line\n                | line morelinesasignacion : keywordVariables asignacionSimple\n                    | asignacionSimplekeywordVariables : VAR\n                        | VALasignacionSimple : ID DOTS tipoDatoEspecifico\n                        | ID EQUAL valortipoDatoEspecifico : TINT EQUAL INT\n                            | TLONG EQUAL LONG\n                            | TFLOAT EQUAL FLOAT\n                            | TBOOLEAN EQUAL BOOLEAN\n                            | TCHAR EQUAL CHAR\n                            | TSTRING EQUAL STRING_1tipoDato : TINT\n                | TLONG\n                | TFLOAT\n                | TDOUBLE\n                | TBOOLEAN\n                | TCHAR\n                | TSTRINGvalor : expressionexpression : expression PLUS termexpression : expression MINUS termexpression : expression TIMES termexpression : expression DIVIDE termexpression : expression MOD termexpression : expression INCREMENTONEexpression : expression DECREMENTONEexpression : termterm : factorterm : LPAREN expression RPARENfactor : INT\n                | FLOAT\n                | LONG\n                | CHAR\n                | BOOLEAN\n                | ID\n                | STRING_1\n                if : IF LPAREN condicion RPAREN LCURL line RCURL\n            | IF LPAREN condicion RPAREN LCURL line RCURL else\n            else : ELSE LCURL line RCURLcondicion : condicionL\n                | condicionR\n                | condicionN\n                condicionL : BOOLEAN opL BOOLEAN\n                    | ID opL ID\n                    | ID opL BOOLEAN\n                    | BOOLEAN opL ID\n                    condicionR : INT opR INT\n                    | INT opR FLOAT\n                    | INT opR LONG\n                    | FLOAT opR FLOAT\n                    | FLOAT opR INT\n                    | FLOAT opR LONG\n                    | LONG opR LONG\n                    | LONG opR INT\n                    | LONG opR FLOAT\n                    | STRING_1 opR STRING_1\n                    | CHAR opR CHAR\n                    | ID opR ID\n                    condicionN : EXCL_WS BOOLEAN\n                    | EXCL_WS ID\n                    opL : CONJ\n            | DISJ\n            opR : LANGLE\n            | RANGLE\n            | LE\n            | GE\n            | EXCL_EQ\n            | EXCL_EQEQ\n            | AS_SAFE\n            | EQEQ\n            | EQEQEQ\n            stack : keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlistdef_estruct_tipoDato : STACK LANGLE tipoDato RANGLEinstance_linkedlist : LINKEDL LPAREN RPARENstack_actuar : ID DOT stack_funciones stack_funciones : stack_isEmpty\n                        | stack_push\n                        | stack_pop\n                        | stack_peek\n                        | stack_size\n                        stack_isEmpty : ISEMPTY LPAREN RPARENstack_pop : POP LPAREN RPARENstack_push : PUSH LPAREN factor RPARENstack_peek : PEEK LPAREN RPARENstack_size : SIZE LPAREN RPARENLmetod : FIRST LPAREN RPAREN\n    | LAST LPAREN RPAREN\n    | REMOVEL LPAREN RPAREN\n                Cmetod : APPEND LPAREN OBJECT RPAREN\n    | REMOVEN LPAREN OBJECT RPAREN\n    | REMOVEI LPAREN TINT RPAREN\n\n                while : WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL lista : keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPARENlsimplem : ID DOT Lmetodlcomp : ID DOT Cmetod'
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,71,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,273,274,277,278,],[18,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,18,67,-75,84,85,-70,-74,-71,-72,-76,-73,94,95,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,99,-23,-24,-25,-26,18,18,18,18,18,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,18,-99,-100,18,18,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,184,185,186,187,-116,-117,-118,-119,-120,188,189,190,191,192,193,194,195,196,197,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,18,-27,-129,-130,-131,-123,-112,18,-77,18,18,-78,-34,18,-132,-79,275,276,-133,-33,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[19,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,19,-27,-129,-130,-131,-123,-112,19,-77,19,19,-78,-34,19,-132,-79,-133,-33,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[21,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,21,-27,-129,-130,-131,-123,-112,21,-77,21,21,-78,-34,21,-132,-79,-133,-33,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[22,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,22,-27,-129,-130,-131,-123,-112,22,-77,22,22,-78,-34,22,-132,-79,-133,-33,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,68,71,73,74,84,87,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,181,184,195,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[24,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,64,-75,-70,-74,-71,-72,-76,-73,92,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,64,64,64,64,64,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,109,64,-101,-102,143,154,-99,-100,64,64,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,212,64,64,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,24,-27,-129,-130,-131,-123,-112,24,-77,24,24,-78,-34,24,-132,-79,-133,-33,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,177,184,195,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[20,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,65,-75,-70,-74,-71,-72,-76,-73,93,97,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-42,98,-23,-24,-25,-26,65,65,65,65,65,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,107,108,110,65,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,144,150,155,-99,-100,65,65,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,206,65,65,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,20,-27,-129,-130,-131,-123,-112,20,-77,20,20,-78,-34,20,-132,-79,-133,-33,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,71,75,76,77,78,79,80,81,82,83,84,86,88,89,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,177,178,184,195,199,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,236,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[23,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,60,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,60,60,60,60,60,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,60,-103,-104,-105,-106,-107,-108,-109,-110,-111,145,151,157,160,-99,-100,60,60,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,208,209,60,60,230,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,23,249,-27,-129,-130,-131,-123,-112,23,-77,23,23,-78,-34,23,-132,-79,-133,-33,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,71,75,76,77,78,79,80,81,82,83,84,86,88,89,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,180,184,195,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[25,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,61,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,61,61,61,61,61,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,61,-103,-104,-105,-106,-107,-108,-109,-110,-111,146,152,156,161,-99,-100,61,61,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,211,61,61,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,25,-27,-129,-130,-131,-123,-112,25,-77,25,25,-78,-34,25,-132,-79,-133,-33,]),'LONG':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,71,75,76,77,78,79,80,81,82,83,84,86,88,89,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,179,184,195,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[26,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,62,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,62,62,62,62,62,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,62,-103,-104,-105,-106,-107,-108,-109,-110,-111,147,153,158,159,-99,-100,62,62,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,210,62,62,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,26,-27,-129,-130,-131,-123,-112,26,-77,26,26,-78,-34,26,-132,-79,-133,-33,]),'STRING_1':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,71,75,76,77,78,79,80,81,82,83,84,90,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,183,184,195,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[27,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,66,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,66,66,66,66,66,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,66,-103,-104,-105,-106,-107,-108,-109,-110,-111,148,162,-99,-100,66,66,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,214,66,66,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,27,-27,-129,-130,-131,-123,-112,27,-77,27,27,-78,-34,27,-132,-79,-133,-33,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,71,75,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,182,184,195,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[28,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,63,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,63,63,63,63,63,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,63,-103,-104,-105,-106,-107,-108,-109,-110,-111,149,163,-99,-100,63,63,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,213,63,63,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,28,-27,-129,-130,-131,-123,-112,28,-77,28,28,-78,-34,28,-132,-79,-133,-33,]),'EXCL_WS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,84,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[29,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,29,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,29,-27,-129,-130,-131,-123,-112,29,-77,29,29,-78,-34,29,-132,-79,-133,-33,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[30,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,30,-27,-129,-130,-131,-123,-112,30,-77,30,30,-78,-34,30,-132,-79,-133,-33,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[31,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,31,-27,-129,-130,-131,-123,-112,31,-77,31,31,-78,-34,31,-132,-79,-133,-33,]),'SEMICOLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[-19,-1,-2,-3,-4,58,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,-19,-27,-129,-130,-131,-123,-112,-19,-77,-19,-19,-78,-34,-19,-132,-79,-133,-33,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,237,238,239,240,241,244,250,256,261,264,270,277,278,],[-19,0,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,-27,-129,-130,-131,-123,-112,-77,-78,-34,-132,-79,-133,-33,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[43,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,43,-27,-129,-130,-131,-123,-112,43,-77,43,43,-78,-34,43,-132,-79,-133,-33,]),'VAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[44,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,44,-27,-129,-130,-131,-123,-112,44,-77,44,44,-78,-34,44,-132,-79,-133,-33,]),'LINKEDL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,166,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,231,237,238,239,240,241,244,248,250,251,255,256,259,260,261,263,264,270,277,278,],[45,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,203,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,45,45,-27,-129,-130,-131,-123,-112,45,-77,45,45,-78,265,266,-34,45,-132,-79,-133,-33,]),'STACK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,166,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,244,248,250,251,255,256,261,263,264,270,277,278,],[50,-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,50,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,50,-27,-129,-130,-131,-123,-112,50,-77,50,50,-78,-34,50,-132,-79,-133,-33,]),'RCURL':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,57,58,60,61,62,63,64,65,66,92,93,96,101,102,103,104,105,106,108,109,110,111,118,119,120,121,122,127,128,129,130,131,151,152,153,154,155,156,157,158,159,160,161,162,163,168,200,201,205,209,210,211,212,213,214,216,217,218,219,220,221,225,227,228,229,237,238,239,240,241,242,244,248,250,251,254,255,256,258,261,262,263,264,267,270,277,278,],[-1,-2,-3,-4,-8,-67,-20,-21,-22,-80,-81,-82,-5,-6,-7,-68,-75,-70,-74,-71,-72,-76,-73,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,-24,-25,-26,-65,-66,-9,-70,-71,-72,-73,-74,-75,-76,-99,-100,-40,-60,-61,-62,-63,-64,-69,-84,-85,-98,-44,-45,-59,-115,-134,-135,-116,-117,-118,-119,-120,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,-114,-31,-32,-113,-46,-47,-48,-49,-50,-51,-28,-30,-29,-126,-127,-128,-121,-122,-125,-19,-27,-129,-130,-131,-123,250,-112,-19,-77,-19,261,-19,-78,264,-34,-39,-19,-132,270,-79,-133,-33,]),'PLUS':([3,7,17,20,23,24,25,26,27,28,56,57,59,60,61,62,63,64,65,66,101,102,103,104,105,106,119,164,165,],[51,-67,-68,-75,-70,-74,-71,-72,-76,-73,-65,-66,51,-70,-71,-72,-73,-74,-75,-76,-60,-61,-62,-63,-64,-69,51,51,51,]),'MINUS':([3,7,17,20,23,24,25,26,27,28,56,57,59,60,61,62,63,64,65,66,101,102,103,104,105,106,119,164,165,],[52,-67,-68,-75,-70,-74,-71,-72,-76,-73,-65,-66,52,-70,-71,-72,-73,-74,-75,-76,-60,-61,-62,-63,-64,-69,52,52,52,]),'TIMES':([3,7,17,20,23,24,25,26,27,28,56,57,59,60,61,62,63,64,65,66,101,102,103,104,105,106,119,164,165,],[53,-67,-68,-75,-70,-74,-71,-72,-76,-73,-65,-66,53,-70,-71,-72,-73,-74,-75,-76,-60,-61,-62,-63,-64,-69,53,53,53,]),'DIVIDE':([3,7,17,20,23,24,25,26,27,28,56,57,59,60,61,62,63,64,65,66,101,102,103,104,105,106,119,164,165,],[54,-67,-68,-75,-70,-74,-71,-72,-76,-73,-65,-66,54,-70,-71,-72,-73,-74,-75,-76,-60,-61,-62,-63,-64,-69,54,54,54,]),'MOD':([3,7,17,20,23,24,25,26,27,28,56,57,59,60,61,62,63,64,65,66,101,102,103,104,105,106,119,164,165,],[55,-67,-68,-75,-70,-74,-71,-72,-76,-73,-65,-66,55,-70,-71,-72,-73,-74,-75,-76,-60,-61,-62,-63,-64,-69,55,55,55,]),'INCREMENTONE':([3,7,17,20,23,24,25,26,27,28,56,57,59,60,61,62,63,64,65,66,101,102,103,104,105,106,119,164,165,],[56,-67,-68,-75,-70,-74,-71,-72,-76,-73,-65,-66,56,-70,-71,-72,-73,-74,-75,-76,-60,-61,-62,-63,-64,-69,56,56,56,]),'DECREMENTONE':([3,7,17,20,23,24,25,26,27,28,56,57,59,60,61,62,63,64,65,66,101,102,103,104,105,106,119,164,165,],[57,-67,-68,-75,-70,-74,-71,-72,-76,-73,-65,-66,57,-70,-71,-72,-73,-74,-75,-76,-60,-61,-62,-63,-64,-69,57,57,57,]),'RPAREN':([7,11,12,13,17,56,57,59,60,61,62,63,64,65,66,92,93,99,101,102,103,104,105,106,108,109,110,142,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,185,186,187,188,189,190,194,196,197,206,207,215,222,223,224,226,230,247,249,275,276,],[-67,-80,-81,-82,-68,-65,-66,106,-70,-71,-72,-73,-74,-75,-76,-99,-100,168,-60,-61,-62,-63,-64,-69,-84,-85,-98,198,-87,-88,-89,-83,-86,-90,-91,-92,-93,-94,-95,-96,-97,200,201,216,217,218,219,220,221,225,227,228,-35,235,237,238,239,240,241,243,-37,-36,277,278,]),'DOTS':([20,97,98,],[70,166,167,]),'EQUAL':([20,97,112,113,114,115,116,117,202,205,252,253,],[71,71,178,179,180,181,182,183,231,-113,259,260,]),'DOT':([20,206,],[72,234,]),'CONJ':([20,24,143,144,],[73,73,73,73,]),'DISJ':([20,24,143,144,],[74,74,74,74,]),'LANGLE':([20,23,25,26,27,28,50,144,145,146,147,148,149,150,203,204,265,266,],[75,75,75,75,75,75,100,75,75,75,75,75,75,75,232,233,268,269,]),'RANGLE':([20,23,25,26,27,28,144,145,146,147,148,149,150,169,170,171,172,173,174,175,176,245,246,271,272,],[76,76,76,76,76,76,76,76,76,76,76,76,76,205,-52,-53,-54,-55,-56,-57,-58,252,253,273,274,]),'LE':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[77,77,77,77,77,77,77,77,77,77,77,77,77,]),'GE':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[78,78,78,78,78,78,78,78,78,78,78,78,78,]),'EXCL_EQ':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[79,79,79,79,79,79,79,79,79,79,79,79,79,]),'EXCL_EQEQ':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[80,80,80,80,80,80,80,80,80,80,80,80,80,]),'AS_SAFE':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[81,81,81,81,81,81,81,81,81,81,81,81,81,]),'EQEQ':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[82,82,82,82,82,82,82,82,82,82,82,82,82,]),'EQEQEQ':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[83,83,83,83,83,83,83,83,83,83,83,83,83,]),'TINT':([70,100,166,193,233,269,],[112,170,112,224,170,170,]),'TLONG':([70,100,166,233,269,],[113,171,113,171,171,]),'TFLOAT':([70,100,166,233,269,],[114,172,114,172,172,]),'TBOOLEAN':([70,100,166,233,269,],[115,174,115,174,174,]),'TCHAR':([70,100,166,233,269,],[116,175,116,175,175,]),'TSTRING':([70,100,166,233,269,],[117,176,117,176,176,]),'ADD':([72,],[123,]),'PEEK':([72,],[124,]),'REMOVE':([72,],[125,]),'POLL':([72,],[126,]),'FIRST':([72,],[132,]),'LAST':([72,],[133,]),'REMOVEL':([72,],[134,]),'APPEND':([72,],[135,]),'REMOVEN':([72,],[136,]),'REMOVEI':([72,],[137,]),'ISEMPTY':([72,],[138,]),'PUSH':([72,],[139,]),'POP':([72,],[140,]),'SIZE':([72,],[141,]),'TDOUBLE':([100,233,269,],[173,173,173,]),'IN':([107,],[177,]),'QUEUE':([167,],[204,]),'OBJECT':([191,192,232,268,],[222,223,245,271,]),'LCURL':([198,235,243,257,],[229,248,251,263,]),'THREEDOTS':([208,],[236,]),'INDICES':([234,],[247,]),'ELSE':([250,],[257,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,229,248,251,255,263,],[1,242,255,255,255,267,]),'lineas':([0,229,248,251,255,263,],[2,2,2,2,2,2,]),'expression':([0,18,71,94,95,229,248,251,255,263,],[3,59,119,164,165,3,3,3,3,3,]),'estructurasControl':([0,229,248,251,255,263,],[4,4,4,4,4,4,]),'condicion':([0,84,229,248,251,255,263,],[5,142,5,5,5,5,5,]),'blocks':([0,229,248,251,255,263,],[6,6,6,6,6,6,]),'term':([0,18,51,52,53,54,55,71,94,95,229,248,251,255,263,],[7,7,101,102,103,104,105,7,7,7,7,7,7,7,7,]),'for':([0,229,248,251,255,263,],[8,8,8,8,8,8,]),'if':([0,229,248,251,255,263,],[9,9,9,9,9,9,]),'while':([0,229,248,251,255,263,],[10,10,10,10,10,10,]),'condicionL':([0,84,229,248,251,255,263,],[11,11,11,11,11,11,11,]),'condicionR':([0,84,229,248,251,255,263,],[12,12,12,12,12,12,12,]),'condicionN':([0,84,229,248,251,255,263,],[13,13,13,13,13,13,13,]),'impresion':([0,229,248,251,255,263,],[14,14,14,14,14,14,]),'asignacion':([0,229,248,251,255,263,],[15,15,15,15,15,15,]),'estructurasDatos':([0,229,248,251,255,263,],[16,16,16,16,16,16,]),'factor':([0,18,51,52,53,54,55,71,94,95,184,195,229,248,251,255,263,],[17,17,17,17,17,17,17,17,17,17,215,226,17,17,17,17,17,]),'keywordVariables':([0,229,248,251,255,263,],[32,32,32,32,32,32,]),'asignacionSimple':([0,32,229,248,251,255,263,],[33,96,33,33,33,33,33,]),'queue':([0,229,248,251,255,263,],[34,34,34,34,34,34,]),'queue_operations':([0,229,248,251,255,263,],[35,35,35,35,35,35,]),'stack':([0,229,248,251,255,263,],[36,36,36,36,36,36,]),'stack_actuar':([0,229,248,251,255,263,],[37,37,37,37,37,37,]),'instance_linkedlist':([0,229,231,248,251,255,263,],[38,38,244,38,38,38,38,]),'def_estruct_tipoDato':([0,166,229,248,251,255,263,],[39,202,39,39,39,39,39,]),'lista':([0,229,248,251,255,263,],[40,40,40,40,40,40,]),'lsimplem':([0,229,248,251,255,263,],[41,41,41,41,41,41,]),'lcomp':([0,229,248,251,255,263,],[42,42,42,42,42,42,]),'queue_add':([0,229,248,251,255,263,],[46,46,46,46,46,46,]),'queue_peek':([0,229,248,251,255,263,],[47,47,47,47,47,47,]),'queue_remove':([0,229,248,251,255,263,],[48,48,48,48,48,48,]),'queue_poll':([0,229,248,251,255,263,],[49,49,49,49,49,49,]),'opL':([20,24,143,144,],[68,87,87,68,]),'opR':([20,23,25,26,27,28,144,145,146,147,148,149,150,],[69,86,88,89,90,91,69,86,88,89,90,91,199,]),'tipoDatoEspecifico':([70,166,],[111,111,]),'valor':([71,],[118,]),'stack_funciones':([72,],[120,]),'Lmetod':([72,],[121,]),'Cmetod':([72,],[122,]),'stack_isEmpty':([72,],[127,]),'stack_push':([72,],[128,]),'stack_pop':([72,],[129,]),'stack_peek':([72,],[130,]),'stack_size':([72,],[131,]),'tipoDato':([100,233,269,],[169,246,272,]),'iterable':([177,],[207,]),'morelines':([248,251,255,],[254,258,262,]),'else':([250,],[256,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> lineas','line',1,'p_cuerpo','kotlin_sintactico.py',10),
  ('line -> expression','line',1,'p_cuerpo','kotlin_sintactico.py',11),
  ('line -> estructurasControl','line',1,'p_cuerpo','kotlin_sintactico.py',12),
  ('line -> condicion','line',1,'p_cuerpo','kotlin_sintactico.py',13),
  ('blocks -> impresion','blocks',1,'p_body','kotlin_sintactico.py',19),
  ('blocks -> asignacion','blocks',1,'p_body','kotlin_sintactico.py',20),
  ('blocks -> estructurasDatos','blocks',1,'p_body','kotlin_sintactico.py',21),
  ('lineas -> blocks','lineas',1,'p_body_lineas','kotlin_sintactico.py',25),
  ('lineas -> blocks SEMICOLON','lineas',2,'p_body_lineas','kotlin_sintactico.py',26),
  ('estructurasDatos -> queue','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',30),
  ('estructurasDatos -> queue_operations','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',31),
  ('estructurasDatos -> stack','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',32),
  ('estructurasDatos -> stack_actuar','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',33),
  ('estructurasDatos -> instance_linkedlist','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',34),
  ('estructurasDatos -> def_estruct_tipoDato','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',35),
  ('estructurasDatos -> lista','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',36),
  ('estructurasDatos -> lsimplem','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',37),
  ('estructurasDatos -> lcomp','estructurasDatos',1,'p_estructuras_datos','kotlin_sintactico.py',38),
  ('estructurasDatos -> <empty>','estructurasDatos',0,'p_estructuras_datos','kotlin_sintactico.py',40),
  ('estructurasControl -> for','estructurasControl',1,'p_estructuras_control','kotlin_sintactico.py',44),
  ('estructurasControl -> if','estructurasControl',1,'p_estructuras_control','kotlin_sintactico.py',45),
  ('estructurasControl -> while','estructurasControl',1,'p_estructuras_control','kotlin_sintactico.py',46),
  ('queue_operations -> queue_add','queue_operations',1,'p_queue_operations','kotlin_sintactico.py',50),
  ('queue_operations -> queue_peek','queue_operations',1,'p_queue_operations','kotlin_sintactico.py',51),
  ('queue_operations -> queue_remove','queue_operations',1,'p_queue_operations','kotlin_sintactico.py',52),
  ('queue_operations -> queue_poll','queue_operations',1,'p_queue_operations','kotlin_sintactico.py',53),
  ('queue_add -> ID DOT ADD LPAREN factor RPAREN','queue_add',6,'p_queue_add','kotlin_sintactico.py',57),
  ('queue_peek -> ID DOT PEEK LPAREN RPAREN','queue_peek',5,'p_queue_peek','kotlin_sintactico.py',61),
  ('queue_poll -> ID DOT POLL LPAREN RPAREN','queue_poll',5,'p_queue_poll','kotlin_sintactico.py',65),
  ('queue_remove -> ID DOT REMOVE LPAREN RPAREN','queue_remove',5,'p_queue_remove','kotlin_sintactico.py',69),
  ('impresion -> PRINT LPAREN expression RPAREN','impresion',4,'p_impresion','kotlin_sintactico.py',73),
  ('impresion -> PRINTLN LPAREN expression RPAREN','impresion',4,'p_impresion','kotlin_sintactico.py',74),
  ('queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN','queue',14,'p_queue','kotlin_sintactico.py',78),
  ('for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL','for',9,'p_for','kotlin_sintactico.py',82),
  ('iterable -> ID','iterable',1,'p_iterable','kotlin_sintactico.py',86),
  ('iterable -> INT THREEDOTS INT','iterable',3,'p_iterable','kotlin_sintactico.py',87),
  ('iterable -> ID DOT INDICES','iterable',3,'p_iterable','kotlin_sintactico.py',88),
  ('morelines -> line','morelines',1,'p_morelines','kotlin_sintactico.py',92),
  ('morelines -> line morelines','morelines',2,'p_morelines','kotlin_sintactico.py',93),
  ('asignacion -> keywordVariables asignacionSimple','asignacion',2,'p_asignacion','kotlin_sintactico.py',97),
  ('asignacion -> asignacionSimple','asignacion',1,'p_asignacion','kotlin_sintactico.py',98),
  ('keywordVariables -> VAR','keywordVariables',1,'p_keywordVariables','kotlin_sintactico.py',102),
  ('keywordVariables -> VAL','keywordVariables',1,'p_keywordVariables','kotlin_sintactico.py',103),
  ('asignacionSimple -> ID DOTS tipoDatoEspecifico','asignacionSimple',3,'p_asignacionS','kotlin_sintactico.py',107),
  ('asignacionSimple -> ID EQUAL valor','asignacionSimple',3,'p_asignacionS','kotlin_sintactico.py',108),
  ('tipoDatoEspecifico -> TINT EQUAL INT','tipoDatoEspecifico',3,'p_tipoDatoEspecifico','kotlin_sintactico.py',112),
  ('tipoDatoEspecifico -> TLONG EQUAL LONG','tipoDatoEspecifico',3,'p_tipoDatoEspecifico','kotlin_sintactico.py',113),
  ('tipoDatoEspecifico -> TFLOAT EQUAL FLOAT','tipoDatoEspecifico',3,'p_tipoDatoEspecifico','kotlin_sintactico.py',114),
  ('tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN','tipoDatoEspecifico',3,'p_tipoDatoEspecifico','kotlin_sintactico.py',115),
  ('tipoDatoEspecifico -> TCHAR EQUAL CHAR','tipoDatoEspecifico',3,'p_tipoDatoEspecifico','kotlin_sintactico.py',116),
  ('tipoDatoEspecifico -> TSTRING EQUAL STRING_1','tipoDatoEspecifico',3,'p_tipoDatoEspecifico','kotlin_sintactico.py',117),
  ('tipoDato -> TINT','tipoDato',1,'p_tipoDato','kotlin_sintactico.py',121),
  ('tipoDato -> TLONG','tipoDato',1,'p_tipoDato','kotlin_sintactico.py',122),
  ('tipoDato -> TFLOAT','tipoDato',1,'p_tipoDato','kotlin_sintactico.py',123),
  ('tipoDato -> TDOUBLE','tipoDato',1,'p_tipoDato','kotlin_sintactico.py',124),
  ('tipoDato -> TBOOLEAN','tipoDato',1,'p_tipoDato','kotlin_sintactico.py',125),
  ('tipoDato -> TCHAR','tipoDato',1,'p_tipoDato','kotlin_sintactico.py',126),
  ('tipoDato -> TSTRING','tipoDato',1,'p_tipoDato','kotlin_sintactico.py',127),
  ('valor -> expression','valor',1,'p_valor','kotlin_sintactico.py',131),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','kotlin_sintactico.py',135),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','kotlin_sintactico.py',139),
  ('expression -> expression TIMES term','expression',3,'p_expression_times','kotlin_sintactico.py',143),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_divide','kotlin_sintactico.py',147),
  ('expression -> expression MOD term','expression',3,'p_expression_mod','kotlin_sintactico.py',151),
  ('expression -> expression INCREMENTONE','expression',2,'p_expression_increment','kotlin_sintactico.py',155),
  ('expression -> expression DECREMENTONE','expression',2,'p_expression_decrement','kotlin_sintactico.py',159),
  ('expression -> term','expression',1,'p_expression_single','kotlin_sintactico.py',163),
  ('term -> factor','term',1,'p_term_factor','kotlin_sintactico.py',167),
  ('term -> LPAREN expression RPAREN','term',3,'p_term_Paren','kotlin_sintactico.py',171),
  ('factor -> INT','factor',1,'p_factor','kotlin_sintactico.py',175),
  ('factor -> FLOAT','factor',1,'p_factor','kotlin_sintactico.py',176),
  ('factor -> LONG','factor',1,'p_factor','kotlin_sintactico.py',177),
  ('factor -> CHAR','factor',1,'p_factor','kotlin_sintactico.py',178),
  ('factor -> BOOLEAN','factor',1,'p_factor','kotlin_sintactico.py',179),
  ('factor -> ID','factor',1,'p_factor','kotlin_sintactico.py',180),
  ('factor -> STRING_1','factor',1,'p_factor','kotlin_sintactico.py',181),
  ('if -> IF LPAREN condicion RPAREN LCURL line RCURL','if',7,'p_if','kotlin_sintactico.py',187),
  ('if -> IF LPAREN condicion RPAREN LCURL line RCURL else','if',8,'p_if','kotlin_sintactico.py',188),
  ('else -> ELSE LCURL line RCURL','else',4,'p_else','kotlin_sintactico.py',192),
  ('condicion -> condicionL','condicion',1,'p_condicion','kotlin_sintactico.py',202),
  ('condicion -> condicionR','condicion',1,'p_condicion','kotlin_sintactico.py',203),
  ('condicion -> condicionN','condicion',1,'p_condicion','kotlin_sintactico.py',204),
  ('condicionL -> BOOLEAN opL BOOLEAN','condicionL',3,'p_condicionL','kotlin_sintactico.py',208),
  ('condicionL -> ID opL ID','condicionL',3,'p_condicionL','kotlin_sintactico.py',209),
  ('condicionL -> ID opL BOOLEAN','condicionL',3,'p_condicionL','kotlin_sintactico.py',210),
  ('condicionL -> BOOLEAN opL ID','condicionL',3,'p_condicionL','kotlin_sintactico.py',211),
  ('condicionR -> INT opR INT','condicionR',3,'p_condicionR','kotlin_sintactico.py',215),
  ('condicionR -> INT opR FLOAT','condicionR',3,'p_condicionR','kotlin_sintactico.py',216),
  ('condicionR -> INT opR LONG','condicionR',3,'p_condicionR','kotlin_sintactico.py',217),
  ('condicionR -> FLOAT opR FLOAT','condicionR',3,'p_condicionR','kotlin_sintactico.py',218),
  ('condicionR -> FLOAT opR INT','condicionR',3,'p_condicionR','kotlin_sintactico.py',219),
  ('condicionR -> FLOAT opR LONG','condicionR',3,'p_condicionR','kotlin_sintactico.py',220),
  ('condicionR -> LONG opR LONG','condicionR',3,'p_condicionR','kotlin_sintactico.py',221),
  ('condicionR -> LONG opR INT','condicionR',3,'p_condicionR','kotlin_sintactico.py',222),
  ('condicionR -> LONG opR FLOAT','condicionR',3,'p_condicionR','kotlin_sintactico.py',223),
  ('condicionR -> STRING_1 opR STRING_1','condicionR',3,'p_condicionR','kotlin_sintactico.py',224),
  ('condicionR -> CHAR opR CHAR','condicionR',3,'p_condicionR','kotlin_sintactico.py',225),
  ('condicionR -> ID opR ID','condicionR',3,'p_condicionR','kotlin_sintactico.py',226),
  ('condicionN -> EXCL_WS BOOLEAN','condicionN',2,'p_condicionN','kotlin_sintactico.py',230),
  ('condicionN -> EXCL_WS ID','condicionN',2,'p_condicionN','kotlin_sintactico.py',231),
  ('opL -> CONJ','opL',1,'p_opL','kotlin_sintactico.py',236),
  ('opL -> DISJ','opL',1,'p_opL','kotlin_sintactico.py',237),
  ('opR -> LANGLE','opR',1,'p_opR','kotlin_sintactico.py',241),
  ('opR -> RANGLE','opR',1,'p_opR','kotlin_sintactico.py',242),
  ('opR -> LE','opR',1,'p_opR','kotlin_sintactico.py',243),
  ('opR -> GE','opR',1,'p_opR','kotlin_sintactico.py',244),
  ('opR -> EXCL_EQ','opR',1,'p_opR','kotlin_sintactico.py',245),
  ('opR -> EXCL_EQEQ','opR',1,'p_opR','kotlin_sintactico.py',246),
  ('opR -> AS_SAFE','opR',1,'p_opR','kotlin_sintactico.py',247),
  ('opR -> EQEQ','opR',1,'p_opR','kotlin_sintactico.py',248),
  ('opR -> EQEQEQ','opR',1,'p_opR','kotlin_sintactico.py',249),
  ('stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist','stack',6,'p_stack','kotlin_sintactico.py',255),
  ('def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE','def_estruct_tipoDato',4,'p_def_estruct_dato','kotlin_sintactico.py',260),
  ('instance_linkedlist -> LINKEDL LPAREN RPAREN','instance_linkedlist',3,'p_instance_linkedList','kotlin_sintactico.py',265),
  ('stack_actuar -> ID DOT stack_funciones','stack_actuar',3,'p_stack_actuar','kotlin_sintactico.py',270),
  ('stack_funciones -> stack_isEmpty','stack_funciones',1,'p_stack_funciones','kotlin_sintactico.py',275),
  ('stack_funciones -> stack_push','stack_funciones',1,'p_stack_funciones','kotlin_sintactico.py',276),
  ('stack_funciones -> stack_pop','stack_funciones',1,'p_stack_funciones','kotlin_sintactico.py',277),
  ('stack_funciones -> stack_peek','stack_funciones',1,'p_stack_funciones','kotlin_sintactico.py',278),
  ('stack_funciones -> stack_size','stack_funciones',1,'p_stack_funciones','kotlin_sintactico.py',279),
  ('stack_isEmpty -> ISEMPTY LPAREN RPAREN','stack_isEmpty',3,'p_stack_isEmpty','kotlin_sintactico.py',284),
  ('stack_pop -> POP LPAREN RPAREN','stack_pop',3,'p_stack_pop','kotlin_sintactico.py',288),
  ('stack_push -> PUSH LPAREN factor RPAREN','stack_push',4,'p_stack_push','kotlin_sintactico.py',292),
  ('stack_peek -> PEEK LPAREN RPAREN','stack_peek',3,'p_stack_peek','kotlin_sintactico.py',296),
  ('stack_size -> SIZE LPAREN RPAREN','stack_size',3,'p_stack_size','kotlin_sintactico.py',300),
  ('Lmetod -> FIRST LPAREN RPAREN','Lmetod',3,'p_Lmetod','kotlin_sintactico.py',306),
  ('Lmetod -> LAST LPAREN RPAREN','Lmetod',3,'p_Lmetod','kotlin_sintactico.py',307),
  ('Lmetod -> REMOVEL LPAREN RPAREN','Lmetod',3,'p_Lmetod','kotlin_sintactico.py',308),
  ('Cmetod -> APPEND LPAREN OBJECT RPAREN','Cmetod',4,'p_Cmetod','kotlin_sintactico.py',313),
  ('Cmetod -> REMOVEN LPAREN OBJECT RPAREN','Cmetod',4,'p_Cmetod','kotlin_sintactico.py',314),
  ('Cmetod -> REMOVEI LPAREN TINT RPAREN','Cmetod',4,'p_Cmetod','kotlin_sintactico.py',315),
  ('while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL','while',9,'p_while','kotlin_sintactico.py',321),
  ('lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN','lista',14,'p_lista','kotlin_sintactico.py',325),
  ('lsimplem -> ID DOT Lmetod','lsimplem',3,'p_lsimplem','kotlin_sintactico.py',329),
  ('lcomp -> ID DOT Cmetod','lcomp',3,'p_lcomp','kotlin_sintactico.py',333),
]

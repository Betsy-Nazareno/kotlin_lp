Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    FUN
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LINEBREAK
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> lineas
Rule 2     line -> expression
Rule 3     line -> estructurasControl
Rule 4     line -> condicion
Rule 5     blocks -> impresion
Rule 6     blocks -> asignacion
Rule 7     blocks -> estructurasDatos
Rule 8     lineas -> blocks
Rule 9     lineas -> blocks SEMICOLON
Rule 10    estructurasDatos -> queue
Rule 11    estructurasDatos -> queue_operations
Rule 12    estructurasDatos -> stack
Rule 13    estructurasDatos -> stack_actuar
Rule 14    estructurasDatos -> instance_linkedlist
Rule 15    estructurasDatos -> def_estruct_tipoDato
Rule 16    estructurasDatos -> lista
Rule 17    estructurasDatos -> lsimplem
Rule 18    estructurasDatos -> lcomp
Rule 19    estructurasControl -> for
Rule 20    estructurasControl -> if
Rule 21    estructurasControl -> while
Rule 22    queue_operations -> queue_add
Rule 23    queue_operations -> queue_peek
Rule 24    queue_operations -> queue_remove
Rule 25    queue_operations -> queue_poll
Rule 26    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 27    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 28    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 29    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 30    impresion -> PRINT LPAREN expression RPAREN
Rule 31    impresion -> PRINTLN LPAREN expression RPAREN
Rule 32    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 33    for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
Rule 34    iterable -> ID
Rule 35    iterable -> INT THREEDOTS INT
Rule 36    iterable -> ID DOT INDICES
Rule 37    morelines -> line
Rule 38    morelines -> line morelines
Rule 39    asignacion -> keywordVariables asignacionSimple
Rule 40    asignacion -> asignacionSimple
Rule 41    keywordVariables -> VAR
Rule 42    keywordVariables -> VAL
Rule 43    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 44    asignacionSimple -> ID EQUAL valor
Rule 45    tipoDatoEspecifico -> TINT EQUAL INT
Rule 46    tipoDatoEspecifico -> TLONG EQUAL LONG
Rule 47    tipoDatoEspecifico -> TFLOAT EQUAL FLOAT
Rule 48    tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN
Rule 49    tipoDatoEspecifico -> TCHAR EQUAL CHAR
Rule 50    tipoDatoEspecifico -> TSTRING EQUAL STRING_1
Rule 51    tipoDato -> TINT
Rule 52    tipoDato -> TLONG
Rule 53    tipoDato -> TFLOAT
Rule 54    tipoDato -> TDOUBLE
Rule 55    tipoDato -> TBOOLEAN
Rule 56    tipoDato -> TCHAR
Rule 57    tipoDato -> TSTRING
Rule 58    valor -> expression
Rule 59    expression -> expression PLUS term
Rule 60    expression -> expression MINUS term
Rule 61    expression -> expression TIMES term
Rule 62    expression -> expression DIVIDE term
Rule 63    expression -> expression MOD term
Rule 64    expression -> expression INCREMENTONE
Rule 65    expression -> expression DECREMENTONE
Rule 66    expression -> term
Rule 67    term -> factor
Rule 68    term -> LPAREN expression RPAREN
Rule 69    factor -> INT
Rule 70    factor -> FLOAT
Rule 71    factor -> LONG
Rule 72    factor -> CHAR
Rule 73    factor -> BOOLEAN
Rule 74    factor -> ID
Rule 75    factor -> STRING_1
Rule 76    if -> IF LPAREN condicion RPAREN LCURL line RCURL
Rule 77    if -> IF LPAREN condicion RPAREN LCURL line RCURL else
Rule 78    else -> ELSE LCURL line RCURL
Rule 79    condicion -> condicionL
Rule 80    condicion -> condicionR
Rule 81    condicion -> condicionN
Rule 82    condicionL -> BOOLEAN opL BOOLEAN
Rule 83    condicionL -> ID opL ID
Rule 84    condicionL -> ID opL BOOLEAN
Rule 85    condicionL -> BOOLEAN opL ID
Rule 86    condicionR -> INT opR INT
Rule 87    condicionR -> INT opR FLOAT
Rule 88    condicionR -> INT opR LONG
Rule 89    condicionR -> FLOAT opR FLOAT
Rule 90    condicionR -> FLOAT opR INT
Rule 91    condicionR -> FLOAT opR LONG
Rule 92    condicionR -> LONG opR LONG
Rule 93    condicionR -> LONG opR INT
Rule 94    condicionR -> LONG opR FLOAT
Rule 95    condicionR -> STRING_1 opR STRING_1
Rule 96    condicionR -> CHAR opR CHAR
Rule 97    condicionR -> ID opR ID
Rule 98    condicionN -> EXCL_WS BOOLEAN
Rule 99    condicionN -> EXCL_WS ID
Rule 100   opL -> CONJ
Rule 101   opL -> DISJ
Rule 102   opR -> LANGLE
Rule 103   opR -> RANGLE
Rule 104   opR -> LE
Rule 105   opR -> GE
Rule 106   opR -> EXCL_EQ
Rule 107   opR -> EXCL_EQEQ
Rule 108   opR -> AS_SAFE
Rule 109   opR -> EQEQ
Rule 110   opR -> EQEQEQ
Rule 111   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 112   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 113   instance_linkedlist -> LINKEDL LPAREN RPAREN
Rule 114   stack_actuar -> ID DOT stack_funciones
Rule 115   stack_funciones -> stack_isEmpty
Rule 116   stack_funciones -> stack_push
Rule 117   stack_funciones -> stack_pop
Rule 118   stack_funciones -> stack_peek
Rule 119   stack_funciones -> stack_size
Rule 120   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 121   stack_pop -> POP LPAREN RPAREN
Rule 122   stack_push -> PUSH LPAREN factor RPAREN
Rule 123   stack_peek -> PEEK LPAREN RPAREN
Rule 124   stack_size -> SIZE LPAREN RPAREN
Rule 125   Lmetod -> FIRST LPAREN RPAREN
Rule 126   Lmetod -> LAST LPAREN RPAREN
Rule 127   Lmetod -> REMOVEL LPAREN RPAREN
Rule 128   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 129   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 130   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 131   while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
Rule 132   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 133   lsimplem -> ID DOT Lmetod
Rule 134   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 26
ANNOTATION           : 
APPEND               : 128
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 108
AT_NO_WS             : 
BOOLEAN              : 48 73 82 82 84 85 98
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 49 72 96 96
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 100
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 65
DISJ                 : 101
DIVIDE               : 62
DIVIDEIN             : 
DO                   : 
DOT                  : 26 27 28 29 36 114 133 134
DOTS                 : 32 43 111 132
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 78
ENUM                 : 
EQEQ                 : 109
EQEQEQ               : 110
EQUAL                : 32 44 45 46 47 48 49 50 111 132
EXCL_EQ              : 106
EXCL_EQEQ            : 107
EXCL_NO_WS           : 
EXCL_WS              : 98 99
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 125
FLOAT                : 47 70 87 89 89 90 91 94
FOR                  : 33
FUN                  : 
GE                   : 105
GET                  : 
HASH                 : 
ID                   : 26 27 28 29 32 33 34 36 43 44 74 83 83 84 85 97 97 99 111 114 131 132 133 134
IF                   : 76 77
IMPORT               : 
IN                   : 33
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 64
INCREMENTTIMES       : 
INDICES              : 36
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 35 35 45 69 86 86 87 88 90 93 131
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 120
LANGLE               : 32 32 102 112 132 132
LAST                 : 126
LATEINIT             : 
LCURL                : 33 76 77 78 131
LE                   : 104
LINEBREAK            : 
LINKEDL              : 32 113 132 132
LISTOF               : 
LONG                 : 46 71 88 91 92 92 93 94
LPAREN               : 26 27 28 29 30 31 32 33 68 76 77 113 120 121 122 123 124 125 126 127 128 129 130 131 132
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 60
MOD                  : 63
MODIN                : 
NOINLINE             : 
OBJECT               : 128 129 132 132
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 27 123
PLUS                 : 59
POLL                 : 28
POP                  : 121
PRINT                : 30
PRINTLN              : 31
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 122
QUEST_WS             : 
QUEUE                : 32
RANGE                : 
RANGLE               : 32 32 103 112 132 132
RCURL                : 33 76 77 78 131
RECEIVER             : 
REIFIED              : 
REMOVE               : 29
REMOVEI              : 130
REMOVEL              : 127
REMOVEN              : 129
RETURN               : 
RPAREN               : 26 27 28 29 30 31 32 33 68 76 77 113 120 121 122 123 124 125 126 127 128 129 130 131 132
RSQUARE              : 
SEALED               : 
SEMICOLON            : 9
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 124
STACK                : 112
STRING_1             : 50 75 95 95
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 48 55
TCHAR                : 49 56
TDOUBLE              : 54
TEMPLATE             : 
TFLOAT               : 47 53
THIS                 : 
THREEDOTS            : 35
THROW                : 
TIMES                : 61
TINT                 : 45 51 130
TLONG                : 46 52
TRY                  : 
TSTRING              : 50 57
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 32 42
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 41
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 131
error                : 

Nonterminals, with rules where they appear

Cmetod               : 134
Lmetod               : 133
asignacion           : 6
asignacionSimple     : 39 40
blocks               : 8 9
condicion            : 4 76 77
condicionL           : 79
condicionN           : 81
condicionR           : 80
def_estruct_tipoDato : 15 111
else                 : 77
estructurasControl   : 3
estructurasDatos     : 7
expression           : 2 30 31 58 59 60 61 62 63 64 65 68
factor               : 26 67 122
for                  : 19
if                   : 20
impresion            : 5
instance_linkedlist  : 14 111
iterable             : 33
keywordVariables     : 39 111 132
lcomp                : 18
line                 : 37 38 76 77 78 0
lineas               : 1
lista                : 16
lsimplem             : 17
morelines            : 33 38 131
opL                  : 82 83 84 85
opR                  : 86 87 88 89 90 91 92 93 94 95 96 97 131
queue                : 10
queue_add            : 22
queue_operations     : 11
queue_peek           : 23
queue_poll           : 25
queue_remove         : 24
stack                : 12
stack_actuar         : 13
stack_funciones      : 114
stack_isEmpty        : 115
stack_peek           : 118
stack_pop            : 117
stack_push           : 116
stack_size           : 119
term                 : 59 60 61 62 63 66
tipoDato             : 32 32 112
tipoDatoEspecifico   : 43
valor                : 44
while                : 21

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (19) estructurasControl -> . for
    (20) estructurasControl -> . if
    (21) estructurasControl -> . while
    (79) condicion -> . condicionL
    (80) condicion -> . condicionR
    (81) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (33) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (76) if -> . IF LPAREN condicion RPAREN LCURL line RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL line RCURL else
    (131) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (82) condicionL -> . BOOLEAN opL BOOLEAN
    (83) condicionL -> . ID opL ID
    (84) condicionL -> . ID opL BOOLEAN
    (85) condicionL -> . BOOLEAN opL ID
    (86) condicionR -> . INT opR INT
    (87) condicionR -> . INT opR FLOAT
    (88) condicionR -> . INT opR LONG
    (89) condicionR -> . FLOAT opR FLOAT
    (90) condicionR -> . FLOAT opR INT
    (91) condicionR -> . FLOAT opR LONG
    (92) condicionR -> . LONG opR LONG
    (93) condicionR -> . LONG opR INT
    (94) condicionR -> . LONG opR FLOAT
    (95) condicionR -> . STRING_1 opR STRING_1
    (96) condicionR -> . CHAR opR CHAR
    (97) condicionR -> . ID opR ID
    (98) condicionN -> . EXCL_WS BOOLEAN
    (99) condicionN -> . EXCL_WS ID
    (30) impresion -> . PRINT LPAREN expression RPAREN
    (31) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) asignacion -> . keywordVariables asignacionSimple
    (40) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_linkedlist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1
    (41) keywordVariables -> . VAR
    (42) keywordVariables -> . VAL
    (43) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (44) asignacionSimple -> . ID EQUAL valor
    (32) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (22) queue_operations -> . queue_add
    (23) queue_operations -> . queue_peek
    (24) queue_operations -> . queue_remove
    (25) queue_operations -> . queue_poll
    (111) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (114) stack_actuar -> . ID DOT stack_funciones
    (113) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (112) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (132) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (133) lsimplem -> . ID DOT Lmetod
    (134) lcomp -> . ID DOT Cmetod
    (26) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (27) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (29) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (28) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 25
    LONG            shift and go to state 26
    STRING_1        shift and go to state 27
    CHAR            shift and go to state 28
    EXCL_WS         shift and go to state 29
    PRINT           shift and go to state 30
    PRINTLN         shift and go to state 31
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    LINKEDL         shift and go to state 45
    STACK           shift and go to state 50

    line                           shift and go to state 1
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 32
    asignacionSimple               shift and go to state 33
    queue                          shift and go to state 34
    queue_operations               shift and go to state 35
    stack                          shift and go to state 36
    stack_actuar                   shift and go to state 37
    instance_linkedlist            shift and go to state 38
    def_estruct_tipoDato           shift and go to state 39
    lista                          shift and go to state 40
    lsimplem                       shift and go to state 41
    lcomp                          shift and go to state 42
    queue_add                      shift and go to state 46
    queue_peek                     shift and go to state 47
    queue_remove                   shift and go to state 48
    queue_poll                     shift and go to state 49

state 1

    (0) S' -> line .



state 2

    (1) line -> lineas .

    $end            reduce using rule 1 (line -> lineas .)
    RCURL           reduce using rule 1 (line -> lineas .)
    LPAREN          reduce using rule 1 (line -> lineas .)
    FOR             reduce using rule 1 (line -> lineas .)
    IF              reduce using rule 1 (line -> lineas .)
    WHILE           reduce using rule 1 (line -> lineas .)
    BOOLEAN         reduce using rule 1 (line -> lineas .)
    ID              reduce using rule 1 (line -> lineas .)
    INT             reduce using rule 1 (line -> lineas .)
    FLOAT           reduce using rule 1 (line -> lineas .)
    LONG            reduce using rule 1 (line -> lineas .)
    STRING_1        reduce using rule 1 (line -> lineas .)
    CHAR            reduce using rule 1 (line -> lineas .)
    EXCL_WS         reduce using rule 1 (line -> lineas .)
    PRINT           reduce using rule 1 (line -> lineas .)
    PRINTLN         reduce using rule 1 (line -> lineas .)
    VAR             reduce using rule 1 (line -> lineas .)
    VAL             reduce using rule 1 (line -> lineas .)
    LINKEDL         reduce using rule 1 (line -> lineas .)
    STACK           reduce using rule 1 (line -> lineas .)


state 3

    (2) line -> expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term
    (61) expression -> expression . TIMES term
    (62) expression -> expression . DIVIDE term
    (63) expression -> expression . MOD term
    (64) expression -> expression . INCREMENTONE
    (65) expression -> expression . DECREMENTONE

    $end            reduce using rule 2 (line -> expression .)
    RCURL           reduce using rule 2 (line -> expression .)
    LPAREN          reduce using rule 2 (line -> expression .)
    FOR             reduce using rule 2 (line -> expression .)
    IF              reduce using rule 2 (line -> expression .)
    WHILE           reduce using rule 2 (line -> expression .)
    BOOLEAN         reduce using rule 2 (line -> expression .)
    ID              reduce using rule 2 (line -> expression .)
    INT             reduce using rule 2 (line -> expression .)
    FLOAT           reduce using rule 2 (line -> expression .)
    LONG            reduce using rule 2 (line -> expression .)
    STRING_1        reduce using rule 2 (line -> expression .)
    CHAR            reduce using rule 2 (line -> expression .)
    EXCL_WS         reduce using rule 2 (line -> expression .)
    PRINT           reduce using rule 2 (line -> expression .)
    PRINTLN         reduce using rule 2 (line -> expression .)
    VAR             reduce using rule 2 (line -> expression .)
    VAL             reduce using rule 2 (line -> expression .)
    LINKEDL         reduce using rule 2 (line -> expression .)
    STACK           reduce using rule 2 (line -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 4

    (3) line -> estructurasControl .

    $end            reduce using rule 3 (line -> estructurasControl .)
    RCURL           reduce using rule 3 (line -> estructurasControl .)
    LPAREN          reduce using rule 3 (line -> estructurasControl .)
    FOR             reduce using rule 3 (line -> estructurasControl .)
    IF              reduce using rule 3 (line -> estructurasControl .)
    WHILE           reduce using rule 3 (line -> estructurasControl .)
    BOOLEAN         reduce using rule 3 (line -> estructurasControl .)
    ID              reduce using rule 3 (line -> estructurasControl .)
    INT             reduce using rule 3 (line -> estructurasControl .)
    FLOAT           reduce using rule 3 (line -> estructurasControl .)
    LONG            reduce using rule 3 (line -> estructurasControl .)
    STRING_1        reduce using rule 3 (line -> estructurasControl .)
    CHAR            reduce using rule 3 (line -> estructurasControl .)
    EXCL_WS         reduce using rule 3 (line -> estructurasControl .)
    PRINT           reduce using rule 3 (line -> estructurasControl .)
    PRINTLN         reduce using rule 3 (line -> estructurasControl .)
    VAR             reduce using rule 3 (line -> estructurasControl .)
    VAL             reduce using rule 3 (line -> estructurasControl .)
    LINKEDL         reduce using rule 3 (line -> estructurasControl .)
    STACK           reduce using rule 3 (line -> estructurasControl .)


state 5

    (4) line -> condicion .

    $end            reduce using rule 4 (line -> condicion .)
    RCURL           reduce using rule 4 (line -> condicion .)
    LPAREN          reduce using rule 4 (line -> condicion .)
    FOR             reduce using rule 4 (line -> condicion .)
    IF              reduce using rule 4 (line -> condicion .)
    WHILE           reduce using rule 4 (line -> condicion .)
    BOOLEAN         reduce using rule 4 (line -> condicion .)
    ID              reduce using rule 4 (line -> condicion .)
    INT             reduce using rule 4 (line -> condicion .)
    FLOAT           reduce using rule 4 (line -> condicion .)
    LONG            reduce using rule 4 (line -> condicion .)
    STRING_1        reduce using rule 4 (line -> condicion .)
    CHAR            reduce using rule 4 (line -> condicion .)
    EXCL_WS         reduce using rule 4 (line -> condicion .)
    PRINT           reduce using rule 4 (line -> condicion .)
    PRINTLN         reduce using rule 4 (line -> condicion .)
    VAR             reduce using rule 4 (line -> condicion .)
    VAL             reduce using rule 4 (line -> condicion .)
    LINKEDL         reduce using rule 4 (line -> condicion .)
    STACK           reduce using rule 4 (line -> condicion .)


state 6

    (8) lineas -> blocks .
    (9) lineas -> blocks . SEMICOLON

    $end            reduce using rule 8 (lineas -> blocks .)
    RCURL           reduce using rule 8 (lineas -> blocks .)
    LPAREN          reduce using rule 8 (lineas -> blocks .)
    FOR             reduce using rule 8 (lineas -> blocks .)
    IF              reduce using rule 8 (lineas -> blocks .)
    WHILE           reduce using rule 8 (lineas -> blocks .)
    BOOLEAN         reduce using rule 8 (lineas -> blocks .)
    ID              reduce using rule 8 (lineas -> blocks .)
    INT             reduce using rule 8 (lineas -> blocks .)
    FLOAT           reduce using rule 8 (lineas -> blocks .)
    LONG            reduce using rule 8 (lineas -> blocks .)
    STRING_1        reduce using rule 8 (lineas -> blocks .)
    CHAR            reduce using rule 8 (lineas -> blocks .)
    EXCL_WS         reduce using rule 8 (lineas -> blocks .)
    PRINT           reduce using rule 8 (lineas -> blocks .)
    PRINTLN         reduce using rule 8 (lineas -> blocks .)
    VAR             reduce using rule 8 (lineas -> blocks .)
    VAL             reduce using rule 8 (lineas -> blocks .)
    LINKEDL         reduce using rule 8 (lineas -> blocks .)
    STACK           reduce using rule 8 (lineas -> blocks .)
    SEMICOLON       shift and go to state 58


state 7

    (66) expression -> term .

    PLUS            reduce using rule 66 (expression -> term .)
    MINUS           reduce using rule 66 (expression -> term .)
    TIMES           reduce using rule 66 (expression -> term .)
    DIVIDE          reduce using rule 66 (expression -> term .)
    MOD             reduce using rule 66 (expression -> term .)
    INCREMENTONE    reduce using rule 66 (expression -> term .)
    DECREMENTONE    reduce using rule 66 (expression -> term .)
    $end            reduce using rule 66 (expression -> term .)
    RPAREN          reduce using rule 66 (expression -> term .)
    SEMICOLON       reduce using rule 66 (expression -> term .)
    RCURL           reduce using rule 66 (expression -> term .)
    LPAREN          reduce using rule 66 (expression -> term .)
    FOR             reduce using rule 66 (expression -> term .)
    IF              reduce using rule 66 (expression -> term .)
    WHILE           reduce using rule 66 (expression -> term .)
    BOOLEAN         reduce using rule 66 (expression -> term .)
    ID              reduce using rule 66 (expression -> term .)
    INT             reduce using rule 66 (expression -> term .)
    FLOAT           reduce using rule 66 (expression -> term .)
    LONG            reduce using rule 66 (expression -> term .)
    STRING_1        reduce using rule 66 (expression -> term .)
    CHAR            reduce using rule 66 (expression -> term .)
    EXCL_WS         reduce using rule 66 (expression -> term .)
    PRINT           reduce using rule 66 (expression -> term .)
    PRINTLN         reduce using rule 66 (expression -> term .)
    VAR             reduce using rule 66 (expression -> term .)
    VAL             reduce using rule 66 (expression -> term .)
    LINKEDL         reduce using rule 66 (expression -> term .)
    STACK           reduce using rule 66 (expression -> term .)


state 8

    (19) estructurasControl -> for .

    $end            reduce using rule 19 (estructurasControl -> for .)
    RCURL           reduce using rule 19 (estructurasControl -> for .)
    LPAREN          reduce using rule 19 (estructurasControl -> for .)
    FOR             reduce using rule 19 (estructurasControl -> for .)
    IF              reduce using rule 19 (estructurasControl -> for .)
    WHILE           reduce using rule 19 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 19 (estructurasControl -> for .)
    ID              reduce using rule 19 (estructurasControl -> for .)
    INT             reduce using rule 19 (estructurasControl -> for .)
    FLOAT           reduce using rule 19 (estructurasControl -> for .)
    LONG            reduce using rule 19 (estructurasControl -> for .)
    STRING_1        reduce using rule 19 (estructurasControl -> for .)
    CHAR            reduce using rule 19 (estructurasControl -> for .)
    EXCL_WS         reduce using rule 19 (estructurasControl -> for .)
    PRINT           reduce using rule 19 (estructurasControl -> for .)
    PRINTLN         reduce using rule 19 (estructurasControl -> for .)
    VAR             reduce using rule 19 (estructurasControl -> for .)
    VAL             reduce using rule 19 (estructurasControl -> for .)
    LINKEDL         reduce using rule 19 (estructurasControl -> for .)
    STACK           reduce using rule 19 (estructurasControl -> for .)


state 9

    (20) estructurasControl -> if .

    $end            reduce using rule 20 (estructurasControl -> if .)
    RCURL           reduce using rule 20 (estructurasControl -> if .)
    LPAREN          reduce using rule 20 (estructurasControl -> if .)
    FOR             reduce using rule 20 (estructurasControl -> if .)
    IF              reduce using rule 20 (estructurasControl -> if .)
    WHILE           reduce using rule 20 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 20 (estructurasControl -> if .)
    ID              reduce using rule 20 (estructurasControl -> if .)
    INT             reduce using rule 20 (estructurasControl -> if .)
    FLOAT           reduce using rule 20 (estructurasControl -> if .)
    LONG            reduce using rule 20 (estructurasControl -> if .)
    STRING_1        reduce using rule 20 (estructurasControl -> if .)
    CHAR            reduce using rule 20 (estructurasControl -> if .)
    EXCL_WS         reduce using rule 20 (estructurasControl -> if .)
    PRINT           reduce using rule 20 (estructurasControl -> if .)
    PRINTLN         reduce using rule 20 (estructurasControl -> if .)
    VAR             reduce using rule 20 (estructurasControl -> if .)
    VAL             reduce using rule 20 (estructurasControl -> if .)
    LINKEDL         reduce using rule 20 (estructurasControl -> if .)
    STACK           reduce using rule 20 (estructurasControl -> if .)


state 10

    (21) estructurasControl -> while .

    $end            reduce using rule 21 (estructurasControl -> while .)
    RCURL           reduce using rule 21 (estructurasControl -> while .)
    LPAREN          reduce using rule 21 (estructurasControl -> while .)
    FOR             reduce using rule 21 (estructurasControl -> while .)
    IF              reduce using rule 21 (estructurasControl -> while .)
    WHILE           reduce using rule 21 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 21 (estructurasControl -> while .)
    ID              reduce using rule 21 (estructurasControl -> while .)
    INT             reduce using rule 21 (estructurasControl -> while .)
    FLOAT           reduce using rule 21 (estructurasControl -> while .)
    LONG            reduce using rule 21 (estructurasControl -> while .)
    STRING_1        reduce using rule 21 (estructurasControl -> while .)
    CHAR            reduce using rule 21 (estructurasControl -> while .)
    EXCL_WS         reduce using rule 21 (estructurasControl -> while .)
    PRINT           reduce using rule 21 (estructurasControl -> while .)
    PRINTLN         reduce using rule 21 (estructurasControl -> while .)
    VAR             reduce using rule 21 (estructurasControl -> while .)
    VAL             reduce using rule 21 (estructurasControl -> while .)
    LINKEDL         reduce using rule 21 (estructurasControl -> while .)
    STACK           reduce using rule 21 (estructurasControl -> while .)


state 11

    (79) condicion -> condicionL .

    $end            reduce using rule 79 (condicion -> condicionL .)
    RPAREN          reduce using rule 79 (condicion -> condicionL .)
    RCURL           reduce using rule 79 (condicion -> condicionL .)
    LPAREN          reduce using rule 79 (condicion -> condicionL .)
    FOR             reduce using rule 79 (condicion -> condicionL .)
    IF              reduce using rule 79 (condicion -> condicionL .)
    WHILE           reduce using rule 79 (condicion -> condicionL .)
    BOOLEAN         reduce using rule 79 (condicion -> condicionL .)
    ID              reduce using rule 79 (condicion -> condicionL .)
    INT             reduce using rule 79 (condicion -> condicionL .)
    FLOAT           reduce using rule 79 (condicion -> condicionL .)
    LONG            reduce using rule 79 (condicion -> condicionL .)
    STRING_1        reduce using rule 79 (condicion -> condicionL .)
    CHAR            reduce using rule 79 (condicion -> condicionL .)
    EXCL_WS         reduce using rule 79 (condicion -> condicionL .)
    PRINT           reduce using rule 79 (condicion -> condicionL .)
    PRINTLN         reduce using rule 79 (condicion -> condicionL .)
    VAR             reduce using rule 79 (condicion -> condicionL .)
    VAL             reduce using rule 79 (condicion -> condicionL .)
    LINKEDL         reduce using rule 79 (condicion -> condicionL .)
    STACK           reduce using rule 79 (condicion -> condicionL .)


state 12

    (80) condicion -> condicionR .

    $end            reduce using rule 80 (condicion -> condicionR .)
    RPAREN          reduce using rule 80 (condicion -> condicionR .)
    RCURL           reduce using rule 80 (condicion -> condicionR .)
    LPAREN          reduce using rule 80 (condicion -> condicionR .)
    FOR             reduce using rule 80 (condicion -> condicionR .)
    IF              reduce using rule 80 (condicion -> condicionR .)
    WHILE           reduce using rule 80 (condicion -> condicionR .)
    BOOLEAN         reduce using rule 80 (condicion -> condicionR .)
    ID              reduce using rule 80 (condicion -> condicionR .)
    INT             reduce using rule 80 (condicion -> condicionR .)
    FLOAT           reduce using rule 80 (condicion -> condicionR .)
    LONG            reduce using rule 80 (condicion -> condicionR .)
    STRING_1        reduce using rule 80 (condicion -> condicionR .)
    CHAR            reduce using rule 80 (condicion -> condicionR .)
    EXCL_WS         reduce using rule 80 (condicion -> condicionR .)
    PRINT           reduce using rule 80 (condicion -> condicionR .)
    PRINTLN         reduce using rule 80 (condicion -> condicionR .)
    VAR             reduce using rule 80 (condicion -> condicionR .)
    VAL             reduce using rule 80 (condicion -> condicionR .)
    LINKEDL         reduce using rule 80 (condicion -> condicionR .)
    STACK           reduce using rule 80 (condicion -> condicionR .)


state 13

    (81) condicion -> condicionN .

    $end            reduce using rule 81 (condicion -> condicionN .)
    RPAREN          reduce using rule 81 (condicion -> condicionN .)
    RCURL           reduce using rule 81 (condicion -> condicionN .)
    LPAREN          reduce using rule 81 (condicion -> condicionN .)
    FOR             reduce using rule 81 (condicion -> condicionN .)
    IF              reduce using rule 81 (condicion -> condicionN .)
    WHILE           reduce using rule 81 (condicion -> condicionN .)
    BOOLEAN         reduce using rule 81 (condicion -> condicionN .)
    ID              reduce using rule 81 (condicion -> condicionN .)
    INT             reduce using rule 81 (condicion -> condicionN .)
    FLOAT           reduce using rule 81 (condicion -> condicionN .)
    LONG            reduce using rule 81 (condicion -> condicionN .)
    STRING_1        reduce using rule 81 (condicion -> condicionN .)
    CHAR            reduce using rule 81 (condicion -> condicionN .)
    EXCL_WS         reduce using rule 81 (condicion -> condicionN .)
    PRINT           reduce using rule 81 (condicion -> condicionN .)
    PRINTLN         reduce using rule 81 (condicion -> condicionN .)
    VAR             reduce using rule 81 (condicion -> condicionN .)
    VAL             reduce using rule 81 (condicion -> condicionN .)
    LINKEDL         reduce using rule 81 (condicion -> condicionN .)
    STACK           reduce using rule 81 (condicion -> condicionN .)


state 14

    (5) blocks -> impresion .

    SEMICOLON       reduce using rule 5 (blocks -> impresion .)
    $end            reduce using rule 5 (blocks -> impresion .)
    RCURL           reduce using rule 5 (blocks -> impresion .)
    LPAREN          reduce using rule 5 (blocks -> impresion .)
    FOR             reduce using rule 5 (blocks -> impresion .)
    IF              reduce using rule 5 (blocks -> impresion .)
    WHILE           reduce using rule 5 (blocks -> impresion .)
    BOOLEAN         reduce using rule 5 (blocks -> impresion .)
    ID              reduce using rule 5 (blocks -> impresion .)
    INT             reduce using rule 5 (blocks -> impresion .)
    FLOAT           reduce using rule 5 (blocks -> impresion .)
    LONG            reduce using rule 5 (blocks -> impresion .)
    STRING_1        reduce using rule 5 (blocks -> impresion .)
    CHAR            reduce using rule 5 (blocks -> impresion .)
    EXCL_WS         reduce using rule 5 (blocks -> impresion .)
    PRINT           reduce using rule 5 (blocks -> impresion .)
    PRINTLN         reduce using rule 5 (blocks -> impresion .)
    VAR             reduce using rule 5 (blocks -> impresion .)
    VAL             reduce using rule 5 (blocks -> impresion .)
    LINKEDL         reduce using rule 5 (blocks -> impresion .)
    STACK           reduce using rule 5 (blocks -> impresion .)


state 15

    (6) blocks -> asignacion .

    SEMICOLON       reduce using rule 6 (blocks -> asignacion .)
    $end            reduce using rule 6 (blocks -> asignacion .)
    RCURL           reduce using rule 6 (blocks -> asignacion .)
    LPAREN          reduce using rule 6 (blocks -> asignacion .)
    FOR             reduce using rule 6 (blocks -> asignacion .)
    IF              reduce using rule 6 (blocks -> asignacion .)
    WHILE           reduce using rule 6 (blocks -> asignacion .)
    BOOLEAN         reduce using rule 6 (blocks -> asignacion .)
    ID              reduce using rule 6 (blocks -> asignacion .)
    INT             reduce using rule 6 (blocks -> asignacion .)
    FLOAT           reduce using rule 6 (blocks -> asignacion .)
    LONG            reduce using rule 6 (blocks -> asignacion .)
    STRING_1        reduce using rule 6 (blocks -> asignacion .)
    CHAR            reduce using rule 6 (blocks -> asignacion .)
    EXCL_WS         reduce using rule 6 (blocks -> asignacion .)
    PRINT           reduce using rule 6 (blocks -> asignacion .)
    PRINTLN         reduce using rule 6 (blocks -> asignacion .)
    VAR             reduce using rule 6 (blocks -> asignacion .)
    VAL             reduce using rule 6 (blocks -> asignacion .)
    LINKEDL         reduce using rule 6 (blocks -> asignacion .)
    STACK           reduce using rule 6 (blocks -> asignacion .)


state 16

    (7) blocks -> estructurasDatos .

    SEMICOLON       reduce using rule 7 (blocks -> estructurasDatos .)
    $end            reduce using rule 7 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 7 (blocks -> estructurasDatos .)
    LPAREN          reduce using rule 7 (blocks -> estructurasDatos .)
    FOR             reduce using rule 7 (blocks -> estructurasDatos .)
    IF              reduce using rule 7 (blocks -> estructurasDatos .)
    WHILE           reduce using rule 7 (blocks -> estructurasDatos .)
    BOOLEAN         reduce using rule 7 (blocks -> estructurasDatos .)
    ID              reduce using rule 7 (blocks -> estructurasDatos .)
    INT             reduce using rule 7 (blocks -> estructurasDatos .)
    FLOAT           reduce using rule 7 (blocks -> estructurasDatos .)
    LONG            reduce using rule 7 (blocks -> estructurasDatos .)
    STRING_1        reduce using rule 7 (blocks -> estructurasDatos .)
    CHAR            reduce using rule 7 (blocks -> estructurasDatos .)
    EXCL_WS         reduce using rule 7 (blocks -> estructurasDatos .)
    PRINT           reduce using rule 7 (blocks -> estructurasDatos .)
    PRINTLN         reduce using rule 7 (blocks -> estructurasDatos .)
    VAR             reduce using rule 7 (blocks -> estructurasDatos .)
    VAL             reduce using rule 7 (blocks -> estructurasDatos .)
    LINKEDL         reduce using rule 7 (blocks -> estructurasDatos .)
    STACK           reduce using rule 7 (blocks -> estructurasDatos .)


state 17

    (67) term -> factor .

    PLUS            reduce using rule 67 (term -> factor .)
    MINUS           reduce using rule 67 (term -> factor .)
    TIMES           reduce using rule 67 (term -> factor .)
    DIVIDE          reduce using rule 67 (term -> factor .)
    MOD             reduce using rule 67 (term -> factor .)
    INCREMENTONE    reduce using rule 67 (term -> factor .)
    DECREMENTONE    reduce using rule 67 (term -> factor .)
    $end            reduce using rule 67 (term -> factor .)
    RPAREN          reduce using rule 67 (term -> factor .)
    SEMICOLON       reduce using rule 67 (term -> factor .)
    RCURL           reduce using rule 67 (term -> factor .)
    LPAREN          reduce using rule 67 (term -> factor .)
    FOR             reduce using rule 67 (term -> factor .)
    IF              reduce using rule 67 (term -> factor .)
    WHILE           reduce using rule 67 (term -> factor .)
    BOOLEAN         reduce using rule 67 (term -> factor .)
    ID              reduce using rule 67 (term -> factor .)
    INT             reduce using rule 67 (term -> factor .)
    FLOAT           reduce using rule 67 (term -> factor .)
    LONG            reduce using rule 67 (term -> factor .)
    STRING_1        reduce using rule 67 (term -> factor .)
    CHAR            reduce using rule 67 (term -> factor .)
    EXCL_WS         reduce using rule 67 (term -> factor .)
    PRINT           reduce using rule 67 (term -> factor .)
    PRINTLN         reduce using rule 67 (term -> factor .)
    VAR             reduce using rule 67 (term -> factor .)
    VAL             reduce using rule 67 (term -> factor .)
    LINKEDL         reduce using rule 67 (term -> factor .)
    STACK           reduce using rule 67 (term -> factor .)


state 18

    (68) term -> LPAREN . expression RPAREN
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    expression                     shift and go to state 59
    term                           shift and go to state 7
    factor                         shift and go to state 17

state 19

    (33) for -> FOR . LPAREN ID IN iterable RPAREN LCURL morelines RCURL

    LPAREN          shift and go to state 67


state 20

    (83) condicionL -> ID . opL ID
    (84) condicionL -> ID . opL BOOLEAN
    (97) condicionR -> ID . opR ID
    (74) factor -> ID .
    (43) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (44) asignacionSimple -> ID . EQUAL valor
    (114) stack_actuar -> ID . DOT stack_funciones
    (133) lsimplem -> ID . DOT Lmetod
    (134) lcomp -> ID . DOT Cmetod
    (26) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (27) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (29) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (28) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (100) opL -> . CONJ
    (101) opL -> . DISJ
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)
    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    MOD             reduce using rule 74 (factor -> ID .)
    INCREMENTONE    reduce using rule 74 (factor -> ID .)
    DECREMENTONE    reduce using rule 74 (factor -> ID .)
    $end            reduce using rule 74 (factor -> ID .)
    RCURL           reduce using rule 74 (factor -> ID .)
    LPAREN          reduce using rule 74 (factor -> ID .)
    FOR             reduce using rule 74 (factor -> ID .)
    IF              reduce using rule 74 (factor -> ID .)
    WHILE           reduce using rule 74 (factor -> ID .)
    BOOLEAN         reduce using rule 74 (factor -> ID .)
    ID              reduce using rule 74 (factor -> ID .)
    INT             reduce using rule 74 (factor -> ID .)
    FLOAT           reduce using rule 74 (factor -> ID .)
    LONG            reduce using rule 74 (factor -> ID .)
    STRING_1        reduce using rule 74 (factor -> ID .)
    CHAR            reduce using rule 74 (factor -> ID .)
    EXCL_WS         reduce using rule 74 (factor -> ID .)
    PRINT           reduce using rule 74 (factor -> ID .)
    PRINTLN         reduce using rule 74 (factor -> ID .)
    VAR             reduce using rule 74 (factor -> ID .)
    VAL             reduce using rule 74 (factor -> ID .)
    LINKEDL         reduce using rule 74 (factor -> ID .)
    STACK           reduce using rule 74 (factor -> ID .)
    DOTS            shift and go to state 70
    EQUAL           shift and go to state 71
    DOT             shift and go to state 72
    CONJ            shift and go to state 73
    DISJ            shift and go to state 74
    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opL                            shift and go to state 68
    opR                            shift and go to state 69

state 21

    (76) if -> IF . LPAREN condicion RPAREN LCURL line RCURL
    (77) if -> IF . LPAREN condicion RPAREN LCURL line RCURL else

    LPAREN          shift and go to state 84


state 22

    (131) while -> WHILE . LPAREN ID opR INT RPAREN LCURL morelines RCURL

    LPAREN          shift and go to state 85


state 23

    (86) condicionR -> INT . opR INT
    (87) condicionR -> INT . opR FLOAT
    (88) condicionR -> INT . opR LONG
    (69) factor -> INT .
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    PLUS            reduce using rule 69 (factor -> INT .)
    MINUS           reduce using rule 69 (factor -> INT .)
    TIMES           reduce using rule 69 (factor -> INT .)
    DIVIDE          reduce using rule 69 (factor -> INT .)
    MOD             reduce using rule 69 (factor -> INT .)
    INCREMENTONE    reduce using rule 69 (factor -> INT .)
    DECREMENTONE    reduce using rule 69 (factor -> INT .)
    $end            reduce using rule 69 (factor -> INT .)
    RCURL           reduce using rule 69 (factor -> INT .)
    LPAREN          reduce using rule 69 (factor -> INT .)
    FOR             reduce using rule 69 (factor -> INT .)
    IF              reduce using rule 69 (factor -> INT .)
    WHILE           reduce using rule 69 (factor -> INT .)
    BOOLEAN         reduce using rule 69 (factor -> INT .)
    ID              reduce using rule 69 (factor -> INT .)
    INT             reduce using rule 69 (factor -> INT .)
    FLOAT           reduce using rule 69 (factor -> INT .)
    LONG            reduce using rule 69 (factor -> INT .)
    STRING_1        reduce using rule 69 (factor -> INT .)
    CHAR            reduce using rule 69 (factor -> INT .)
    EXCL_WS         reduce using rule 69 (factor -> INT .)
    PRINT           reduce using rule 69 (factor -> INT .)
    PRINTLN         reduce using rule 69 (factor -> INT .)
    VAR             reduce using rule 69 (factor -> INT .)
    VAL             reduce using rule 69 (factor -> INT .)
    LINKEDL         reduce using rule 69 (factor -> INT .)
    STACK           reduce using rule 69 (factor -> INT .)
    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 86

state 24

    (82) condicionL -> BOOLEAN . opL BOOLEAN
    (85) condicionL -> BOOLEAN . opL ID
    (73) factor -> BOOLEAN .
    (100) opL -> . CONJ
    (101) opL -> . DISJ

    PLUS            reduce using rule 73 (factor -> BOOLEAN .)
    MINUS           reduce using rule 73 (factor -> BOOLEAN .)
    TIMES           reduce using rule 73 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 73 (factor -> BOOLEAN .)
    MOD             reduce using rule 73 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 73 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 73 (factor -> BOOLEAN .)
    $end            reduce using rule 73 (factor -> BOOLEAN .)
    RCURL           reduce using rule 73 (factor -> BOOLEAN .)
    LPAREN          reduce using rule 73 (factor -> BOOLEAN .)
    FOR             reduce using rule 73 (factor -> BOOLEAN .)
    IF              reduce using rule 73 (factor -> BOOLEAN .)
    WHILE           reduce using rule 73 (factor -> BOOLEAN .)
    BOOLEAN         reduce using rule 73 (factor -> BOOLEAN .)
    ID              reduce using rule 73 (factor -> BOOLEAN .)
    INT             reduce using rule 73 (factor -> BOOLEAN .)
    FLOAT           reduce using rule 73 (factor -> BOOLEAN .)
    LONG            reduce using rule 73 (factor -> BOOLEAN .)
    STRING_1        reduce using rule 73 (factor -> BOOLEAN .)
    CHAR            reduce using rule 73 (factor -> BOOLEAN .)
    EXCL_WS         reduce using rule 73 (factor -> BOOLEAN .)
    PRINT           reduce using rule 73 (factor -> BOOLEAN .)
    PRINTLN         reduce using rule 73 (factor -> BOOLEAN .)
    VAR             reduce using rule 73 (factor -> BOOLEAN .)
    VAL             reduce using rule 73 (factor -> BOOLEAN .)
    LINKEDL         reduce using rule 73 (factor -> BOOLEAN .)
    STACK           reduce using rule 73 (factor -> BOOLEAN .)
    CONJ            shift and go to state 73
    DISJ            shift and go to state 74

    opL                            shift and go to state 87

state 25

    (89) condicionR -> FLOAT . opR FLOAT
    (90) condicionR -> FLOAT . opR INT
    (91) condicionR -> FLOAT . opR LONG
    (70) factor -> FLOAT .
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    PLUS            reduce using rule 70 (factor -> FLOAT .)
    MINUS           reduce using rule 70 (factor -> FLOAT .)
    TIMES           reduce using rule 70 (factor -> FLOAT .)
    DIVIDE          reduce using rule 70 (factor -> FLOAT .)
    MOD             reduce using rule 70 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 70 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 70 (factor -> FLOAT .)
    $end            reduce using rule 70 (factor -> FLOAT .)
    RCURL           reduce using rule 70 (factor -> FLOAT .)
    LPAREN          reduce using rule 70 (factor -> FLOAT .)
    FOR             reduce using rule 70 (factor -> FLOAT .)
    IF              reduce using rule 70 (factor -> FLOAT .)
    WHILE           reduce using rule 70 (factor -> FLOAT .)
    BOOLEAN         reduce using rule 70 (factor -> FLOAT .)
    ID              reduce using rule 70 (factor -> FLOAT .)
    INT             reduce using rule 70 (factor -> FLOAT .)
    FLOAT           reduce using rule 70 (factor -> FLOAT .)
    LONG            reduce using rule 70 (factor -> FLOAT .)
    STRING_1        reduce using rule 70 (factor -> FLOAT .)
    CHAR            reduce using rule 70 (factor -> FLOAT .)
    EXCL_WS         reduce using rule 70 (factor -> FLOAT .)
    PRINT           reduce using rule 70 (factor -> FLOAT .)
    PRINTLN         reduce using rule 70 (factor -> FLOAT .)
    VAR             reduce using rule 70 (factor -> FLOAT .)
    VAL             reduce using rule 70 (factor -> FLOAT .)
    LINKEDL         reduce using rule 70 (factor -> FLOAT .)
    STACK           reduce using rule 70 (factor -> FLOAT .)
    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 88

state 26

    (92) condicionR -> LONG . opR LONG
    (93) condicionR -> LONG . opR INT
    (94) condicionR -> LONG . opR FLOAT
    (71) factor -> LONG .
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    PLUS            reduce using rule 71 (factor -> LONG .)
    MINUS           reduce using rule 71 (factor -> LONG .)
    TIMES           reduce using rule 71 (factor -> LONG .)
    DIVIDE          reduce using rule 71 (factor -> LONG .)
    MOD             reduce using rule 71 (factor -> LONG .)
    INCREMENTONE    reduce using rule 71 (factor -> LONG .)
    DECREMENTONE    reduce using rule 71 (factor -> LONG .)
    $end            reduce using rule 71 (factor -> LONG .)
    RCURL           reduce using rule 71 (factor -> LONG .)
    LPAREN          reduce using rule 71 (factor -> LONG .)
    FOR             reduce using rule 71 (factor -> LONG .)
    IF              reduce using rule 71 (factor -> LONG .)
    WHILE           reduce using rule 71 (factor -> LONG .)
    BOOLEAN         reduce using rule 71 (factor -> LONG .)
    ID              reduce using rule 71 (factor -> LONG .)
    INT             reduce using rule 71 (factor -> LONG .)
    FLOAT           reduce using rule 71 (factor -> LONG .)
    LONG            reduce using rule 71 (factor -> LONG .)
    STRING_1        reduce using rule 71 (factor -> LONG .)
    CHAR            reduce using rule 71 (factor -> LONG .)
    EXCL_WS         reduce using rule 71 (factor -> LONG .)
    PRINT           reduce using rule 71 (factor -> LONG .)
    PRINTLN         reduce using rule 71 (factor -> LONG .)
    VAR             reduce using rule 71 (factor -> LONG .)
    VAL             reduce using rule 71 (factor -> LONG .)
    LINKEDL         reduce using rule 71 (factor -> LONG .)
    STACK           reduce using rule 71 (factor -> LONG .)
    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 89

state 27

    (95) condicionR -> STRING_1 . opR STRING_1
    (75) factor -> STRING_1 .
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    PLUS            reduce using rule 75 (factor -> STRING_1 .)
    MINUS           reduce using rule 75 (factor -> STRING_1 .)
    TIMES           reduce using rule 75 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 75 (factor -> STRING_1 .)
    MOD             reduce using rule 75 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 75 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 75 (factor -> STRING_1 .)
    $end            reduce using rule 75 (factor -> STRING_1 .)
    RCURL           reduce using rule 75 (factor -> STRING_1 .)
    LPAREN          reduce using rule 75 (factor -> STRING_1 .)
    FOR             reduce using rule 75 (factor -> STRING_1 .)
    IF              reduce using rule 75 (factor -> STRING_1 .)
    WHILE           reduce using rule 75 (factor -> STRING_1 .)
    BOOLEAN         reduce using rule 75 (factor -> STRING_1 .)
    ID              reduce using rule 75 (factor -> STRING_1 .)
    INT             reduce using rule 75 (factor -> STRING_1 .)
    FLOAT           reduce using rule 75 (factor -> STRING_1 .)
    LONG            reduce using rule 75 (factor -> STRING_1 .)
    STRING_1        reduce using rule 75 (factor -> STRING_1 .)
    CHAR            reduce using rule 75 (factor -> STRING_1 .)
    EXCL_WS         reduce using rule 75 (factor -> STRING_1 .)
    PRINT           reduce using rule 75 (factor -> STRING_1 .)
    PRINTLN         reduce using rule 75 (factor -> STRING_1 .)
    VAR             reduce using rule 75 (factor -> STRING_1 .)
    VAL             reduce using rule 75 (factor -> STRING_1 .)
    LINKEDL         reduce using rule 75 (factor -> STRING_1 .)
    STACK           reduce using rule 75 (factor -> STRING_1 .)
    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 90

state 28

    (96) condicionR -> CHAR . opR CHAR
    (72) factor -> CHAR .
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    PLUS            reduce using rule 72 (factor -> CHAR .)
    MINUS           reduce using rule 72 (factor -> CHAR .)
    TIMES           reduce using rule 72 (factor -> CHAR .)
    DIVIDE          reduce using rule 72 (factor -> CHAR .)
    MOD             reduce using rule 72 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 72 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 72 (factor -> CHAR .)
    $end            reduce using rule 72 (factor -> CHAR .)
    RCURL           reduce using rule 72 (factor -> CHAR .)
    LPAREN          reduce using rule 72 (factor -> CHAR .)
    FOR             reduce using rule 72 (factor -> CHAR .)
    IF              reduce using rule 72 (factor -> CHAR .)
    WHILE           reduce using rule 72 (factor -> CHAR .)
    BOOLEAN         reduce using rule 72 (factor -> CHAR .)
    ID              reduce using rule 72 (factor -> CHAR .)
    INT             reduce using rule 72 (factor -> CHAR .)
    FLOAT           reduce using rule 72 (factor -> CHAR .)
    LONG            reduce using rule 72 (factor -> CHAR .)
    STRING_1        reduce using rule 72 (factor -> CHAR .)
    CHAR            reduce using rule 72 (factor -> CHAR .)
    EXCL_WS         reduce using rule 72 (factor -> CHAR .)
    PRINT           reduce using rule 72 (factor -> CHAR .)
    PRINTLN         reduce using rule 72 (factor -> CHAR .)
    VAR             reduce using rule 72 (factor -> CHAR .)
    VAL             reduce using rule 72 (factor -> CHAR .)
    LINKEDL         reduce using rule 72 (factor -> CHAR .)
    STACK           reduce using rule 72 (factor -> CHAR .)
    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 91

state 29

    (98) condicionN -> EXCL_WS . BOOLEAN
    (99) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 92
    ID              shift and go to state 93


state 30

    (30) impresion -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 94


state 31

    (31) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 95


state 32

    (39) asignacion -> keywordVariables . asignacionSimple
    (111) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (43) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (44) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 97

    asignacionSimple               shift and go to state 96

state 33

    (40) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 40 (asignacion -> asignacionSimple .)
    $end            reduce using rule 40 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 40 (asignacion -> asignacionSimple .)
    LPAREN          reduce using rule 40 (asignacion -> asignacionSimple .)
    FOR             reduce using rule 40 (asignacion -> asignacionSimple .)
    IF              reduce using rule 40 (asignacion -> asignacionSimple .)
    WHILE           reduce using rule 40 (asignacion -> asignacionSimple .)
    BOOLEAN         reduce using rule 40 (asignacion -> asignacionSimple .)
    ID              reduce using rule 40 (asignacion -> asignacionSimple .)
    INT             reduce using rule 40 (asignacion -> asignacionSimple .)
    FLOAT           reduce using rule 40 (asignacion -> asignacionSimple .)
    LONG            reduce using rule 40 (asignacion -> asignacionSimple .)
    STRING_1        reduce using rule 40 (asignacion -> asignacionSimple .)
    CHAR            reduce using rule 40 (asignacion -> asignacionSimple .)
    EXCL_WS         reduce using rule 40 (asignacion -> asignacionSimple .)
    PRINT           reduce using rule 40 (asignacion -> asignacionSimple .)
    PRINTLN         reduce using rule 40 (asignacion -> asignacionSimple .)
    VAR             reduce using rule 40 (asignacion -> asignacionSimple .)
    VAL             reduce using rule 40 (asignacion -> asignacionSimple .)
    LINKEDL         reduce using rule 40 (asignacion -> asignacionSimple .)
    STACK           reduce using rule 40 (asignacion -> asignacionSimple .)


state 34

    (10) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 10 (estructurasDatos -> queue .)
    $end            reduce using rule 10 (estructurasDatos -> queue .)
    RCURL           reduce using rule 10 (estructurasDatos -> queue .)
    LPAREN          reduce using rule 10 (estructurasDatos -> queue .)
    FOR             reduce using rule 10 (estructurasDatos -> queue .)
    IF              reduce using rule 10 (estructurasDatos -> queue .)
    WHILE           reduce using rule 10 (estructurasDatos -> queue .)
    BOOLEAN         reduce using rule 10 (estructurasDatos -> queue .)
    ID              reduce using rule 10 (estructurasDatos -> queue .)
    INT             reduce using rule 10 (estructurasDatos -> queue .)
    FLOAT           reduce using rule 10 (estructurasDatos -> queue .)
    LONG            reduce using rule 10 (estructurasDatos -> queue .)
    STRING_1        reduce using rule 10 (estructurasDatos -> queue .)
    CHAR            reduce using rule 10 (estructurasDatos -> queue .)
    EXCL_WS         reduce using rule 10 (estructurasDatos -> queue .)
    PRINT           reduce using rule 10 (estructurasDatos -> queue .)
    PRINTLN         reduce using rule 10 (estructurasDatos -> queue .)
    VAR             reduce using rule 10 (estructurasDatos -> queue .)
    VAL             reduce using rule 10 (estructurasDatos -> queue .)
    LINKEDL         reduce using rule 10 (estructurasDatos -> queue .)
    STACK           reduce using rule 10 (estructurasDatos -> queue .)


state 35

    (11) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 11 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 11 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 11 (estructurasDatos -> queue_operations .)
    LPAREN          reduce using rule 11 (estructurasDatos -> queue_operations .)
    FOR             reduce using rule 11 (estructurasDatos -> queue_operations .)
    IF              reduce using rule 11 (estructurasDatos -> queue_operations .)
    WHILE           reduce using rule 11 (estructurasDatos -> queue_operations .)
    BOOLEAN         reduce using rule 11 (estructurasDatos -> queue_operations .)
    ID              reduce using rule 11 (estructurasDatos -> queue_operations .)
    INT             reduce using rule 11 (estructurasDatos -> queue_operations .)
    FLOAT           reduce using rule 11 (estructurasDatos -> queue_operations .)
    LONG            reduce using rule 11 (estructurasDatos -> queue_operations .)
    STRING_1        reduce using rule 11 (estructurasDatos -> queue_operations .)
    CHAR            reduce using rule 11 (estructurasDatos -> queue_operations .)
    EXCL_WS         reduce using rule 11 (estructurasDatos -> queue_operations .)
    PRINT           reduce using rule 11 (estructurasDatos -> queue_operations .)
    PRINTLN         reduce using rule 11 (estructurasDatos -> queue_operations .)
    VAR             reduce using rule 11 (estructurasDatos -> queue_operations .)
    VAL             reduce using rule 11 (estructurasDatos -> queue_operations .)
    LINKEDL         reduce using rule 11 (estructurasDatos -> queue_operations .)
    STACK           reduce using rule 11 (estructurasDatos -> queue_operations .)


state 36

    (12) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 12 (estructurasDatos -> stack .)
    $end            reduce using rule 12 (estructurasDatos -> stack .)
    RCURL           reduce using rule 12 (estructurasDatos -> stack .)
    LPAREN          reduce using rule 12 (estructurasDatos -> stack .)
    FOR             reduce using rule 12 (estructurasDatos -> stack .)
    IF              reduce using rule 12 (estructurasDatos -> stack .)
    WHILE           reduce using rule 12 (estructurasDatos -> stack .)
    BOOLEAN         reduce using rule 12 (estructurasDatos -> stack .)
    ID              reduce using rule 12 (estructurasDatos -> stack .)
    INT             reduce using rule 12 (estructurasDatos -> stack .)
    FLOAT           reduce using rule 12 (estructurasDatos -> stack .)
    LONG            reduce using rule 12 (estructurasDatos -> stack .)
    STRING_1        reduce using rule 12 (estructurasDatos -> stack .)
    CHAR            reduce using rule 12 (estructurasDatos -> stack .)
    EXCL_WS         reduce using rule 12 (estructurasDatos -> stack .)
    PRINT           reduce using rule 12 (estructurasDatos -> stack .)
    PRINTLN         reduce using rule 12 (estructurasDatos -> stack .)
    VAR             reduce using rule 12 (estructurasDatos -> stack .)
    VAL             reduce using rule 12 (estructurasDatos -> stack .)
    LINKEDL         reduce using rule 12 (estructurasDatos -> stack .)
    STACK           reduce using rule 12 (estructurasDatos -> stack .)


state 37

    (13) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 13 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 13 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    LPAREN          reduce using rule 13 (estructurasDatos -> stack_actuar .)
    FOR             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    IF              reduce using rule 13 (estructurasDatos -> stack_actuar .)
    WHILE           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    BOOLEAN         reduce using rule 13 (estructurasDatos -> stack_actuar .)
    ID              reduce using rule 13 (estructurasDatos -> stack_actuar .)
    INT             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    FLOAT           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    LONG            reduce using rule 13 (estructurasDatos -> stack_actuar .)
    STRING_1        reduce using rule 13 (estructurasDatos -> stack_actuar .)
    CHAR            reduce using rule 13 (estructurasDatos -> stack_actuar .)
    EXCL_WS         reduce using rule 13 (estructurasDatos -> stack_actuar .)
    PRINT           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    PRINTLN         reduce using rule 13 (estructurasDatos -> stack_actuar .)
    VAR             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    VAL             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    LINKEDL         reduce using rule 13 (estructurasDatos -> stack_actuar .)
    STACK           reduce using rule 13 (estructurasDatos -> stack_actuar .)


state 38

    (14) estructurasDatos -> instance_linkedlist .

    SEMICOLON       reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    LPAREN          reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    FOR             reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    IF              reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    WHILE           reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    BOOLEAN         reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    ID              reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    INT             reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    FLOAT           reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    LONG            reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    STRING_1        reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    CHAR            reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    EXCL_WS         reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    PRINT           reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    PRINTLN         reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    VAR             reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    VAL             reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    LINKEDL         reduce using rule 14 (estructurasDatos -> instance_linkedlist .)
    STACK           reduce using rule 14 (estructurasDatos -> instance_linkedlist .)


state 39

    (15) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    LPAREN          reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    FOR             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    IF              reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    WHILE           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    BOOLEAN         reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    ID              reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    INT             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    FLOAT           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    LONG            reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    STRING_1        reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    CHAR            reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    EXCL_WS         reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    PRINT           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    PRINTLN         reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    VAR             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    VAL             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    LINKEDL         reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    STACK           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)


state 40

    (16) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 16 (estructurasDatos -> lista .)
    $end            reduce using rule 16 (estructurasDatos -> lista .)
    RCURL           reduce using rule 16 (estructurasDatos -> lista .)
    LPAREN          reduce using rule 16 (estructurasDatos -> lista .)
    FOR             reduce using rule 16 (estructurasDatos -> lista .)
    IF              reduce using rule 16 (estructurasDatos -> lista .)
    WHILE           reduce using rule 16 (estructurasDatos -> lista .)
    BOOLEAN         reduce using rule 16 (estructurasDatos -> lista .)
    ID              reduce using rule 16 (estructurasDatos -> lista .)
    INT             reduce using rule 16 (estructurasDatos -> lista .)
    FLOAT           reduce using rule 16 (estructurasDatos -> lista .)
    LONG            reduce using rule 16 (estructurasDatos -> lista .)
    STRING_1        reduce using rule 16 (estructurasDatos -> lista .)
    CHAR            reduce using rule 16 (estructurasDatos -> lista .)
    EXCL_WS         reduce using rule 16 (estructurasDatos -> lista .)
    PRINT           reduce using rule 16 (estructurasDatos -> lista .)
    PRINTLN         reduce using rule 16 (estructurasDatos -> lista .)
    VAR             reduce using rule 16 (estructurasDatos -> lista .)
    VAL             reduce using rule 16 (estructurasDatos -> lista .)
    LINKEDL         reduce using rule 16 (estructurasDatos -> lista .)
    STACK           reduce using rule 16 (estructurasDatos -> lista .)


state 41

    (17) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 17 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 17 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 17 (estructurasDatos -> lsimplem .)
    LPAREN          reduce using rule 17 (estructurasDatos -> lsimplem .)
    FOR             reduce using rule 17 (estructurasDatos -> lsimplem .)
    IF              reduce using rule 17 (estructurasDatos -> lsimplem .)
    WHILE           reduce using rule 17 (estructurasDatos -> lsimplem .)
    BOOLEAN         reduce using rule 17 (estructurasDatos -> lsimplem .)
    ID              reduce using rule 17 (estructurasDatos -> lsimplem .)
    INT             reduce using rule 17 (estructurasDatos -> lsimplem .)
    FLOAT           reduce using rule 17 (estructurasDatos -> lsimplem .)
    LONG            reduce using rule 17 (estructurasDatos -> lsimplem .)
    STRING_1        reduce using rule 17 (estructurasDatos -> lsimplem .)
    CHAR            reduce using rule 17 (estructurasDatos -> lsimplem .)
    EXCL_WS         reduce using rule 17 (estructurasDatos -> lsimplem .)
    PRINT           reduce using rule 17 (estructurasDatos -> lsimplem .)
    PRINTLN         reduce using rule 17 (estructurasDatos -> lsimplem .)
    VAR             reduce using rule 17 (estructurasDatos -> lsimplem .)
    VAL             reduce using rule 17 (estructurasDatos -> lsimplem .)
    LINKEDL         reduce using rule 17 (estructurasDatos -> lsimplem .)
    STACK           reduce using rule 17 (estructurasDatos -> lsimplem .)


state 42

    (18) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 18 (estructurasDatos -> lcomp .)
    $end            reduce using rule 18 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 18 (estructurasDatos -> lcomp .)
    LPAREN          reduce using rule 18 (estructurasDatos -> lcomp .)
    FOR             reduce using rule 18 (estructurasDatos -> lcomp .)
    IF              reduce using rule 18 (estructurasDatos -> lcomp .)
    WHILE           reduce using rule 18 (estructurasDatos -> lcomp .)
    BOOLEAN         reduce using rule 18 (estructurasDatos -> lcomp .)
    ID              reduce using rule 18 (estructurasDatos -> lcomp .)
    INT             reduce using rule 18 (estructurasDatos -> lcomp .)
    FLOAT           reduce using rule 18 (estructurasDatos -> lcomp .)
    LONG            reduce using rule 18 (estructurasDatos -> lcomp .)
    STRING_1        reduce using rule 18 (estructurasDatos -> lcomp .)
    CHAR            reduce using rule 18 (estructurasDatos -> lcomp .)
    EXCL_WS         reduce using rule 18 (estructurasDatos -> lcomp .)
    PRINT           reduce using rule 18 (estructurasDatos -> lcomp .)
    PRINTLN         reduce using rule 18 (estructurasDatos -> lcomp .)
    VAR             reduce using rule 18 (estructurasDatos -> lcomp .)
    VAL             reduce using rule 18 (estructurasDatos -> lcomp .)
    LINKEDL         reduce using rule 18 (estructurasDatos -> lcomp .)
    STACK           reduce using rule 18 (estructurasDatos -> lcomp .)


state 43

    (41) keywordVariables -> VAR .

    ID              reduce using rule 41 (keywordVariables -> VAR .)


state 44

    (42) keywordVariables -> VAL .
    (32) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 98

  ! ID              [ reduce using rule 42 (keywordVariables -> VAL .) ]


state 45

    (113) instance_linkedlist -> LINKEDL . LPAREN RPAREN

    LPAREN          shift and go to state 99


state 46

    (22) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 22 (queue_operations -> queue_add .)
    $end            reduce using rule 22 (queue_operations -> queue_add .)
    RCURL           reduce using rule 22 (queue_operations -> queue_add .)
    LPAREN          reduce using rule 22 (queue_operations -> queue_add .)
    FOR             reduce using rule 22 (queue_operations -> queue_add .)
    IF              reduce using rule 22 (queue_operations -> queue_add .)
    WHILE           reduce using rule 22 (queue_operations -> queue_add .)
    BOOLEAN         reduce using rule 22 (queue_operations -> queue_add .)
    ID              reduce using rule 22 (queue_operations -> queue_add .)
    INT             reduce using rule 22 (queue_operations -> queue_add .)
    FLOAT           reduce using rule 22 (queue_operations -> queue_add .)
    LONG            reduce using rule 22 (queue_operations -> queue_add .)
    STRING_1        reduce using rule 22 (queue_operations -> queue_add .)
    CHAR            reduce using rule 22 (queue_operations -> queue_add .)
    EXCL_WS         reduce using rule 22 (queue_operations -> queue_add .)
    PRINT           reduce using rule 22 (queue_operations -> queue_add .)
    PRINTLN         reduce using rule 22 (queue_operations -> queue_add .)
    VAR             reduce using rule 22 (queue_operations -> queue_add .)
    VAL             reduce using rule 22 (queue_operations -> queue_add .)
    LINKEDL         reduce using rule 22 (queue_operations -> queue_add .)
    STACK           reduce using rule 22 (queue_operations -> queue_add .)


state 47

    (23) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 23 (queue_operations -> queue_peek .)
    $end            reduce using rule 23 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 23 (queue_operations -> queue_peek .)
    LPAREN          reduce using rule 23 (queue_operations -> queue_peek .)
    FOR             reduce using rule 23 (queue_operations -> queue_peek .)
    IF              reduce using rule 23 (queue_operations -> queue_peek .)
    WHILE           reduce using rule 23 (queue_operations -> queue_peek .)
    BOOLEAN         reduce using rule 23 (queue_operations -> queue_peek .)
    ID              reduce using rule 23 (queue_operations -> queue_peek .)
    INT             reduce using rule 23 (queue_operations -> queue_peek .)
    FLOAT           reduce using rule 23 (queue_operations -> queue_peek .)
    LONG            reduce using rule 23 (queue_operations -> queue_peek .)
    STRING_1        reduce using rule 23 (queue_operations -> queue_peek .)
    CHAR            reduce using rule 23 (queue_operations -> queue_peek .)
    EXCL_WS         reduce using rule 23 (queue_operations -> queue_peek .)
    PRINT           reduce using rule 23 (queue_operations -> queue_peek .)
    PRINTLN         reduce using rule 23 (queue_operations -> queue_peek .)
    VAR             reduce using rule 23 (queue_operations -> queue_peek .)
    VAL             reduce using rule 23 (queue_operations -> queue_peek .)
    LINKEDL         reduce using rule 23 (queue_operations -> queue_peek .)
    STACK           reduce using rule 23 (queue_operations -> queue_peek .)


state 48

    (24) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 24 (queue_operations -> queue_remove .)
    $end            reduce using rule 24 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 24 (queue_operations -> queue_remove .)
    LPAREN          reduce using rule 24 (queue_operations -> queue_remove .)
    FOR             reduce using rule 24 (queue_operations -> queue_remove .)
    IF              reduce using rule 24 (queue_operations -> queue_remove .)
    WHILE           reduce using rule 24 (queue_operations -> queue_remove .)
    BOOLEAN         reduce using rule 24 (queue_operations -> queue_remove .)
    ID              reduce using rule 24 (queue_operations -> queue_remove .)
    INT             reduce using rule 24 (queue_operations -> queue_remove .)
    FLOAT           reduce using rule 24 (queue_operations -> queue_remove .)
    LONG            reduce using rule 24 (queue_operations -> queue_remove .)
    STRING_1        reduce using rule 24 (queue_operations -> queue_remove .)
    CHAR            reduce using rule 24 (queue_operations -> queue_remove .)
    EXCL_WS         reduce using rule 24 (queue_operations -> queue_remove .)
    PRINT           reduce using rule 24 (queue_operations -> queue_remove .)
    PRINTLN         reduce using rule 24 (queue_operations -> queue_remove .)
    VAR             reduce using rule 24 (queue_operations -> queue_remove .)
    VAL             reduce using rule 24 (queue_operations -> queue_remove .)
    LINKEDL         reduce using rule 24 (queue_operations -> queue_remove .)
    STACK           reduce using rule 24 (queue_operations -> queue_remove .)


state 49

    (25) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 25 (queue_operations -> queue_poll .)
    $end            reduce using rule 25 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 25 (queue_operations -> queue_poll .)
    LPAREN          reduce using rule 25 (queue_operations -> queue_poll .)
    FOR             reduce using rule 25 (queue_operations -> queue_poll .)
    IF              reduce using rule 25 (queue_operations -> queue_poll .)
    WHILE           reduce using rule 25 (queue_operations -> queue_poll .)
    BOOLEAN         reduce using rule 25 (queue_operations -> queue_poll .)
    ID              reduce using rule 25 (queue_operations -> queue_poll .)
    INT             reduce using rule 25 (queue_operations -> queue_poll .)
    FLOAT           reduce using rule 25 (queue_operations -> queue_poll .)
    LONG            reduce using rule 25 (queue_operations -> queue_poll .)
    STRING_1        reduce using rule 25 (queue_operations -> queue_poll .)
    CHAR            reduce using rule 25 (queue_operations -> queue_poll .)
    EXCL_WS         reduce using rule 25 (queue_operations -> queue_poll .)
    PRINT           reduce using rule 25 (queue_operations -> queue_poll .)
    PRINTLN         reduce using rule 25 (queue_operations -> queue_poll .)
    VAR             reduce using rule 25 (queue_operations -> queue_poll .)
    VAL             reduce using rule 25 (queue_operations -> queue_poll .)
    LINKEDL         reduce using rule 25 (queue_operations -> queue_poll .)
    STACK           reduce using rule 25 (queue_operations -> queue_poll .)


state 50

    (112) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 100


state 51

    (59) expression -> expression PLUS . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    term                           shift and go to state 101
    factor                         shift and go to state 17

state 52

    (60) expression -> expression MINUS . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    term                           shift and go to state 102
    factor                         shift and go to state 17

state 53

    (61) expression -> expression TIMES . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    term                           shift and go to state 103
    factor                         shift and go to state 17

state 54

    (62) expression -> expression DIVIDE . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    term                           shift and go to state 104
    factor                         shift and go to state 17

state 55

    (63) expression -> expression MOD . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    term                           shift and go to state 105
    factor                         shift and go to state 17

state 56

    (64) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 64 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 64 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 64 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 64 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 64 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 64 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 64 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 64 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 64 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 64 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 64 (expression -> expression INCREMENTONE .)
    LPAREN          reduce using rule 64 (expression -> expression INCREMENTONE .)
    FOR             reduce using rule 64 (expression -> expression INCREMENTONE .)
    IF              reduce using rule 64 (expression -> expression INCREMENTONE .)
    WHILE           reduce using rule 64 (expression -> expression INCREMENTONE .)
    BOOLEAN         reduce using rule 64 (expression -> expression INCREMENTONE .)
    ID              reduce using rule 64 (expression -> expression INCREMENTONE .)
    INT             reduce using rule 64 (expression -> expression INCREMENTONE .)
    FLOAT           reduce using rule 64 (expression -> expression INCREMENTONE .)
    LONG            reduce using rule 64 (expression -> expression INCREMENTONE .)
    STRING_1        reduce using rule 64 (expression -> expression INCREMENTONE .)
    CHAR            reduce using rule 64 (expression -> expression INCREMENTONE .)
    EXCL_WS         reduce using rule 64 (expression -> expression INCREMENTONE .)
    PRINT           reduce using rule 64 (expression -> expression INCREMENTONE .)
    PRINTLN         reduce using rule 64 (expression -> expression INCREMENTONE .)
    VAR             reduce using rule 64 (expression -> expression INCREMENTONE .)
    VAL             reduce using rule 64 (expression -> expression INCREMENTONE .)
    LINKEDL         reduce using rule 64 (expression -> expression INCREMENTONE .)
    STACK           reduce using rule 64 (expression -> expression INCREMENTONE .)


state 57

    (65) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 65 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 65 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 65 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 65 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 65 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 65 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 65 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 65 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 65 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 65 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 65 (expression -> expression DECREMENTONE .)
    LPAREN          reduce using rule 65 (expression -> expression DECREMENTONE .)
    FOR             reduce using rule 65 (expression -> expression DECREMENTONE .)
    IF              reduce using rule 65 (expression -> expression DECREMENTONE .)
    WHILE           reduce using rule 65 (expression -> expression DECREMENTONE .)
    BOOLEAN         reduce using rule 65 (expression -> expression DECREMENTONE .)
    ID              reduce using rule 65 (expression -> expression DECREMENTONE .)
    INT             reduce using rule 65 (expression -> expression DECREMENTONE .)
    FLOAT           reduce using rule 65 (expression -> expression DECREMENTONE .)
    LONG            reduce using rule 65 (expression -> expression DECREMENTONE .)
    STRING_1        reduce using rule 65 (expression -> expression DECREMENTONE .)
    CHAR            reduce using rule 65 (expression -> expression DECREMENTONE .)
    EXCL_WS         reduce using rule 65 (expression -> expression DECREMENTONE .)
    PRINT           reduce using rule 65 (expression -> expression DECREMENTONE .)
    PRINTLN         reduce using rule 65 (expression -> expression DECREMENTONE .)
    VAR             reduce using rule 65 (expression -> expression DECREMENTONE .)
    VAL             reduce using rule 65 (expression -> expression DECREMENTONE .)
    LINKEDL         reduce using rule 65 (expression -> expression DECREMENTONE .)
    STACK           reduce using rule 65 (expression -> expression DECREMENTONE .)


state 58

    (9) lineas -> blocks SEMICOLON .

    $end            reduce using rule 9 (lineas -> blocks SEMICOLON .)
    RCURL           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    LPAREN          reduce using rule 9 (lineas -> blocks SEMICOLON .)
    FOR             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    IF              reduce using rule 9 (lineas -> blocks SEMICOLON .)
    WHILE           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    BOOLEAN         reduce using rule 9 (lineas -> blocks SEMICOLON .)
    ID              reduce using rule 9 (lineas -> blocks SEMICOLON .)
    INT             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    FLOAT           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    LONG            reduce using rule 9 (lineas -> blocks SEMICOLON .)
    STRING_1        reduce using rule 9 (lineas -> blocks SEMICOLON .)
    CHAR            reduce using rule 9 (lineas -> blocks SEMICOLON .)
    EXCL_WS         reduce using rule 9 (lineas -> blocks SEMICOLON .)
    PRINT           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    PRINTLN         reduce using rule 9 (lineas -> blocks SEMICOLON .)
    VAR             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    VAL             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    LINKEDL         reduce using rule 9 (lineas -> blocks SEMICOLON .)
    STACK           reduce using rule 9 (lineas -> blocks SEMICOLON .)


state 59

    (68) term -> LPAREN expression . RPAREN
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term
    (61) expression -> expression . TIMES term
    (62) expression -> expression . DIVIDE term
    (63) expression -> expression . MOD term
    (64) expression -> expression . INCREMENTONE
    (65) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 60

    (69) factor -> INT .

    RPAREN          reduce using rule 69 (factor -> INT .)
    PLUS            reduce using rule 69 (factor -> INT .)
    MINUS           reduce using rule 69 (factor -> INT .)
    TIMES           reduce using rule 69 (factor -> INT .)
    DIVIDE          reduce using rule 69 (factor -> INT .)
    MOD             reduce using rule 69 (factor -> INT .)
    INCREMENTONE    reduce using rule 69 (factor -> INT .)
    DECREMENTONE    reduce using rule 69 (factor -> INT .)
    $end            reduce using rule 69 (factor -> INT .)
    SEMICOLON       reduce using rule 69 (factor -> INT .)
    RCURL           reduce using rule 69 (factor -> INT .)
    LPAREN          reduce using rule 69 (factor -> INT .)
    FOR             reduce using rule 69 (factor -> INT .)
    IF              reduce using rule 69 (factor -> INT .)
    WHILE           reduce using rule 69 (factor -> INT .)
    BOOLEAN         reduce using rule 69 (factor -> INT .)
    ID              reduce using rule 69 (factor -> INT .)
    INT             reduce using rule 69 (factor -> INT .)
    FLOAT           reduce using rule 69 (factor -> INT .)
    LONG            reduce using rule 69 (factor -> INT .)
    STRING_1        reduce using rule 69 (factor -> INT .)
    CHAR            reduce using rule 69 (factor -> INT .)
    EXCL_WS         reduce using rule 69 (factor -> INT .)
    PRINT           reduce using rule 69 (factor -> INT .)
    PRINTLN         reduce using rule 69 (factor -> INT .)
    VAR             reduce using rule 69 (factor -> INT .)
    VAL             reduce using rule 69 (factor -> INT .)
    LINKEDL         reduce using rule 69 (factor -> INT .)
    STACK           reduce using rule 69 (factor -> INT .)


state 61

    (70) factor -> FLOAT .

    RPAREN          reduce using rule 70 (factor -> FLOAT .)
    PLUS            reduce using rule 70 (factor -> FLOAT .)
    MINUS           reduce using rule 70 (factor -> FLOAT .)
    TIMES           reduce using rule 70 (factor -> FLOAT .)
    DIVIDE          reduce using rule 70 (factor -> FLOAT .)
    MOD             reduce using rule 70 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 70 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 70 (factor -> FLOAT .)
    $end            reduce using rule 70 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 70 (factor -> FLOAT .)
    RCURL           reduce using rule 70 (factor -> FLOAT .)
    LPAREN          reduce using rule 70 (factor -> FLOAT .)
    FOR             reduce using rule 70 (factor -> FLOAT .)
    IF              reduce using rule 70 (factor -> FLOAT .)
    WHILE           reduce using rule 70 (factor -> FLOAT .)
    BOOLEAN         reduce using rule 70 (factor -> FLOAT .)
    ID              reduce using rule 70 (factor -> FLOAT .)
    INT             reduce using rule 70 (factor -> FLOAT .)
    FLOAT           reduce using rule 70 (factor -> FLOAT .)
    LONG            reduce using rule 70 (factor -> FLOAT .)
    STRING_1        reduce using rule 70 (factor -> FLOAT .)
    CHAR            reduce using rule 70 (factor -> FLOAT .)
    EXCL_WS         reduce using rule 70 (factor -> FLOAT .)
    PRINT           reduce using rule 70 (factor -> FLOAT .)
    PRINTLN         reduce using rule 70 (factor -> FLOAT .)
    VAR             reduce using rule 70 (factor -> FLOAT .)
    VAL             reduce using rule 70 (factor -> FLOAT .)
    LINKEDL         reduce using rule 70 (factor -> FLOAT .)
    STACK           reduce using rule 70 (factor -> FLOAT .)


state 62

    (71) factor -> LONG .

    RPAREN          reduce using rule 71 (factor -> LONG .)
    PLUS            reduce using rule 71 (factor -> LONG .)
    MINUS           reduce using rule 71 (factor -> LONG .)
    TIMES           reduce using rule 71 (factor -> LONG .)
    DIVIDE          reduce using rule 71 (factor -> LONG .)
    MOD             reduce using rule 71 (factor -> LONG .)
    INCREMENTONE    reduce using rule 71 (factor -> LONG .)
    DECREMENTONE    reduce using rule 71 (factor -> LONG .)
    $end            reduce using rule 71 (factor -> LONG .)
    SEMICOLON       reduce using rule 71 (factor -> LONG .)
    RCURL           reduce using rule 71 (factor -> LONG .)
    LPAREN          reduce using rule 71 (factor -> LONG .)
    FOR             reduce using rule 71 (factor -> LONG .)
    IF              reduce using rule 71 (factor -> LONG .)
    WHILE           reduce using rule 71 (factor -> LONG .)
    BOOLEAN         reduce using rule 71 (factor -> LONG .)
    ID              reduce using rule 71 (factor -> LONG .)
    INT             reduce using rule 71 (factor -> LONG .)
    FLOAT           reduce using rule 71 (factor -> LONG .)
    LONG            reduce using rule 71 (factor -> LONG .)
    STRING_1        reduce using rule 71 (factor -> LONG .)
    CHAR            reduce using rule 71 (factor -> LONG .)
    EXCL_WS         reduce using rule 71 (factor -> LONG .)
    PRINT           reduce using rule 71 (factor -> LONG .)
    PRINTLN         reduce using rule 71 (factor -> LONG .)
    VAR             reduce using rule 71 (factor -> LONG .)
    VAL             reduce using rule 71 (factor -> LONG .)
    LINKEDL         reduce using rule 71 (factor -> LONG .)
    STACK           reduce using rule 71 (factor -> LONG .)


state 63

    (72) factor -> CHAR .

    RPAREN          reduce using rule 72 (factor -> CHAR .)
    PLUS            reduce using rule 72 (factor -> CHAR .)
    MINUS           reduce using rule 72 (factor -> CHAR .)
    TIMES           reduce using rule 72 (factor -> CHAR .)
    DIVIDE          reduce using rule 72 (factor -> CHAR .)
    MOD             reduce using rule 72 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 72 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 72 (factor -> CHAR .)
    $end            reduce using rule 72 (factor -> CHAR .)
    SEMICOLON       reduce using rule 72 (factor -> CHAR .)
    RCURL           reduce using rule 72 (factor -> CHAR .)
    LPAREN          reduce using rule 72 (factor -> CHAR .)
    FOR             reduce using rule 72 (factor -> CHAR .)
    IF              reduce using rule 72 (factor -> CHAR .)
    WHILE           reduce using rule 72 (factor -> CHAR .)
    BOOLEAN         reduce using rule 72 (factor -> CHAR .)
    ID              reduce using rule 72 (factor -> CHAR .)
    INT             reduce using rule 72 (factor -> CHAR .)
    FLOAT           reduce using rule 72 (factor -> CHAR .)
    LONG            reduce using rule 72 (factor -> CHAR .)
    STRING_1        reduce using rule 72 (factor -> CHAR .)
    CHAR            reduce using rule 72 (factor -> CHAR .)
    EXCL_WS         reduce using rule 72 (factor -> CHAR .)
    PRINT           reduce using rule 72 (factor -> CHAR .)
    PRINTLN         reduce using rule 72 (factor -> CHAR .)
    VAR             reduce using rule 72 (factor -> CHAR .)
    VAL             reduce using rule 72 (factor -> CHAR .)
    LINKEDL         reduce using rule 72 (factor -> CHAR .)
    STACK           reduce using rule 72 (factor -> CHAR .)


state 64

    (73) factor -> BOOLEAN .

    RPAREN          reduce using rule 73 (factor -> BOOLEAN .)
    PLUS            reduce using rule 73 (factor -> BOOLEAN .)
    MINUS           reduce using rule 73 (factor -> BOOLEAN .)
    TIMES           reduce using rule 73 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 73 (factor -> BOOLEAN .)
    MOD             reduce using rule 73 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 73 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 73 (factor -> BOOLEAN .)
    $end            reduce using rule 73 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 73 (factor -> BOOLEAN .)
    RCURL           reduce using rule 73 (factor -> BOOLEAN .)
    LPAREN          reduce using rule 73 (factor -> BOOLEAN .)
    FOR             reduce using rule 73 (factor -> BOOLEAN .)
    IF              reduce using rule 73 (factor -> BOOLEAN .)
    WHILE           reduce using rule 73 (factor -> BOOLEAN .)
    BOOLEAN         reduce using rule 73 (factor -> BOOLEAN .)
    ID              reduce using rule 73 (factor -> BOOLEAN .)
    INT             reduce using rule 73 (factor -> BOOLEAN .)
    FLOAT           reduce using rule 73 (factor -> BOOLEAN .)
    LONG            reduce using rule 73 (factor -> BOOLEAN .)
    STRING_1        reduce using rule 73 (factor -> BOOLEAN .)
    CHAR            reduce using rule 73 (factor -> BOOLEAN .)
    EXCL_WS         reduce using rule 73 (factor -> BOOLEAN .)
    PRINT           reduce using rule 73 (factor -> BOOLEAN .)
    PRINTLN         reduce using rule 73 (factor -> BOOLEAN .)
    VAR             reduce using rule 73 (factor -> BOOLEAN .)
    VAL             reduce using rule 73 (factor -> BOOLEAN .)
    LINKEDL         reduce using rule 73 (factor -> BOOLEAN .)
    STACK           reduce using rule 73 (factor -> BOOLEAN .)


state 65

    (74) factor -> ID .

    RPAREN          reduce using rule 74 (factor -> ID .)
    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)
    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    MOD             reduce using rule 74 (factor -> ID .)
    INCREMENTONE    reduce using rule 74 (factor -> ID .)
    DECREMENTONE    reduce using rule 74 (factor -> ID .)
    $end            reduce using rule 74 (factor -> ID .)
    SEMICOLON       reduce using rule 74 (factor -> ID .)
    RCURL           reduce using rule 74 (factor -> ID .)
    LPAREN          reduce using rule 74 (factor -> ID .)
    FOR             reduce using rule 74 (factor -> ID .)
    IF              reduce using rule 74 (factor -> ID .)
    WHILE           reduce using rule 74 (factor -> ID .)
    BOOLEAN         reduce using rule 74 (factor -> ID .)
    ID              reduce using rule 74 (factor -> ID .)
    INT             reduce using rule 74 (factor -> ID .)
    FLOAT           reduce using rule 74 (factor -> ID .)
    LONG            reduce using rule 74 (factor -> ID .)
    STRING_1        reduce using rule 74 (factor -> ID .)
    CHAR            reduce using rule 74 (factor -> ID .)
    EXCL_WS         reduce using rule 74 (factor -> ID .)
    PRINT           reduce using rule 74 (factor -> ID .)
    PRINTLN         reduce using rule 74 (factor -> ID .)
    VAR             reduce using rule 74 (factor -> ID .)
    VAL             reduce using rule 74 (factor -> ID .)
    LINKEDL         reduce using rule 74 (factor -> ID .)
    STACK           reduce using rule 74 (factor -> ID .)


state 66

    (75) factor -> STRING_1 .

    RPAREN          reduce using rule 75 (factor -> STRING_1 .)
    PLUS            reduce using rule 75 (factor -> STRING_1 .)
    MINUS           reduce using rule 75 (factor -> STRING_1 .)
    TIMES           reduce using rule 75 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 75 (factor -> STRING_1 .)
    MOD             reduce using rule 75 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 75 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 75 (factor -> STRING_1 .)
    $end            reduce using rule 75 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 75 (factor -> STRING_1 .)
    RCURL           reduce using rule 75 (factor -> STRING_1 .)
    LPAREN          reduce using rule 75 (factor -> STRING_1 .)
    FOR             reduce using rule 75 (factor -> STRING_1 .)
    IF              reduce using rule 75 (factor -> STRING_1 .)
    WHILE           reduce using rule 75 (factor -> STRING_1 .)
    BOOLEAN         reduce using rule 75 (factor -> STRING_1 .)
    ID              reduce using rule 75 (factor -> STRING_1 .)
    INT             reduce using rule 75 (factor -> STRING_1 .)
    FLOAT           reduce using rule 75 (factor -> STRING_1 .)
    LONG            reduce using rule 75 (factor -> STRING_1 .)
    STRING_1        reduce using rule 75 (factor -> STRING_1 .)
    CHAR            reduce using rule 75 (factor -> STRING_1 .)
    EXCL_WS         reduce using rule 75 (factor -> STRING_1 .)
    PRINT           reduce using rule 75 (factor -> STRING_1 .)
    PRINTLN         reduce using rule 75 (factor -> STRING_1 .)
    VAR             reduce using rule 75 (factor -> STRING_1 .)
    VAL             reduce using rule 75 (factor -> STRING_1 .)
    LINKEDL         reduce using rule 75 (factor -> STRING_1 .)
    STACK           reduce using rule 75 (factor -> STRING_1 .)


state 67

    (33) for -> FOR LPAREN . ID IN iterable RPAREN LCURL morelines RCURL

    ID              shift and go to state 107


state 68

    (83) condicionL -> ID opL . ID
    (84) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 108
    BOOLEAN         shift and go to state 109


state 69

    (97) condicionR -> ID opR . ID

    ID              shift and go to state 110


state 70

    (43) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (45) tipoDatoEspecifico -> . TINT EQUAL INT
    (46) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (47) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (48) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (49) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (50) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    TINT            shift and go to state 112
    TLONG           shift and go to state 113
    TFLOAT          shift and go to state 114
    TBOOLEAN        shift and go to state 115
    TCHAR           shift and go to state 116
    TSTRING         shift and go to state 117

    tipoDatoEspecifico             shift and go to state 111

state 71

    (44) asignacionSimple -> ID EQUAL . valor
    (58) valor -> . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    valor                          shift and go to state 118
    expression                     shift and go to state 119
    term                           shift and go to state 7
    factor                         shift and go to state 17

state 72

    (114) stack_actuar -> ID DOT . stack_funciones
    (133) lsimplem -> ID DOT . Lmetod
    (134) lcomp -> ID DOT . Cmetod
    (26) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (27) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (29) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (28) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (115) stack_funciones -> . stack_isEmpty
    (116) stack_funciones -> . stack_push
    (117) stack_funciones -> . stack_pop
    (118) stack_funciones -> . stack_peek
    (119) stack_funciones -> . stack_size
    (125) Lmetod -> . FIRST LPAREN RPAREN
    (126) Lmetod -> . LAST LPAREN RPAREN
    (127) Lmetod -> . REMOVEL LPAREN RPAREN
    (128) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (129) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (130) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (120) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (122) stack_push -> . PUSH LPAREN factor RPAREN
    (121) stack_pop -> . POP LPAREN RPAREN
    (123) stack_peek -> . PEEK LPAREN RPAREN
    (124) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 123
    PEEK            shift and go to state 124
    REMOVE          shift and go to state 125
    POLL            shift and go to state 126
    FIRST           shift and go to state 132
    LAST            shift and go to state 133
    REMOVEL         shift and go to state 134
    APPEND          shift and go to state 135
    REMOVEN         shift and go to state 136
    REMOVEI         shift and go to state 137
    ISEMPTY         shift and go to state 138
    PUSH            shift and go to state 139
    POP             shift and go to state 140
    SIZE            shift and go to state 141

    stack_funciones                shift and go to state 120
    Lmetod                         shift and go to state 121
    Cmetod                         shift and go to state 122
    stack_isEmpty                  shift and go to state 127
    stack_push                     shift and go to state 128
    stack_pop                      shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_size                     shift and go to state 131

state 73

    (100) opL -> CONJ .

    ID              reduce using rule 100 (opL -> CONJ .)
    BOOLEAN         reduce using rule 100 (opL -> CONJ .)


state 74

    (101) opL -> DISJ .

    ID              reduce using rule 101 (opL -> DISJ .)
    BOOLEAN         reduce using rule 101 (opL -> DISJ .)


state 75

    (102) opR -> LANGLE .

    ID              reduce using rule 102 (opR -> LANGLE .)
    INT             reduce using rule 102 (opR -> LANGLE .)
    FLOAT           reduce using rule 102 (opR -> LANGLE .)
    LONG            reduce using rule 102 (opR -> LANGLE .)
    STRING_1        reduce using rule 102 (opR -> LANGLE .)
    CHAR            reduce using rule 102 (opR -> LANGLE .)


state 76

    (103) opR -> RANGLE .

    ID              reduce using rule 103 (opR -> RANGLE .)
    INT             reduce using rule 103 (opR -> RANGLE .)
    FLOAT           reduce using rule 103 (opR -> RANGLE .)
    LONG            reduce using rule 103 (opR -> RANGLE .)
    STRING_1        reduce using rule 103 (opR -> RANGLE .)
    CHAR            reduce using rule 103 (opR -> RANGLE .)


state 77

    (104) opR -> LE .

    ID              reduce using rule 104 (opR -> LE .)
    INT             reduce using rule 104 (opR -> LE .)
    FLOAT           reduce using rule 104 (opR -> LE .)
    LONG            reduce using rule 104 (opR -> LE .)
    STRING_1        reduce using rule 104 (opR -> LE .)
    CHAR            reduce using rule 104 (opR -> LE .)


state 78

    (105) opR -> GE .

    ID              reduce using rule 105 (opR -> GE .)
    INT             reduce using rule 105 (opR -> GE .)
    FLOAT           reduce using rule 105 (opR -> GE .)
    LONG            reduce using rule 105 (opR -> GE .)
    STRING_1        reduce using rule 105 (opR -> GE .)
    CHAR            reduce using rule 105 (opR -> GE .)


state 79

    (106) opR -> EXCL_EQ .

    ID              reduce using rule 106 (opR -> EXCL_EQ .)
    INT             reduce using rule 106 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 106 (opR -> EXCL_EQ .)
    LONG            reduce using rule 106 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 106 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 106 (opR -> EXCL_EQ .)


state 80

    (107) opR -> EXCL_EQEQ .

    ID              reduce using rule 107 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 107 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 107 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 107 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 107 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 107 (opR -> EXCL_EQEQ .)


state 81

    (108) opR -> AS_SAFE .

    ID              reduce using rule 108 (opR -> AS_SAFE .)
    INT             reduce using rule 108 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 108 (opR -> AS_SAFE .)
    LONG            reduce using rule 108 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 108 (opR -> AS_SAFE .)
    CHAR            reduce using rule 108 (opR -> AS_SAFE .)


state 82

    (109) opR -> EQEQ .

    ID              reduce using rule 109 (opR -> EQEQ .)
    INT             reduce using rule 109 (opR -> EQEQ .)
    FLOAT           reduce using rule 109 (opR -> EQEQ .)
    LONG            reduce using rule 109 (opR -> EQEQ .)
    STRING_1        reduce using rule 109 (opR -> EQEQ .)
    CHAR            reduce using rule 109 (opR -> EQEQ .)


state 83

    (110) opR -> EQEQEQ .

    ID              reduce using rule 110 (opR -> EQEQEQ .)
    INT             reduce using rule 110 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 110 (opR -> EQEQEQ .)
    LONG            reduce using rule 110 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 110 (opR -> EQEQEQ .)
    CHAR            reduce using rule 110 (opR -> EQEQEQ .)


state 84

    (76) if -> IF LPAREN . condicion RPAREN LCURL line RCURL
    (77) if -> IF LPAREN . condicion RPAREN LCURL line RCURL else
    (79) condicion -> . condicionL
    (80) condicion -> . condicionR
    (81) condicion -> . condicionN
    (82) condicionL -> . BOOLEAN opL BOOLEAN
    (83) condicionL -> . ID opL ID
    (84) condicionL -> . ID opL BOOLEAN
    (85) condicionL -> . BOOLEAN opL ID
    (86) condicionR -> . INT opR INT
    (87) condicionR -> . INT opR FLOAT
    (88) condicionR -> . INT opR LONG
    (89) condicionR -> . FLOAT opR FLOAT
    (90) condicionR -> . FLOAT opR INT
    (91) condicionR -> . FLOAT opR LONG
    (92) condicionR -> . LONG opR LONG
    (93) condicionR -> . LONG opR INT
    (94) condicionR -> . LONG opR FLOAT
    (95) condicionR -> . STRING_1 opR STRING_1
    (96) condicionR -> . CHAR opR CHAR
    (97) condicionR -> . ID opR ID
    (98) condicionN -> . EXCL_WS BOOLEAN
    (99) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 143
    ID              shift and go to state 144
    INT             shift and go to state 145
    FLOAT           shift and go to state 146
    LONG            shift and go to state 147
    STRING_1        shift and go to state 148
    CHAR            shift and go to state 149
    EXCL_WS         shift and go to state 29

    condicion                      shift and go to state 142
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13

state 85

    (131) while -> WHILE LPAREN . ID opR INT RPAREN LCURL morelines RCURL

    ID              shift and go to state 150


state 86

    (86) condicionR -> INT opR . INT
    (87) condicionR -> INT opR . FLOAT
    (88) condicionR -> INT opR . LONG

    INT             shift and go to state 151
    FLOAT           shift and go to state 152
    LONG            shift and go to state 153


state 87

    (82) condicionL -> BOOLEAN opL . BOOLEAN
    (85) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 154
    ID              shift and go to state 155


state 88

    (89) condicionR -> FLOAT opR . FLOAT
    (90) condicionR -> FLOAT opR . INT
    (91) condicionR -> FLOAT opR . LONG

    FLOAT           shift and go to state 156
    INT             shift and go to state 157
    LONG            shift and go to state 158


state 89

    (92) condicionR -> LONG opR . LONG
    (93) condicionR -> LONG opR . INT
    (94) condicionR -> LONG opR . FLOAT

    LONG            shift and go to state 159
    INT             shift and go to state 160
    FLOAT           shift and go to state 161


state 90

    (95) condicionR -> STRING_1 opR . STRING_1

    STRING_1        shift and go to state 162


state 91

    (96) condicionR -> CHAR opR . CHAR

    CHAR            shift and go to state 163


state 92

    (98) condicionN -> EXCL_WS BOOLEAN .

    $end            reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    LPAREN          reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    FOR             reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    IF              reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    WHILE           reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    BOOLEAN         reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    ID              reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    INT             reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    FLOAT           reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    LONG            reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    STRING_1        reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    CHAR            reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    EXCL_WS         reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    PRINT           reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    PRINTLN         reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    VAR             reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    VAL             reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    LINKEDL         reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)
    STACK           reduce using rule 98 (condicionN -> EXCL_WS BOOLEAN .)


state 93

    (99) condicionN -> EXCL_WS ID .

    $end            reduce using rule 99 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 99 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 99 (condicionN -> EXCL_WS ID .)
    LPAREN          reduce using rule 99 (condicionN -> EXCL_WS ID .)
    FOR             reduce using rule 99 (condicionN -> EXCL_WS ID .)
    IF              reduce using rule 99 (condicionN -> EXCL_WS ID .)
    WHILE           reduce using rule 99 (condicionN -> EXCL_WS ID .)
    BOOLEAN         reduce using rule 99 (condicionN -> EXCL_WS ID .)
    ID              reduce using rule 99 (condicionN -> EXCL_WS ID .)
    INT             reduce using rule 99 (condicionN -> EXCL_WS ID .)
    FLOAT           reduce using rule 99 (condicionN -> EXCL_WS ID .)
    LONG            reduce using rule 99 (condicionN -> EXCL_WS ID .)
    STRING_1        reduce using rule 99 (condicionN -> EXCL_WS ID .)
    CHAR            reduce using rule 99 (condicionN -> EXCL_WS ID .)
    EXCL_WS         reduce using rule 99 (condicionN -> EXCL_WS ID .)
    PRINT           reduce using rule 99 (condicionN -> EXCL_WS ID .)
    PRINTLN         reduce using rule 99 (condicionN -> EXCL_WS ID .)
    VAR             reduce using rule 99 (condicionN -> EXCL_WS ID .)
    VAL             reduce using rule 99 (condicionN -> EXCL_WS ID .)
    LINKEDL         reduce using rule 99 (condicionN -> EXCL_WS ID .)
    STACK           reduce using rule 99 (condicionN -> EXCL_WS ID .)


state 94

    (30) impresion -> PRINT LPAREN . expression RPAREN
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    expression                     shift and go to state 164
    term                           shift and go to state 7
    factor                         shift and go to state 17

state 95

    (31) impresion -> PRINTLN LPAREN . expression RPAREN
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    expression                     shift and go to state 165
    term                           shift and go to state 7
    factor                         shift and go to state 17

state 96

    (39) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    LPAREN          reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    FOR             reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    IF              reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    WHILE           reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    BOOLEAN         reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    ID              reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    INT             reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    FLOAT           reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    LONG            reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    STRING_1        reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    CHAR            reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    EXCL_WS         reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    PRINT           reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    PRINTLN         reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    VAR             reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    VAL             reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    LINKEDL         reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)
    STACK           reduce using rule 39 (asignacion -> keywordVariables asignacionSimple .)


state 97

    (111) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (43) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (44) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 166
    EQUAL           shift and go to state 71


state 98

    (32) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 167


state 99

    (113) instance_linkedlist -> LINKEDL LPAREN . RPAREN

    RPAREN          shift and go to state 168


state 100

    (112) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (51) tipoDato -> . TINT
    (52) tipoDato -> . TLONG
    (53) tipoDato -> . TFLOAT
    (54) tipoDato -> . TDOUBLE
    (55) tipoDato -> . TBOOLEAN
    (56) tipoDato -> . TCHAR
    (57) tipoDato -> . TSTRING

    TINT            shift and go to state 170
    TLONG           shift and go to state 171
    TFLOAT          shift and go to state 172
    TDOUBLE         shift and go to state 173
    TBOOLEAN        shift and go to state 174
    TCHAR           shift and go to state 175
    TSTRING         shift and go to state 176

    tipoDato                       shift and go to state 169

state 101

    (59) expression -> expression PLUS term .

    PLUS            reduce using rule 59 (expression -> expression PLUS term .)
    MINUS           reduce using rule 59 (expression -> expression PLUS term .)
    TIMES           reduce using rule 59 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 59 (expression -> expression PLUS term .)
    MOD             reduce using rule 59 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 59 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 59 (expression -> expression PLUS term .)
    $end            reduce using rule 59 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 59 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 59 (expression -> expression PLUS term .)
    RCURL           reduce using rule 59 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 59 (expression -> expression PLUS term .)
    FOR             reduce using rule 59 (expression -> expression PLUS term .)
    IF              reduce using rule 59 (expression -> expression PLUS term .)
    WHILE           reduce using rule 59 (expression -> expression PLUS term .)
    BOOLEAN         reduce using rule 59 (expression -> expression PLUS term .)
    ID              reduce using rule 59 (expression -> expression PLUS term .)
    INT             reduce using rule 59 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 59 (expression -> expression PLUS term .)
    LONG            reduce using rule 59 (expression -> expression PLUS term .)
    STRING_1        reduce using rule 59 (expression -> expression PLUS term .)
    CHAR            reduce using rule 59 (expression -> expression PLUS term .)
    EXCL_WS         reduce using rule 59 (expression -> expression PLUS term .)
    PRINT           reduce using rule 59 (expression -> expression PLUS term .)
    PRINTLN         reduce using rule 59 (expression -> expression PLUS term .)
    VAR             reduce using rule 59 (expression -> expression PLUS term .)
    VAL             reduce using rule 59 (expression -> expression PLUS term .)
    LINKEDL         reduce using rule 59 (expression -> expression PLUS term .)
    STACK           reduce using rule 59 (expression -> expression PLUS term .)


state 102

    (60) expression -> expression MINUS term .

    PLUS            reduce using rule 60 (expression -> expression MINUS term .)
    MINUS           reduce using rule 60 (expression -> expression MINUS term .)
    TIMES           reduce using rule 60 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 60 (expression -> expression MINUS term .)
    MOD             reduce using rule 60 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 60 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 60 (expression -> expression MINUS term .)
    $end            reduce using rule 60 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 60 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 60 (expression -> expression MINUS term .)
    RCURL           reduce using rule 60 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 60 (expression -> expression MINUS term .)
    FOR             reduce using rule 60 (expression -> expression MINUS term .)
    IF              reduce using rule 60 (expression -> expression MINUS term .)
    WHILE           reduce using rule 60 (expression -> expression MINUS term .)
    BOOLEAN         reduce using rule 60 (expression -> expression MINUS term .)
    ID              reduce using rule 60 (expression -> expression MINUS term .)
    INT             reduce using rule 60 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 60 (expression -> expression MINUS term .)
    LONG            reduce using rule 60 (expression -> expression MINUS term .)
    STRING_1        reduce using rule 60 (expression -> expression MINUS term .)
    CHAR            reduce using rule 60 (expression -> expression MINUS term .)
    EXCL_WS         reduce using rule 60 (expression -> expression MINUS term .)
    PRINT           reduce using rule 60 (expression -> expression MINUS term .)
    PRINTLN         reduce using rule 60 (expression -> expression MINUS term .)
    VAR             reduce using rule 60 (expression -> expression MINUS term .)
    VAL             reduce using rule 60 (expression -> expression MINUS term .)
    LINKEDL         reduce using rule 60 (expression -> expression MINUS term .)
    STACK           reduce using rule 60 (expression -> expression MINUS term .)


state 103

    (61) expression -> expression TIMES term .

    PLUS            reduce using rule 61 (expression -> expression TIMES term .)
    MINUS           reduce using rule 61 (expression -> expression TIMES term .)
    TIMES           reduce using rule 61 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 61 (expression -> expression TIMES term .)
    MOD             reduce using rule 61 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 61 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 61 (expression -> expression TIMES term .)
    $end            reduce using rule 61 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 61 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 61 (expression -> expression TIMES term .)
    RCURL           reduce using rule 61 (expression -> expression TIMES term .)
    LPAREN          reduce using rule 61 (expression -> expression TIMES term .)
    FOR             reduce using rule 61 (expression -> expression TIMES term .)
    IF              reduce using rule 61 (expression -> expression TIMES term .)
    WHILE           reduce using rule 61 (expression -> expression TIMES term .)
    BOOLEAN         reduce using rule 61 (expression -> expression TIMES term .)
    ID              reduce using rule 61 (expression -> expression TIMES term .)
    INT             reduce using rule 61 (expression -> expression TIMES term .)
    FLOAT           reduce using rule 61 (expression -> expression TIMES term .)
    LONG            reduce using rule 61 (expression -> expression TIMES term .)
    STRING_1        reduce using rule 61 (expression -> expression TIMES term .)
    CHAR            reduce using rule 61 (expression -> expression TIMES term .)
    EXCL_WS         reduce using rule 61 (expression -> expression TIMES term .)
    PRINT           reduce using rule 61 (expression -> expression TIMES term .)
    PRINTLN         reduce using rule 61 (expression -> expression TIMES term .)
    VAR             reduce using rule 61 (expression -> expression TIMES term .)
    VAL             reduce using rule 61 (expression -> expression TIMES term .)
    LINKEDL         reduce using rule 61 (expression -> expression TIMES term .)
    STACK           reduce using rule 61 (expression -> expression TIMES term .)


state 104

    (62) expression -> expression DIVIDE term .

    PLUS            reduce using rule 62 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 62 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 62 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 62 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 62 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 62 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 62 (expression -> expression DIVIDE term .)
    $end            reduce using rule 62 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 62 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 62 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 62 (expression -> expression DIVIDE term .)
    LPAREN          reduce using rule 62 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 62 (expression -> expression DIVIDE term .)
    IF              reduce using rule 62 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 62 (expression -> expression DIVIDE term .)
    BOOLEAN         reduce using rule 62 (expression -> expression DIVIDE term .)
    ID              reduce using rule 62 (expression -> expression DIVIDE term .)
    INT             reduce using rule 62 (expression -> expression DIVIDE term .)
    FLOAT           reduce using rule 62 (expression -> expression DIVIDE term .)
    LONG            reduce using rule 62 (expression -> expression DIVIDE term .)
    STRING_1        reduce using rule 62 (expression -> expression DIVIDE term .)
    CHAR            reduce using rule 62 (expression -> expression DIVIDE term .)
    EXCL_WS         reduce using rule 62 (expression -> expression DIVIDE term .)
    PRINT           reduce using rule 62 (expression -> expression DIVIDE term .)
    PRINTLN         reduce using rule 62 (expression -> expression DIVIDE term .)
    VAR             reduce using rule 62 (expression -> expression DIVIDE term .)
    VAL             reduce using rule 62 (expression -> expression DIVIDE term .)
    LINKEDL         reduce using rule 62 (expression -> expression DIVIDE term .)
    STACK           reduce using rule 62 (expression -> expression DIVIDE term .)


state 105

    (63) expression -> expression MOD term .

    PLUS            reduce using rule 63 (expression -> expression MOD term .)
    MINUS           reduce using rule 63 (expression -> expression MOD term .)
    TIMES           reduce using rule 63 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 63 (expression -> expression MOD term .)
    MOD             reduce using rule 63 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 63 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 63 (expression -> expression MOD term .)
    $end            reduce using rule 63 (expression -> expression MOD term .)
    RPAREN          reduce using rule 63 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 63 (expression -> expression MOD term .)
    RCURL           reduce using rule 63 (expression -> expression MOD term .)
    LPAREN          reduce using rule 63 (expression -> expression MOD term .)
    FOR             reduce using rule 63 (expression -> expression MOD term .)
    IF              reduce using rule 63 (expression -> expression MOD term .)
    WHILE           reduce using rule 63 (expression -> expression MOD term .)
    BOOLEAN         reduce using rule 63 (expression -> expression MOD term .)
    ID              reduce using rule 63 (expression -> expression MOD term .)
    INT             reduce using rule 63 (expression -> expression MOD term .)
    FLOAT           reduce using rule 63 (expression -> expression MOD term .)
    LONG            reduce using rule 63 (expression -> expression MOD term .)
    STRING_1        reduce using rule 63 (expression -> expression MOD term .)
    CHAR            reduce using rule 63 (expression -> expression MOD term .)
    EXCL_WS         reduce using rule 63 (expression -> expression MOD term .)
    PRINT           reduce using rule 63 (expression -> expression MOD term .)
    PRINTLN         reduce using rule 63 (expression -> expression MOD term .)
    VAR             reduce using rule 63 (expression -> expression MOD term .)
    VAL             reduce using rule 63 (expression -> expression MOD term .)
    LINKEDL         reduce using rule 63 (expression -> expression MOD term .)
    STACK           reduce using rule 63 (expression -> expression MOD term .)


state 106

    (68) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 68 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 68 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 68 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 68 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 68 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 68 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 68 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 68 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 68 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 68 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 68 (term -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 68 (term -> LPAREN expression RPAREN .)
    FOR             reduce using rule 68 (term -> LPAREN expression RPAREN .)
    IF              reduce using rule 68 (term -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 68 (term -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 68 (term -> LPAREN expression RPAREN .)
    ID              reduce using rule 68 (term -> LPAREN expression RPAREN .)
    INT             reduce using rule 68 (term -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 68 (term -> LPAREN expression RPAREN .)
    LONG            reduce using rule 68 (term -> LPAREN expression RPAREN .)
    STRING_1        reduce using rule 68 (term -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 68 (term -> LPAREN expression RPAREN .)
    EXCL_WS         reduce using rule 68 (term -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 68 (term -> LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 68 (term -> LPAREN expression RPAREN .)
    VAR             reduce using rule 68 (term -> LPAREN expression RPAREN .)
    VAL             reduce using rule 68 (term -> LPAREN expression RPAREN .)
    LINKEDL         reduce using rule 68 (term -> LPAREN expression RPAREN .)
    STACK           reduce using rule 68 (term -> LPAREN expression RPAREN .)


state 107

    (33) for -> FOR LPAREN ID . IN iterable RPAREN LCURL morelines RCURL

    IN              shift and go to state 177


state 108

    (83) condicionL -> ID opL ID .

    $end            reduce using rule 83 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 83 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 83 (condicionL -> ID opL ID .)
    LPAREN          reduce using rule 83 (condicionL -> ID opL ID .)
    FOR             reduce using rule 83 (condicionL -> ID opL ID .)
    IF              reduce using rule 83 (condicionL -> ID opL ID .)
    WHILE           reduce using rule 83 (condicionL -> ID opL ID .)
    BOOLEAN         reduce using rule 83 (condicionL -> ID opL ID .)
    ID              reduce using rule 83 (condicionL -> ID opL ID .)
    INT             reduce using rule 83 (condicionL -> ID opL ID .)
    FLOAT           reduce using rule 83 (condicionL -> ID opL ID .)
    LONG            reduce using rule 83 (condicionL -> ID opL ID .)
    STRING_1        reduce using rule 83 (condicionL -> ID opL ID .)
    CHAR            reduce using rule 83 (condicionL -> ID opL ID .)
    EXCL_WS         reduce using rule 83 (condicionL -> ID opL ID .)
    PRINT           reduce using rule 83 (condicionL -> ID opL ID .)
    PRINTLN         reduce using rule 83 (condicionL -> ID opL ID .)
    VAR             reduce using rule 83 (condicionL -> ID opL ID .)
    VAL             reduce using rule 83 (condicionL -> ID opL ID .)
    LINKEDL         reduce using rule 83 (condicionL -> ID opL ID .)
    STACK           reduce using rule 83 (condicionL -> ID opL ID .)


state 109

    (84) condicionL -> ID opL BOOLEAN .

    $end            reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    LPAREN          reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    FOR             reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    IF              reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    WHILE           reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    BOOLEAN         reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    ID              reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    INT             reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    FLOAT           reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    LONG            reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    STRING_1        reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    CHAR            reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    EXCL_WS         reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    PRINT           reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    PRINTLN         reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    VAR             reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    VAL             reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    LINKEDL         reduce using rule 84 (condicionL -> ID opL BOOLEAN .)
    STACK           reduce using rule 84 (condicionL -> ID opL BOOLEAN .)


state 110

    (97) condicionR -> ID opR ID .

    $end            reduce using rule 97 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 97 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 97 (condicionR -> ID opR ID .)
    LPAREN          reduce using rule 97 (condicionR -> ID opR ID .)
    FOR             reduce using rule 97 (condicionR -> ID opR ID .)
    IF              reduce using rule 97 (condicionR -> ID opR ID .)
    WHILE           reduce using rule 97 (condicionR -> ID opR ID .)
    BOOLEAN         reduce using rule 97 (condicionR -> ID opR ID .)
    ID              reduce using rule 97 (condicionR -> ID opR ID .)
    INT             reduce using rule 97 (condicionR -> ID opR ID .)
    FLOAT           reduce using rule 97 (condicionR -> ID opR ID .)
    LONG            reduce using rule 97 (condicionR -> ID opR ID .)
    STRING_1        reduce using rule 97 (condicionR -> ID opR ID .)
    CHAR            reduce using rule 97 (condicionR -> ID opR ID .)
    EXCL_WS         reduce using rule 97 (condicionR -> ID opR ID .)
    PRINT           reduce using rule 97 (condicionR -> ID opR ID .)
    PRINTLN         reduce using rule 97 (condicionR -> ID opR ID .)
    VAR             reduce using rule 97 (condicionR -> ID opR ID .)
    VAL             reduce using rule 97 (condicionR -> ID opR ID .)
    LINKEDL         reduce using rule 97 (condicionR -> ID opR ID .)
    STACK           reduce using rule 97 (condicionR -> ID opR ID .)


state 111

    (43) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    SEMICOLON       reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LPAREN          reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    FOR             reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    IF              reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    WHILE           reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    BOOLEAN         reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    ID              reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    INT             reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    FLOAT           reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LONG            reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    STRING_1        reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    CHAR            reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    EXCL_WS         reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    PRINT           reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    PRINTLN         reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    VAR             reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    VAL             reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LINKEDL         reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    STACK           reduce using rule 43 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 112

    (45) tipoDatoEspecifico -> TINT . EQUAL INT

    EQUAL           shift and go to state 178


state 113

    (46) tipoDatoEspecifico -> TLONG . EQUAL LONG

    EQUAL           shift and go to state 179


state 114

    (47) tipoDatoEspecifico -> TFLOAT . EQUAL FLOAT

    EQUAL           shift and go to state 180


state 115

    (48) tipoDatoEspecifico -> TBOOLEAN . EQUAL BOOLEAN

    EQUAL           shift and go to state 181


state 116

    (49) tipoDatoEspecifico -> TCHAR . EQUAL CHAR

    EQUAL           shift and go to state 182


state 117

    (50) tipoDatoEspecifico -> TSTRING . EQUAL STRING_1

    EQUAL           shift and go to state 183


state 118

    (44) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    LPAREN          reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    FOR             reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    IF              reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    WHILE           reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    BOOLEAN         reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    ID              reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    INT             reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    FLOAT           reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    LONG            reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    STRING_1        reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    CHAR            reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    EXCL_WS         reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    PRINT           reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    PRINTLN         reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    VAR             reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    VAL             reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    LINKEDL         reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)
    STACK           reduce using rule 44 (asignacionSimple -> ID EQUAL valor .)


state 119

    (58) valor -> expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term
    (61) expression -> expression . TIMES term
    (62) expression -> expression . DIVIDE term
    (63) expression -> expression . MOD term
    (64) expression -> expression . INCREMENTONE
    (65) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 58 (valor -> expression .)
    $end            reduce using rule 58 (valor -> expression .)
    RCURL           reduce using rule 58 (valor -> expression .)
    LPAREN          reduce using rule 58 (valor -> expression .)
    FOR             reduce using rule 58 (valor -> expression .)
    IF              reduce using rule 58 (valor -> expression .)
    WHILE           reduce using rule 58 (valor -> expression .)
    BOOLEAN         reduce using rule 58 (valor -> expression .)
    ID              reduce using rule 58 (valor -> expression .)
    INT             reduce using rule 58 (valor -> expression .)
    FLOAT           reduce using rule 58 (valor -> expression .)
    LONG            reduce using rule 58 (valor -> expression .)
    STRING_1        reduce using rule 58 (valor -> expression .)
    CHAR            reduce using rule 58 (valor -> expression .)
    EXCL_WS         reduce using rule 58 (valor -> expression .)
    PRINT           reduce using rule 58 (valor -> expression .)
    PRINTLN         reduce using rule 58 (valor -> expression .)
    VAR             reduce using rule 58 (valor -> expression .)
    VAL             reduce using rule 58 (valor -> expression .)
    LINKEDL         reduce using rule 58 (valor -> expression .)
    STACK           reduce using rule 58 (valor -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 120

    (114) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    LPAREN          reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    FOR             reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    IF              reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    WHILE           reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    BOOLEAN         reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    ID              reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    INT             reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    FLOAT           reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    LONG            reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    STRING_1        reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    CHAR            reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    EXCL_WS         reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    PRINT           reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    PRINTLN         reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    VAR             reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    VAL             reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    LINKEDL         reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)
    STACK           reduce using rule 114 (stack_actuar -> ID DOT stack_funciones .)


state 121

    (133) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    LPAREN          reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    FOR             reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    IF              reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    WHILE           reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    BOOLEAN         reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    ID              reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    INT             reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    FLOAT           reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    LONG            reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    STRING_1        reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    CHAR            reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    EXCL_WS         reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    PRINT           reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    PRINTLN         reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    VAR             reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    VAL             reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    LINKEDL         reduce using rule 133 (lsimplem -> ID DOT Lmetod .)
    STACK           reduce using rule 133 (lsimplem -> ID DOT Lmetod .)


state 122

    (134) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    LPAREN          reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    FOR             reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    IF              reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    WHILE           reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    BOOLEAN         reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    ID              reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    INT             reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    FLOAT           reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    LONG            reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    STRING_1        reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    CHAR            reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    EXCL_WS         reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    PRINT           reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    PRINTLN         reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    VAR             reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    VAL             reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    LINKEDL         reduce using rule 134 (lcomp -> ID DOT Cmetod .)
    STACK           reduce using rule 134 (lcomp -> ID DOT Cmetod .)


state 123

    (26) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 184


state 124

    (27) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (123) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 185


state 125

    (29) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 186


state 126

    (28) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 187


state 127

    (115) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    LPAREN          reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    FOR             reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    IF              reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    WHILE           reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    BOOLEAN         reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    ID              reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    INT             reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    FLOAT           reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    LONG            reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    STRING_1        reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    CHAR            reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    EXCL_WS         reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    PRINT           reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    PRINTLN         reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    VAR             reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    VAL             reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    LINKEDL         reduce using rule 115 (stack_funciones -> stack_isEmpty .)
    STACK           reduce using rule 115 (stack_funciones -> stack_isEmpty .)


state 128

    (116) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 116 (stack_funciones -> stack_push .)
    $end            reduce using rule 116 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 116 (stack_funciones -> stack_push .)
    LPAREN          reduce using rule 116 (stack_funciones -> stack_push .)
    FOR             reduce using rule 116 (stack_funciones -> stack_push .)
    IF              reduce using rule 116 (stack_funciones -> stack_push .)
    WHILE           reduce using rule 116 (stack_funciones -> stack_push .)
    BOOLEAN         reduce using rule 116 (stack_funciones -> stack_push .)
    ID              reduce using rule 116 (stack_funciones -> stack_push .)
    INT             reduce using rule 116 (stack_funciones -> stack_push .)
    FLOAT           reduce using rule 116 (stack_funciones -> stack_push .)
    LONG            reduce using rule 116 (stack_funciones -> stack_push .)
    STRING_1        reduce using rule 116 (stack_funciones -> stack_push .)
    CHAR            reduce using rule 116 (stack_funciones -> stack_push .)
    EXCL_WS         reduce using rule 116 (stack_funciones -> stack_push .)
    PRINT           reduce using rule 116 (stack_funciones -> stack_push .)
    PRINTLN         reduce using rule 116 (stack_funciones -> stack_push .)
    VAR             reduce using rule 116 (stack_funciones -> stack_push .)
    VAL             reduce using rule 116 (stack_funciones -> stack_push .)
    LINKEDL         reduce using rule 116 (stack_funciones -> stack_push .)
    STACK           reduce using rule 116 (stack_funciones -> stack_push .)


state 129

    (117) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 117 (stack_funciones -> stack_pop .)
    $end            reduce using rule 117 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 117 (stack_funciones -> stack_pop .)
    LPAREN          reduce using rule 117 (stack_funciones -> stack_pop .)
    FOR             reduce using rule 117 (stack_funciones -> stack_pop .)
    IF              reduce using rule 117 (stack_funciones -> stack_pop .)
    WHILE           reduce using rule 117 (stack_funciones -> stack_pop .)
    BOOLEAN         reduce using rule 117 (stack_funciones -> stack_pop .)
    ID              reduce using rule 117 (stack_funciones -> stack_pop .)
    INT             reduce using rule 117 (stack_funciones -> stack_pop .)
    FLOAT           reduce using rule 117 (stack_funciones -> stack_pop .)
    LONG            reduce using rule 117 (stack_funciones -> stack_pop .)
    STRING_1        reduce using rule 117 (stack_funciones -> stack_pop .)
    CHAR            reduce using rule 117 (stack_funciones -> stack_pop .)
    EXCL_WS         reduce using rule 117 (stack_funciones -> stack_pop .)
    PRINT           reduce using rule 117 (stack_funciones -> stack_pop .)
    PRINTLN         reduce using rule 117 (stack_funciones -> stack_pop .)
    VAR             reduce using rule 117 (stack_funciones -> stack_pop .)
    VAL             reduce using rule 117 (stack_funciones -> stack_pop .)
    LINKEDL         reduce using rule 117 (stack_funciones -> stack_pop .)
    STACK           reduce using rule 117 (stack_funciones -> stack_pop .)


state 130

    (118) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 118 (stack_funciones -> stack_peek .)
    $end            reduce using rule 118 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 118 (stack_funciones -> stack_peek .)
    LPAREN          reduce using rule 118 (stack_funciones -> stack_peek .)
    FOR             reduce using rule 118 (stack_funciones -> stack_peek .)
    IF              reduce using rule 118 (stack_funciones -> stack_peek .)
    WHILE           reduce using rule 118 (stack_funciones -> stack_peek .)
    BOOLEAN         reduce using rule 118 (stack_funciones -> stack_peek .)
    ID              reduce using rule 118 (stack_funciones -> stack_peek .)
    INT             reduce using rule 118 (stack_funciones -> stack_peek .)
    FLOAT           reduce using rule 118 (stack_funciones -> stack_peek .)
    LONG            reduce using rule 118 (stack_funciones -> stack_peek .)
    STRING_1        reduce using rule 118 (stack_funciones -> stack_peek .)
    CHAR            reduce using rule 118 (stack_funciones -> stack_peek .)
    EXCL_WS         reduce using rule 118 (stack_funciones -> stack_peek .)
    PRINT           reduce using rule 118 (stack_funciones -> stack_peek .)
    PRINTLN         reduce using rule 118 (stack_funciones -> stack_peek .)
    VAR             reduce using rule 118 (stack_funciones -> stack_peek .)
    VAL             reduce using rule 118 (stack_funciones -> stack_peek .)
    LINKEDL         reduce using rule 118 (stack_funciones -> stack_peek .)
    STACK           reduce using rule 118 (stack_funciones -> stack_peek .)


state 131

    (119) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 119 (stack_funciones -> stack_size .)
    $end            reduce using rule 119 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 119 (stack_funciones -> stack_size .)
    LPAREN          reduce using rule 119 (stack_funciones -> stack_size .)
    FOR             reduce using rule 119 (stack_funciones -> stack_size .)
    IF              reduce using rule 119 (stack_funciones -> stack_size .)
    WHILE           reduce using rule 119 (stack_funciones -> stack_size .)
    BOOLEAN         reduce using rule 119 (stack_funciones -> stack_size .)
    ID              reduce using rule 119 (stack_funciones -> stack_size .)
    INT             reduce using rule 119 (stack_funciones -> stack_size .)
    FLOAT           reduce using rule 119 (stack_funciones -> stack_size .)
    LONG            reduce using rule 119 (stack_funciones -> stack_size .)
    STRING_1        reduce using rule 119 (stack_funciones -> stack_size .)
    CHAR            reduce using rule 119 (stack_funciones -> stack_size .)
    EXCL_WS         reduce using rule 119 (stack_funciones -> stack_size .)
    PRINT           reduce using rule 119 (stack_funciones -> stack_size .)
    PRINTLN         reduce using rule 119 (stack_funciones -> stack_size .)
    VAR             reduce using rule 119 (stack_funciones -> stack_size .)
    VAL             reduce using rule 119 (stack_funciones -> stack_size .)
    LINKEDL         reduce using rule 119 (stack_funciones -> stack_size .)
    STACK           reduce using rule 119 (stack_funciones -> stack_size .)


state 132

    (125) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 188


state 133

    (126) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 189


state 134

    (127) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 190


state 135

    (128) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 191


state 136

    (129) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 192


state 137

    (130) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 193


state 138

    (120) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 194


state 139

    (122) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 195


state 140

    (121) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 196


state 141

    (124) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 197


state 142

    (76) if -> IF LPAREN condicion . RPAREN LCURL line RCURL
    (77) if -> IF LPAREN condicion . RPAREN LCURL line RCURL else

    RPAREN          shift and go to state 198


state 143

    (82) condicionL -> BOOLEAN . opL BOOLEAN
    (85) condicionL -> BOOLEAN . opL ID
    (100) opL -> . CONJ
    (101) opL -> . DISJ

    CONJ            shift and go to state 73
    DISJ            shift and go to state 74

    opL                            shift and go to state 87

state 144

    (83) condicionL -> ID . opL ID
    (84) condicionL -> ID . opL BOOLEAN
    (97) condicionR -> ID . opR ID
    (100) opL -> . CONJ
    (101) opL -> . DISJ
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    CONJ            shift and go to state 73
    DISJ            shift and go to state 74
    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opL                            shift and go to state 68
    opR                            shift and go to state 69

state 145

    (86) condicionR -> INT . opR INT
    (87) condicionR -> INT . opR FLOAT
    (88) condicionR -> INT . opR LONG
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 86

state 146

    (89) condicionR -> FLOAT . opR FLOAT
    (90) condicionR -> FLOAT . opR INT
    (91) condicionR -> FLOAT . opR LONG
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 88

state 147

    (92) condicionR -> LONG . opR LONG
    (93) condicionR -> LONG . opR INT
    (94) condicionR -> LONG . opR FLOAT
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 89

state 148

    (95) condicionR -> STRING_1 . opR STRING_1
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 90

state 149

    (96) condicionR -> CHAR . opR CHAR
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 91

state 150

    (131) while -> WHILE LPAREN ID . opR INT RPAREN LCURL morelines RCURL
    (102) opR -> . LANGLE
    (103) opR -> . RANGLE
    (104) opR -> . LE
    (105) opR -> . GE
    (106) opR -> . EXCL_EQ
    (107) opR -> . EXCL_EQEQ
    (108) opR -> . AS_SAFE
    (109) opR -> . EQEQ
    (110) opR -> . EQEQEQ

    LANGLE          shift and go to state 75
    RANGLE          shift and go to state 76
    LE              shift and go to state 77
    GE              shift and go to state 78
    EXCL_EQ         shift and go to state 79
    EXCL_EQEQ       shift and go to state 80
    AS_SAFE         shift and go to state 81
    EQEQ            shift and go to state 82
    EQEQEQ          shift and go to state 83

    opR                            shift and go to state 199

state 151

    (86) condicionR -> INT opR INT .

    $end            reduce using rule 86 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 86 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 86 (condicionR -> INT opR INT .)
    LPAREN          reduce using rule 86 (condicionR -> INT opR INT .)
    FOR             reduce using rule 86 (condicionR -> INT opR INT .)
    IF              reduce using rule 86 (condicionR -> INT opR INT .)
    WHILE           reduce using rule 86 (condicionR -> INT opR INT .)
    BOOLEAN         reduce using rule 86 (condicionR -> INT opR INT .)
    ID              reduce using rule 86 (condicionR -> INT opR INT .)
    INT             reduce using rule 86 (condicionR -> INT opR INT .)
    FLOAT           reduce using rule 86 (condicionR -> INT opR INT .)
    LONG            reduce using rule 86 (condicionR -> INT opR INT .)
    STRING_1        reduce using rule 86 (condicionR -> INT opR INT .)
    CHAR            reduce using rule 86 (condicionR -> INT opR INT .)
    EXCL_WS         reduce using rule 86 (condicionR -> INT opR INT .)
    PRINT           reduce using rule 86 (condicionR -> INT opR INT .)
    PRINTLN         reduce using rule 86 (condicionR -> INT opR INT .)
    VAR             reduce using rule 86 (condicionR -> INT opR INT .)
    VAL             reduce using rule 86 (condicionR -> INT opR INT .)
    LINKEDL         reduce using rule 86 (condicionR -> INT opR INT .)
    STACK           reduce using rule 86 (condicionR -> INT opR INT .)


state 152

    (87) condicionR -> INT opR FLOAT .

    $end            reduce using rule 87 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 87 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 87 (condicionR -> INT opR FLOAT .)
    LPAREN          reduce using rule 87 (condicionR -> INT opR FLOAT .)
    FOR             reduce using rule 87 (condicionR -> INT opR FLOAT .)
    IF              reduce using rule 87 (condicionR -> INT opR FLOAT .)
    WHILE           reduce using rule 87 (condicionR -> INT opR FLOAT .)
    BOOLEAN         reduce using rule 87 (condicionR -> INT opR FLOAT .)
    ID              reduce using rule 87 (condicionR -> INT opR FLOAT .)
    INT             reduce using rule 87 (condicionR -> INT opR FLOAT .)
    FLOAT           reduce using rule 87 (condicionR -> INT opR FLOAT .)
    LONG            reduce using rule 87 (condicionR -> INT opR FLOAT .)
    STRING_1        reduce using rule 87 (condicionR -> INT opR FLOAT .)
    CHAR            reduce using rule 87 (condicionR -> INT opR FLOAT .)
    EXCL_WS         reduce using rule 87 (condicionR -> INT opR FLOAT .)
    PRINT           reduce using rule 87 (condicionR -> INT opR FLOAT .)
    PRINTLN         reduce using rule 87 (condicionR -> INT opR FLOAT .)
    VAR             reduce using rule 87 (condicionR -> INT opR FLOAT .)
    VAL             reduce using rule 87 (condicionR -> INT opR FLOAT .)
    LINKEDL         reduce using rule 87 (condicionR -> INT opR FLOAT .)
    STACK           reduce using rule 87 (condicionR -> INT opR FLOAT .)


state 153

    (88) condicionR -> INT opR LONG .

    $end            reduce using rule 88 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 88 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 88 (condicionR -> INT opR LONG .)
    LPAREN          reduce using rule 88 (condicionR -> INT opR LONG .)
    FOR             reduce using rule 88 (condicionR -> INT opR LONG .)
    IF              reduce using rule 88 (condicionR -> INT opR LONG .)
    WHILE           reduce using rule 88 (condicionR -> INT opR LONG .)
    BOOLEAN         reduce using rule 88 (condicionR -> INT opR LONG .)
    ID              reduce using rule 88 (condicionR -> INT opR LONG .)
    INT             reduce using rule 88 (condicionR -> INT opR LONG .)
    FLOAT           reduce using rule 88 (condicionR -> INT opR LONG .)
    LONG            reduce using rule 88 (condicionR -> INT opR LONG .)
    STRING_1        reduce using rule 88 (condicionR -> INT opR LONG .)
    CHAR            reduce using rule 88 (condicionR -> INT opR LONG .)
    EXCL_WS         reduce using rule 88 (condicionR -> INT opR LONG .)
    PRINT           reduce using rule 88 (condicionR -> INT opR LONG .)
    PRINTLN         reduce using rule 88 (condicionR -> INT opR LONG .)
    VAR             reduce using rule 88 (condicionR -> INT opR LONG .)
    VAL             reduce using rule 88 (condicionR -> INT opR LONG .)
    LINKEDL         reduce using rule 88 (condicionR -> INT opR LONG .)
    STACK           reduce using rule 88 (condicionR -> INT opR LONG .)


state 154

    (82) condicionL -> BOOLEAN opL BOOLEAN .

    $end            reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    LPAREN          reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    FOR             reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    IF              reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    WHILE           reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    BOOLEAN         reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    ID              reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    INT             reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    FLOAT           reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    LONG            reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    STRING_1        reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    CHAR            reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    EXCL_WS         reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    PRINT           reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    PRINTLN         reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    VAR             reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    VAL             reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    LINKEDL         reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)
    STACK           reduce using rule 82 (condicionL -> BOOLEAN opL BOOLEAN .)


state 155

    (85) condicionL -> BOOLEAN opL ID .

    $end            reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    LPAREN          reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    FOR             reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    IF              reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    WHILE           reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    BOOLEAN         reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    ID              reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    INT             reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    FLOAT           reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    LONG            reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    STRING_1        reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    CHAR            reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    EXCL_WS         reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    PRINT           reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    PRINTLN         reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    VAR             reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    VAL             reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    LINKEDL         reduce using rule 85 (condicionL -> BOOLEAN opL ID .)
    STACK           reduce using rule 85 (condicionL -> BOOLEAN opL ID .)


state 156

    (89) condicionR -> FLOAT opR FLOAT .

    $end            reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    LPAREN          reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    FOR             reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    IF              reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    WHILE           reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    BOOLEAN         reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    ID              reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    INT             reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    FLOAT           reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    LONG            reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    STRING_1        reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    CHAR            reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    EXCL_WS         reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    PRINT           reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    PRINTLN         reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    VAR             reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    VAL             reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    LINKEDL         reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)
    STACK           reduce using rule 89 (condicionR -> FLOAT opR FLOAT .)


state 157

    (90) condicionR -> FLOAT opR INT .

    $end            reduce using rule 90 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 90 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 90 (condicionR -> FLOAT opR INT .)
    LPAREN          reduce using rule 90 (condicionR -> FLOAT opR INT .)
    FOR             reduce using rule 90 (condicionR -> FLOAT opR INT .)
    IF              reduce using rule 90 (condicionR -> FLOAT opR INT .)
    WHILE           reduce using rule 90 (condicionR -> FLOAT opR INT .)
    BOOLEAN         reduce using rule 90 (condicionR -> FLOAT opR INT .)
    ID              reduce using rule 90 (condicionR -> FLOAT opR INT .)
    INT             reduce using rule 90 (condicionR -> FLOAT opR INT .)
    FLOAT           reduce using rule 90 (condicionR -> FLOAT opR INT .)
    LONG            reduce using rule 90 (condicionR -> FLOAT opR INT .)
    STRING_1        reduce using rule 90 (condicionR -> FLOAT opR INT .)
    CHAR            reduce using rule 90 (condicionR -> FLOAT opR INT .)
    EXCL_WS         reduce using rule 90 (condicionR -> FLOAT opR INT .)
    PRINT           reduce using rule 90 (condicionR -> FLOAT opR INT .)
    PRINTLN         reduce using rule 90 (condicionR -> FLOAT opR INT .)
    VAR             reduce using rule 90 (condicionR -> FLOAT opR INT .)
    VAL             reduce using rule 90 (condicionR -> FLOAT opR INT .)
    LINKEDL         reduce using rule 90 (condicionR -> FLOAT opR INT .)
    STACK           reduce using rule 90 (condicionR -> FLOAT opR INT .)


state 158

    (91) condicionR -> FLOAT opR LONG .

    $end            reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    LPAREN          reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    FOR             reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    IF              reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    WHILE           reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    BOOLEAN         reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    ID              reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    INT             reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    FLOAT           reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    LONG            reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    STRING_1        reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    CHAR            reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    EXCL_WS         reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    PRINT           reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    PRINTLN         reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    VAR             reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    VAL             reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    LINKEDL         reduce using rule 91 (condicionR -> FLOAT opR LONG .)
    STACK           reduce using rule 91 (condicionR -> FLOAT opR LONG .)


state 159

    (92) condicionR -> LONG opR LONG .

    $end            reduce using rule 92 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 92 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 92 (condicionR -> LONG opR LONG .)
    LPAREN          reduce using rule 92 (condicionR -> LONG opR LONG .)
    FOR             reduce using rule 92 (condicionR -> LONG opR LONG .)
    IF              reduce using rule 92 (condicionR -> LONG opR LONG .)
    WHILE           reduce using rule 92 (condicionR -> LONG opR LONG .)
    BOOLEAN         reduce using rule 92 (condicionR -> LONG opR LONG .)
    ID              reduce using rule 92 (condicionR -> LONG opR LONG .)
    INT             reduce using rule 92 (condicionR -> LONG opR LONG .)
    FLOAT           reduce using rule 92 (condicionR -> LONG opR LONG .)
    LONG            reduce using rule 92 (condicionR -> LONG opR LONG .)
    STRING_1        reduce using rule 92 (condicionR -> LONG opR LONG .)
    CHAR            reduce using rule 92 (condicionR -> LONG opR LONG .)
    EXCL_WS         reduce using rule 92 (condicionR -> LONG opR LONG .)
    PRINT           reduce using rule 92 (condicionR -> LONG opR LONG .)
    PRINTLN         reduce using rule 92 (condicionR -> LONG opR LONG .)
    VAR             reduce using rule 92 (condicionR -> LONG opR LONG .)
    VAL             reduce using rule 92 (condicionR -> LONG opR LONG .)
    LINKEDL         reduce using rule 92 (condicionR -> LONG opR LONG .)
    STACK           reduce using rule 92 (condicionR -> LONG opR LONG .)


state 160

    (93) condicionR -> LONG opR INT .

    $end            reduce using rule 93 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 93 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 93 (condicionR -> LONG opR INT .)
    LPAREN          reduce using rule 93 (condicionR -> LONG opR INT .)
    FOR             reduce using rule 93 (condicionR -> LONG opR INT .)
    IF              reduce using rule 93 (condicionR -> LONG opR INT .)
    WHILE           reduce using rule 93 (condicionR -> LONG opR INT .)
    BOOLEAN         reduce using rule 93 (condicionR -> LONG opR INT .)
    ID              reduce using rule 93 (condicionR -> LONG opR INT .)
    INT             reduce using rule 93 (condicionR -> LONG opR INT .)
    FLOAT           reduce using rule 93 (condicionR -> LONG opR INT .)
    LONG            reduce using rule 93 (condicionR -> LONG opR INT .)
    STRING_1        reduce using rule 93 (condicionR -> LONG opR INT .)
    CHAR            reduce using rule 93 (condicionR -> LONG opR INT .)
    EXCL_WS         reduce using rule 93 (condicionR -> LONG opR INT .)
    PRINT           reduce using rule 93 (condicionR -> LONG opR INT .)
    PRINTLN         reduce using rule 93 (condicionR -> LONG opR INT .)
    VAR             reduce using rule 93 (condicionR -> LONG opR INT .)
    VAL             reduce using rule 93 (condicionR -> LONG opR INT .)
    LINKEDL         reduce using rule 93 (condicionR -> LONG opR INT .)
    STACK           reduce using rule 93 (condicionR -> LONG opR INT .)


state 161

    (94) condicionR -> LONG opR FLOAT .

    $end            reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    LPAREN          reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    FOR             reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    IF              reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    WHILE           reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    BOOLEAN         reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    ID              reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    INT             reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    FLOAT           reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    LONG            reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    STRING_1        reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    CHAR            reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    EXCL_WS         reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    PRINT           reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    PRINTLN         reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    VAR             reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    VAL             reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    LINKEDL         reduce using rule 94 (condicionR -> LONG opR FLOAT .)
    STACK           reduce using rule 94 (condicionR -> LONG opR FLOAT .)


state 162

    (95) condicionR -> STRING_1 opR STRING_1 .

    $end            reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    LPAREN          reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    FOR             reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    IF              reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    WHILE           reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    BOOLEAN         reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    ID              reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    INT             reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    FLOAT           reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    LONG            reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    STRING_1        reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    CHAR            reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    EXCL_WS         reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    PRINT           reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    PRINTLN         reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    VAR             reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    VAL             reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    LINKEDL         reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)
    STACK           reduce using rule 95 (condicionR -> STRING_1 opR STRING_1 .)


state 163

    (96) condicionR -> CHAR opR CHAR .

    $end            reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    LPAREN          reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    FOR             reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    IF              reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    WHILE           reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    BOOLEAN         reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    ID              reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    INT             reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    FLOAT           reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    LONG            reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    STRING_1        reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    CHAR            reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    EXCL_WS         reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    PRINT           reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    PRINTLN         reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    VAR             reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    VAL             reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    LINKEDL         reduce using rule 96 (condicionR -> CHAR opR CHAR .)
    STACK           reduce using rule 96 (condicionR -> CHAR opR CHAR .)


state 164

    (30) impresion -> PRINT LPAREN expression . RPAREN
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term
    (61) expression -> expression . TIMES term
    (62) expression -> expression . DIVIDE term
    (63) expression -> expression . MOD term
    (64) expression -> expression . INCREMENTONE
    (65) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 200
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 165

    (31) impresion -> PRINTLN LPAREN expression . RPAREN
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term
    (61) expression -> expression . TIMES term
    (62) expression -> expression . DIVIDE term
    (63) expression -> expression . MOD term
    (64) expression -> expression . INCREMENTONE
    (65) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 201
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 166

    (111) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (132) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (43) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (112) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (45) tipoDatoEspecifico -> . TINT EQUAL INT
    (46) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (47) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (48) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (49) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (50) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    LINKEDL         shift and go to state 203
    STACK           shift and go to state 50
    TINT            shift and go to state 112
    TLONG           shift and go to state 113
    TFLOAT          shift and go to state 114
    TBOOLEAN        shift and go to state 115
    TCHAR           shift and go to state 116
    TSTRING         shift and go to state 117

    def_estruct_tipoDato           shift and go to state 202
    tipoDatoEspecifico             shift and go to state 111

state 167

    (32) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 204


state 168

    (113) instance_linkedlist -> LINKEDL LPAREN RPAREN .

    SEMICOLON       reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    $end            reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    RCURL           reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    LPAREN          reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    FOR             reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    IF              reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    WHILE           reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    BOOLEAN         reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    ID              reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    INT             reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    FLOAT           reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    LONG            reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    STRING_1        reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    CHAR            reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    EXCL_WS         reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    PRINT           reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    PRINTLN         reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    VAR             reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    VAL             reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    LINKEDL         reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    STACK           reduce using rule 113 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)


state 169

    (112) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 205


state 170

    (51) tipoDato -> TINT .

    RANGLE          reduce using rule 51 (tipoDato -> TINT .)


state 171

    (52) tipoDato -> TLONG .

    RANGLE          reduce using rule 52 (tipoDato -> TLONG .)


state 172

    (53) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 53 (tipoDato -> TFLOAT .)


state 173

    (54) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 54 (tipoDato -> TDOUBLE .)


state 174

    (55) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 55 (tipoDato -> TBOOLEAN .)


state 175

    (56) tipoDato -> TCHAR .

    RANGLE          reduce using rule 56 (tipoDato -> TCHAR .)


state 176

    (57) tipoDato -> TSTRING .

    RANGLE          reduce using rule 57 (tipoDato -> TSTRING .)


state 177

    (33) for -> FOR LPAREN ID IN . iterable RPAREN LCURL morelines RCURL
    (34) iterable -> . ID
    (35) iterable -> . INT THREEDOTS INT
    (36) iterable -> . ID DOT INDICES

    ID              shift and go to state 206
    INT             shift and go to state 208

    iterable                       shift and go to state 207

state 178

    (45) tipoDatoEspecifico -> TINT EQUAL . INT

    INT             shift and go to state 209


state 179

    (46) tipoDatoEspecifico -> TLONG EQUAL . LONG

    LONG            shift and go to state 210


state 180

    (47) tipoDatoEspecifico -> TFLOAT EQUAL . FLOAT

    FLOAT           shift and go to state 211


state 181

    (48) tipoDatoEspecifico -> TBOOLEAN EQUAL . BOOLEAN

    BOOLEAN         shift and go to state 212


state 182

    (49) tipoDatoEspecifico -> TCHAR EQUAL . CHAR

    CHAR            shift and go to state 213


state 183

    (50) tipoDatoEspecifico -> TSTRING EQUAL . STRING_1

    STRING_1        shift and go to state 214


state 184

    (26) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    factor                         shift and go to state 215

state 185

    (27) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (123) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 216


state 186

    (29) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 217


state 187

    (28) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 218


state 188

    (125) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 219


state 189

    (126) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 220


state 190

    (127) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 221


state 191

    (128) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 222


state 192

    (129) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 223


state 193

    (130) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 224


state 194

    (120) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 225


state 195

    (122) stack_push -> PUSH LPAREN . factor RPAREN
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1

    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    LONG            shift and go to state 62
    CHAR            shift and go to state 63
    BOOLEAN         shift and go to state 64
    ID              shift and go to state 65
    STRING_1        shift and go to state 66

    factor                         shift and go to state 226

state 196

    (121) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 227


state 197

    (124) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 228


state 198

    (76) if -> IF LPAREN condicion RPAREN . LCURL line RCURL
    (77) if -> IF LPAREN condicion RPAREN . LCURL line RCURL else

    LCURL           shift and go to state 229


state 199

    (131) while -> WHILE LPAREN ID opR . INT RPAREN LCURL morelines RCURL

    INT             shift and go to state 230


state 200

    (30) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    ID              reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    INT             reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    FLOAT           reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    LONG            reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    STRING_1        reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    CHAR            reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    EXCL_WS         reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    VAR             reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    VAL             reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    LINKEDL         reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)
    STACK           reduce using rule 30 (impresion -> PRINT LPAREN expression RPAREN .)


state 201

    (31) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LPAREN          reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    FOR             reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    IF              reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    WHILE           reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    ID              reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    INT             reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    FLOAT           reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LONG            reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    STRING_1        reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    CHAR            reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    EXCL_WS         reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    PRINT           reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    VAR             reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    VAL             reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LINKEDL         reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)
    STACK           reduce using rule 31 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 202

    (111) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 231


state 203

    (132) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 232


state 204

    (32) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 233


state 205

    (112) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LPAREN          reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    FOR             reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    IF              reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    WHILE           reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    BOOLEAN         reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    ID              reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    INT             reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    FLOAT           reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LONG            reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    STRING_1        reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    CHAR            reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EXCL_WS         reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    PRINT           reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    PRINTLN         reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    VAR             reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    VAL             reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LINKEDL         reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    STACK           reduce using rule 112 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 206

    (34) iterable -> ID .
    (36) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 34 (iterable -> ID .)
    DOT             shift and go to state 234


state 207

    (33) for -> FOR LPAREN ID IN iterable . RPAREN LCURL morelines RCURL

    RPAREN          shift and go to state 235


state 208

    (35) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 236


state 209

    (45) tipoDatoEspecifico -> TINT EQUAL INT .

    SEMICOLON       reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    $end            reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    RCURL           reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LPAREN          reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    FOR             reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    IF              reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    WHILE           reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    BOOLEAN         reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    ID              reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    INT             reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    FLOAT           reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LONG            reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    STRING_1        reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    CHAR            reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    EXCL_WS         reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    PRINT           reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    PRINTLN         reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    VAR             reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    VAL             reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LINKEDL         reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)
    STACK           reduce using rule 45 (tipoDatoEspecifico -> TINT EQUAL INT .)


state 210

    (46) tipoDatoEspecifico -> TLONG EQUAL LONG .

    SEMICOLON       reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    $end            reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LPAREN          reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    FOR             reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    IF              reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    WHILE           reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    BOOLEAN         reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    ID              reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    INT             reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    FLOAT           reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LONG            reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    STRING_1        reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    CHAR            reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    EXCL_WS         reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    PRINT           reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    PRINTLN         reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    VAR             reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    VAL             reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LINKEDL         reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    STACK           reduce using rule 46 (tipoDatoEspecifico -> TLONG EQUAL LONG .)


state 211

    (47) tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .

    SEMICOLON       reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LPAREN          reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    FOR             reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    IF              reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    WHILE           reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    BOOLEAN         reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    ID              reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    INT             reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    FLOAT           reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LONG            reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    STRING_1        reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    CHAR            reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    EXCL_WS         reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    PRINT           reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    PRINTLN         reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    VAR             reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    VAL             reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LINKEDL         reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    STACK           reduce using rule 47 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)


state 212

    (48) tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .

    SEMICOLON       reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LPAREN          reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    FOR             reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    IF              reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    WHILE           reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    BOOLEAN         reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    ID              reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    INT             reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    FLOAT           reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LONG            reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    STRING_1        reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    CHAR            reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    EXCL_WS         reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    PRINT           reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    PRINTLN         reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    VAR             reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    VAL             reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LINKEDL         reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    STACK           reduce using rule 48 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)


state 213

    (49) tipoDatoEspecifico -> TCHAR EQUAL CHAR .

    SEMICOLON       reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LPAREN          reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    FOR             reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    IF              reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    WHILE           reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    BOOLEAN         reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    ID              reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    INT             reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    FLOAT           reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LONG            reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    STRING_1        reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    CHAR            reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    EXCL_WS         reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    PRINT           reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    PRINTLN         reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    VAR             reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    VAL             reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LINKEDL         reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    STACK           reduce using rule 49 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)


state 214

    (50) tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .

    SEMICOLON       reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LPAREN          reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    FOR             reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    IF              reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    WHILE           reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    BOOLEAN         reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    ID              reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    INT             reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    FLOAT           reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LONG            reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    STRING_1        reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    CHAR            reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    EXCL_WS         reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    PRINT           reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    PRINTLN         reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    VAR             reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    VAL             reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LINKEDL         reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    STACK           reduce using rule 50 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)


state 215

    (26) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 237


state 216

    (27) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (123) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LPAREN resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for IF resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for ID resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for INT resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for FLOAT resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LONG resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for STRING_1 resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for CHAR resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for EXCL_WS resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for VAR resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for VAL resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LINKEDL resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for STACK resolved using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LPAREN          reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    FOR             reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    IF              reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    WHILE           reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    BOOLEAN         reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    ID              reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    INT             reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    FLOAT           reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LONG            reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    STRING_1        reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    CHAR            reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    EXCL_WS         reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    PRINT           reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    PRINTLN         reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    VAR             reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    VAL             reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINKEDL         reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    STACK           reduce using rule 27 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LPAREN          [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! FOR             [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! IF              [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! WHILE           [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! BOOLEAN         [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! ID              [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! INT             [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! FLOAT           [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LONG            [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! STRING_1        [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! CHAR            [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! EXCL_WS         [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! PRINT           [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! PRINTLN         [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! VAR             [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! VAL             [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LINKEDL         [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! STACK           [ reduce using rule 123 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 217

    (29) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LPAREN          reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    FOR             reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    IF              reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    WHILE           reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    ID              reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    INT             reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    FLOAT           reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LONG            reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    STRING_1        reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    CHAR            reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    PRINT           reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    PRINTLN         reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    VAR             reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    VAL             reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LINKEDL         reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    STACK           reduce using rule 29 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 218

    (28) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LPAREN          reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    FOR             reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    IF              reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    WHILE           reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    BOOLEAN         reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    ID              reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    INT             reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    FLOAT           reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LONG            reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    STRING_1        reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    CHAR            reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    EXCL_WS         reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    PRINT           reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    PRINTLN         reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    VAR             reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    VAL             reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LINKEDL         reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    STACK           reduce using rule 28 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 219

    (125) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    LPAREN          reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    FOR             reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    IF              reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    WHILE           reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    BOOLEAN         reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    ID              reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    INT             reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    FLOAT           reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    LONG            reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    STRING_1        reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    CHAR            reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    EXCL_WS         reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    PRINT           reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    PRINTLN         reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    VAR             reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    VAL             reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    LINKEDL         reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)
    STACK           reduce using rule 125 (Lmetod -> FIRST LPAREN RPAREN .)


state 220

    (126) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    LPAREN          reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    FOR             reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    IF              reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    WHILE           reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    BOOLEAN         reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    ID              reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    INT             reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    FLOAT           reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    LONG            reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    STRING_1        reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    CHAR            reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    EXCL_WS         reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    PRINT           reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    PRINTLN         reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    VAR             reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    VAL             reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    LINKEDL         reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)
    STACK           reduce using rule 126 (Lmetod -> LAST LPAREN RPAREN .)


state 221

    (127) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LPAREN          reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    FOR             reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    IF              reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    WHILE           reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    BOOLEAN         reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    ID              reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    INT             reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    FLOAT           reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LONG            reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    STRING_1        reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    CHAR            reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    EXCL_WS         reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    PRINT           reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    PRINTLN         reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    VAR             reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    VAL             reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LINKEDL         reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)
    STACK           reduce using rule 127 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 222

    (128) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 238


state 223

    (129) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 239


state 224

    (130) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 240


state 225

    (120) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LPAREN          reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    FOR             reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    IF              reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    WHILE           reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    BOOLEAN         reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    ID              reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    INT             reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    FLOAT           reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LONG            reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    STRING_1        reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    CHAR            reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    EXCL_WS         reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    PRINT           reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    PRINTLN         reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    VAR             reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    VAL             reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LINKEDL         reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    STACK           reduce using rule 120 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 226

    (122) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 241


state 227

    (121) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    LPAREN          reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    FOR             reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    IF              reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    WHILE           reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    BOOLEAN         reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    ID              reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    INT             reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    FLOAT           reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    LONG            reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    STRING_1        reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    CHAR            reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    EXCL_WS         reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    PRINT           reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    PRINTLN         reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    VAR             reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    VAL             reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    LINKEDL         reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)
    STACK           reduce using rule 121 (stack_pop -> POP LPAREN RPAREN .)


state 228

    (124) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    LPAREN          reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    FOR             reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    IF              reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    WHILE           reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    ID              reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    INT             reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    FLOAT           reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    LONG            reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    STRING_1        reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    CHAR            reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    PRINT           reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    PRINTLN         reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    VAR             reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    VAL             reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    LINKEDL         reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)
    STACK           reduce using rule 124 (stack_size -> SIZE LPAREN RPAREN .)


state 229

    (76) if -> IF LPAREN condicion RPAREN LCURL . line RCURL
    (77) if -> IF LPAREN condicion RPAREN LCURL . line RCURL else
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (19) estructurasControl -> . for
    (20) estructurasControl -> . if
    (21) estructurasControl -> . while
    (79) condicion -> . condicionL
    (80) condicion -> . condicionR
    (81) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (33) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (76) if -> . IF LPAREN condicion RPAREN LCURL line RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL line RCURL else
    (131) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (82) condicionL -> . BOOLEAN opL BOOLEAN
    (83) condicionL -> . ID opL ID
    (84) condicionL -> . ID opL BOOLEAN
    (85) condicionL -> . BOOLEAN opL ID
    (86) condicionR -> . INT opR INT
    (87) condicionR -> . INT opR FLOAT
    (88) condicionR -> . INT opR LONG
    (89) condicionR -> . FLOAT opR FLOAT
    (90) condicionR -> . FLOAT opR INT
    (91) condicionR -> . FLOAT opR LONG
    (92) condicionR -> . LONG opR LONG
    (93) condicionR -> . LONG opR INT
    (94) condicionR -> . LONG opR FLOAT
    (95) condicionR -> . STRING_1 opR STRING_1
    (96) condicionR -> . CHAR opR CHAR
    (97) condicionR -> . ID opR ID
    (98) condicionN -> . EXCL_WS BOOLEAN
    (99) condicionN -> . EXCL_WS ID
    (30) impresion -> . PRINT LPAREN expression RPAREN
    (31) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) asignacion -> . keywordVariables asignacionSimple
    (40) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_linkedlist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1
    (41) keywordVariables -> . VAR
    (42) keywordVariables -> . VAL
    (43) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (44) asignacionSimple -> . ID EQUAL valor
    (32) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (22) queue_operations -> . queue_add
    (23) queue_operations -> . queue_peek
    (24) queue_operations -> . queue_remove
    (25) queue_operations -> . queue_poll
    (111) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (114) stack_actuar -> . ID DOT stack_funciones
    (113) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (112) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (132) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (133) lsimplem -> . ID DOT Lmetod
    (134) lcomp -> . ID DOT Cmetod
    (26) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (27) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (29) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (28) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 25
    LONG            shift and go to state 26
    STRING_1        shift and go to state 27
    CHAR            shift and go to state 28
    EXCL_WS         shift and go to state 29
    PRINT           shift and go to state 30
    PRINTLN         shift and go to state 31
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    LINKEDL         shift and go to state 45
    STACK           shift and go to state 50

    condicion                      shift and go to state 5
    line                           shift and go to state 242
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 32
    asignacionSimple               shift and go to state 33
    queue                          shift and go to state 34
    queue_operations               shift and go to state 35
    stack                          shift and go to state 36
    stack_actuar                   shift and go to state 37
    instance_linkedlist            shift and go to state 38
    def_estruct_tipoDato           shift and go to state 39
    lista                          shift and go to state 40
    lsimplem                       shift and go to state 41
    lcomp                          shift and go to state 42
    queue_add                      shift and go to state 46
    queue_peek                     shift and go to state 47
    queue_remove                   shift and go to state 48
    queue_poll                     shift and go to state 49

state 230

    (131) while -> WHILE LPAREN ID opR INT . RPAREN LCURL morelines RCURL

    RPAREN          shift and go to state 243


state 231

    (111) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (113) instance_linkedlist -> . LINKEDL LPAREN RPAREN

    LINKEDL         shift and go to state 45

    instance_linkedlist            shift and go to state 244

state 232

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 245


state 233

    (32) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (51) tipoDato -> . TINT
    (52) tipoDato -> . TLONG
    (53) tipoDato -> . TFLOAT
    (54) tipoDato -> . TDOUBLE
    (55) tipoDato -> . TBOOLEAN
    (56) tipoDato -> . TCHAR
    (57) tipoDato -> . TSTRING

    TINT            shift and go to state 170
    TLONG           shift and go to state 171
    TFLOAT          shift and go to state 172
    TDOUBLE         shift and go to state 173
    TBOOLEAN        shift and go to state 174
    TCHAR           shift and go to state 175
    TSTRING         shift and go to state 176

    tipoDato                       shift and go to state 246

state 234

    (36) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 247


state 235

    (33) for -> FOR LPAREN ID IN iterable RPAREN . LCURL morelines RCURL

    LCURL           shift and go to state 248


state 236

    (35) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 249


state 237

    (26) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LPAREN          reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    FOR             reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    IF              reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    WHILE           reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    BOOLEAN         reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    ID              reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    INT             reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    FLOAT           reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LONG            reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    STRING_1        reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    CHAR            reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    EXCL_WS         reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    PRINT           reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    PRINTLN         reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    VAR             reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    VAL             reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LINKEDL         reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    STACK           reduce using rule 26 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 238

    (128) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LPAREN          reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    FOR             reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    IF              reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    WHILE           reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    BOOLEAN         reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    ID              reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    INT             reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    FLOAT           reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LONG            reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    STRING_1        reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    CHAR            reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    EXCL_WS         reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    PRINT           reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    PRINTLN         reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    VAR             reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    VAL             reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LINKEDL         reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    STACK           reduce using rule 128 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 239

    (129) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LPAREN          reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    FOR             reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    IF              reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    WHILE           reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    BOOLEAN         reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    ID              reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    INT             reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    FLOAT           reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LONG            reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    STRING_1        reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    CHAR            reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    EXCL_WS         reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    PRINT           reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    PRINTLN         reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    VAR             reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    VAL             reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LINKEDL         reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    STACK           reduce using rule 129 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 240

    (130) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LPAREN          reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    FOR             reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    IF              reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    WHILE           reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    BOOLEAN         reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    ID              reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    INT             reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    FLOAT           reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LONG            reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    STRING_1        reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    CHAR            reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    EXCL_WS         reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    PRINT           reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    PRINTLN         reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    VAR             reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    VAL             reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LINKEDL         reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    STACK           reduce using rule 130 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 241

    (122) stack_push -> PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    LPAREN          reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    FOR             reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    IF              reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    WHILE           reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    BOOLEAN         reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    ID              reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    INT             reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    FLOAT           reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    LONG            reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    STRING_1        reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    CHAR            reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    EXCL_WS         reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    PRINT           reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    PRINTLN         reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    VAR             reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    VAL             reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    LINKEDL         reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)
    STACK           reduce using rule 122 (stack_push -> PUSH LPAREN factor RPAREN .)


state 242

    (76) if -> IF LPAREN condicion RPAREN LCURL line . RCURL
    (77) if -> IF LPAREN condicion RPAREN LCURL line . RCURL else

    RCURL           shift and go to state 250


state 243

    (131) while -> WHILE LPAREN ID opR INT RPAREN . LCURL morelines RCURL

    LCURL           shift and go to state 251


state 244

    (111) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    SEMICOLON       reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LPAREN          reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    FOR             reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    IF              reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    WHILE           reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    BOOLEAN         reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    ID              reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    INT             reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    FLOAT           reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LONG            reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    STRING_1        reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    CHAR            reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    EXCL_WS         reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    PRINT           reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    PRINTLN         reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    VAR             reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    VAL             reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LINKEDL         reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    STACK           reduce using rule 111 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 245

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 252


state 246

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 253


state 247

    (36) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 36 (iterable -> ID DOT INDICES .)


state 248

    (33) for -> FOR LPAREN ID IN iterable RPAREN LCURL . morelines RCURL
    (37) morelines -> . line
    (38) morelines -> . line morelines
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (19) estructurasControl -> . for
    (20) estructurasControl -> . if
    (21) estructurasControl -> . while
    (79) condicion -> . condicionL
    (80) condicion -> . condicionR
    (81) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (33) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (76) if -> . IF LPAREN condicion RPAREN LCURL line RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL line RCURL else
    (131) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (82) condicionL -> . BOOLEAN opL BOOLEAN
    (83) condicionL -> . ID opL ID
    (84) condicionL -> . ID opL BOOLEAN
    (85) condicionL -> . BOOLEAN opL ID
    (86) condicionR -> . INT opR INT
    (87) condicionR -> . INT opR FLOAT
    (88) condicionR -> . INT opR LONG
    (89) condicionR -> . FLOAT opR FLOAT
    (90) condicionR -> . FLOAT opR INT
    (91) condicionR -> . FLOAT opR LONG
    (92) condicionR -> . LONG opR LONG
    (93) condicionR -> . LONG opR INT
    (94) condicionR -> . LONG opR FLOAT
    (95) condicionR -> . STRING_1 opR STRING_1
    (96) condicionR -> . CHAR opR CHAR
    (97) condicionR -> . ID opR ID
    (98) condicionN -> . EXCL_WS BOOLEAN
    (99) condicionN -> . EXCL_WS ID
    (30) impresion -> . PRINT LPAREN expression RPAREN
    (31) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) asignacion -> . keywordVariables asignacionSimple
    (40) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_linkedlist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1
    (41) keywordVariables -> . VAR
    (42) keywordVariables -> . VAL
    (43) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (44) asignacionSimple -> . ID EQUAL valor
    (32) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (22) queue_operations -> . queue_add
    (23) queue_operations -> . queue_peek
    (24) queue_operations -> . queue_remove
    (25) queue_operations -> . queue_poll
    (111) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (114) stack_actuar -> . ID DOT stack_funciones
    (113) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (112) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (132) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (133) lsimplem -> . ID DOT Lmetod
    (134) lcomp -> . ID DOT Cmetod
    (26) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (27) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (29) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (28) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 25
    LONG            shift and go to state 26
    STRING_1        shift and go to state 27
    CHAR            shift and go to state 28
    EXCL_WS         shift and go to state 29
    PRINT           shift and go to state 30
    PRINTLN         shift and go to state 31
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    LINKEDL         shift and go to state 45
    STACK           shift and go to state 50

    morelines                      shift and go to state 254
    line                           shift and go to state 255
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 32
    asignacionSimple               shift and go to state 33
    queue                          shift and go to state 34
    queue_operations               shift and go to state 35
    stack                          shift and go to state 36
    stack_actuar                   shift and go to state 37
    instance_linkedlist            shift and go to state 38
    def_estruct_tipoDato           shift and go to state 39
    lista                          shift and go to state 40
    lsimplem                       shift and go to state 41
    lcomp                          shift and go to state 42
    queue_add                      shift and go to state 46
    queue_peek                     shift and go to state 47
    queue_remove                   shift and go to state 48
    queue_poll                     shift and go to state 49

state 249

    (35) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 35 (iterable -> INT THREEDOTS INT .)


state 250

    (76) if -> IF LPAREN condicion RPAREN LCURL line RCURL .
    (77) if -> IF LPAREN condicion RPAREN LCURL line RCURL . else
    (78) else -> . ELSE LCURL line RCURL

    $end            reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    RCURL           reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    LPAREN          reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    FOR             reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    IF              reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    WHILE           reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    BOOLEAN         reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    ID              reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    INT             reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    FLOAT           reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    LONG            reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    STRING_1        reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    CHAR            reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    EXCL_WS         reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    PRINT           reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    PRINTLN         reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    VAR             reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    VAL             reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    LINKEDL         reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    STACK           reduce using rule 76 (if -> IF LPAREN condicion RPAREN LCURL line RCURL .)
    ELSE            shift and go to state 257

    else                           shift and go to state 256

state 251

    (131) while -> WHILE LPAREN ID opR INT RPAREN LCURL . morelines RCURL
    (37) morelines -> . line
    (38) morelines -> . line morelines
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (19) estructurasControl -> . for
    (20) estructurasControl -> . if
    (21) estructurasControl -> . while
    (79) condicion -> . condicionL
    (80) condicion -> . condicionR
    (81) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (33) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (76) if -> . IF LPAREN condicion RPAREN LCURL line RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL line RCURL else
    (131) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (82) condicionL -> . BOOLEAN opL BOOLEAN
    (83) condicionL -> . ID opL ID
    (84) condicionL -> . ID opL BOOLEAN
    (85) condicionL -> . BOOLEAN opL ID
    (86) condicionR -> . INT opR INT
    (87) condicionR -> . INT opR FLOAT
    (88) condicionR -> . INT opR LONG
    (89) condicionR -> . FLOAT opR FLOAT
    (90) condicionR -> . FLOAT opR INT
    (91) condicionR -> . FLOAT opR LONG
    (92) condicionR -> . LONG opR LONG
    (93) condicionR -> . LONG opR INT
    (94) condicionR -> . LONG opR FLOAT
    (95) condicionR -> . STRING_1 opR STRING_1
    (96) condicionR -> . CHAR opR CHAR
    (97) condicionR -> . ID opR ID
    (98) condicionN -> . EXCL_WS BOOLEAN
    (99) condicionN -> . EXCL_WS ID
    (30) impresion -> . PRINT LPAREN expression RPAREN
    (31) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) asignacion -> . keywordVariables asignacionSimple
    (40) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_linkedlist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1
    (41) keywordVariables -> . VAR
    (42) keywordVariables -> . VAL
    (43) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (44) asignacionSimple -> . ID EQUAL valor
    (32) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (22) queue_operations -> . queue_add
    (23) queue_operations -> . queue_peek
    (24) queue_operations -> . queue_remove
    (25) queue_operations -> . queue_poll
    (111) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (114) stack_actuar -> . ID DOT stack_funciones
    (113) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (112) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (132) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (133) lsimplem -> . ID DOT Lmetod
    (134) lcomp -> . ID DOT Cmetod
    (26) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (27) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (29) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (28) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 25
    LONG            shift and go to state 26
    STRING_1        shift and go to state 27
    CHAR            shift and go to state 28
    EXCL_WS         shift and go to state 29
    PRINT           shift and go to state 30
    PRINTLN         shift and go to state 31
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    LINKEDL         shift and go to state 45
    STACK           shift and go to state 50

    morelines                      shift and go to state 258
    line                           shift and go to state 255
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 32
    asignacionSimple               shift and go to state 33
    queue                          shift and go to state 34
    queue_operations               shift and go to state 35
    stack                          shift and go to state 36
    stack_actuar                   shift and go to state 37
    instance_linkedlist            shift and go to state 38
    def_estruct_tipoDato           shift and go to state 39
    lista                          shift and go to state 40
    lsimplem                       shift and go to state 41
    lcomp                          shift and go to state 42
    queue_add                      shift and go to state 46
    queue_peek                     shift and go to state 47
    queue_remove                   shift and go to state 48
    queue_poll                     shift and go to state 49

state 252

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 259


state 253

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 260


state 254

    (33) for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines . RCURL

    RCURL           shift and go to state 261


state 255

    (37) morelines -> line .
    (38) morelines -> line . morelines
    (37) morelines -> . line
    (38) morelines -> . line morelines
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (19) estructurasControl -> . for
    (20) estructurasControl -> . if
    (21) estructurasControl -> . while
    (79) condicion -> . condicionL
    (80) condicion -> . condicionR
    (81) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (33) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (76) if -> . IF LPAREN condicion RPAREN LCURL line RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL line RCURL else
    (131) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (82) condicionL -> . BOOLEAN opL BOOLEAN
    (83) condicionL -> . ID opL ID
    (84) condicionL -> . ID opL BOOLEAN
    (85) condicionL -> . BOOLEAN opL ID
    (86) condicionR -> . INT opR INT
    (87) condicionR -> . INT opR FLOAT
    (88) condicionR -> . INT opR LONG
    (89) condicionR -> . FLOAT opR FLOAT
    (90) condicionR -> . FLOAT opR INT
    (91) condicionR -> . FLOAT opR LONG
    (92) condicionR -> . LONG opR LONG
    (93) condicionR -> . LONG opR INT
    (94) condicionR -> . LONG opR FLOAT
    (95) condicionR -> . STRING_1 opR STRING_1
    (96) condicionR -> . CHAR opR CHAR
    (97) condicionR -> . ID opR ID
    (98) condicionN -> . EXCL_WS BOOLEAN
    (99) condicionN -> . EXCL_WS ID
    (30) impresion -> . PRINT LPAREN expression RPAREN
    (31) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) asignacion -> . keywordVariables asignacionSimple
    (40) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_linkedlist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1
    (41) keywordVariables -> . VAR
    (42) keywordVariables -> . VAL
    (43) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (44) asignacionSimple -> . ID EQUAL valor
    (32) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (22) queue_operations -> . queue_add
    (23) queue_operations -> . queue_peek
    (24) queue_operations -> . queue_remove
    (25) queue_operations -> . queue_poll
    (111) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (114) stack_actuar -> . ID DOT stack_funciones
    (113) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (112) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (132) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (133) lsimplem -> . ID DOT Lmetod
    (134) lcomp -> . ID DOT Cmetod
    (26) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (27) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (29) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (28) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 37 (morelines -> line .)
    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 25
    LONG            shift and go to state 26
    STRING_1        shift and go to state 27
    CHAR            shift and go to state 28
    EXCL_WS         shift and go to state 29
    PRINT           shift and go to state 30
    PRINTLN         shift and go to state 31
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    LINKEDL         shift and go to state 45
    STACK           shift and go to state 50

    line                           shift and go to state 255
    morelines                      shift and go to state 262
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 32
    asignacionSimple               shift and go to state 33
    queue                          shift and go to state 34
    queue_operations               shift and go to state 35
    stack                          shift and go to state 36
    stack_actuar                   shift and go to state 37
    instance_linkedlist            shift and go to state 38
    def_estruct_tipoDato           shift and go to state 39
    lista                          shift and go to state 40
    lsimplem                       shift and go to state 41
    lcomp                          shift and go to state 42
    queue_add                      shift and go to state 46
    queue_peek                     shift and go to state 47
    queue_remove                   shift and go to state 48
    queue_poll                     shift and go to state 49

state 256

    (77) if -> IF LPAREN condicion RPAREN LCURL line RCURL else .

    $end            reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    RCURL           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    LPAREN          reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    FOR             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    IF              reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    WHILE           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    BOOLEAN         reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    ID              reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    INT             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    FLOAT           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    LONG            reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    STRING_1        reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    CHAR            reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    EXCL_WS         reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    PRINT           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    PRINTLN         reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    VAR             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    VAL             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    LINKEDL         reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)
    STACK           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL line RCURL else .)


state 257

    (78) else -> ELSE . LCURL line RCURL

    LCURL           shift and go to state 263


state 258

    (131) while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines . RCURL

    RCURL           shift and go to state 264


state 259

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 265


state 260

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 266


state 261

    (33) for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .

    $end            reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    LINKEDL         reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 33 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)


state 262

    (38) morelines -> line morelines .

    RCURL           reduce using rule 38 (morelines -> line morelines .)


state 263

    (78) else -> ELSE LCURL . line RCURL
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . expression TIMES term
    (62) expression -> . expression DIVIDE term
    (63) expression -> . expression MOD term
    (64) expression -> . expression INCREMENTONE
    (65) expression -> . expression DECREMENTONE
    (66) expression -> . term
    (19) estructurasControl -> . for
    (20) estructurasControl -> . if
    (21) estructurasControl -> . while
    (79) condicion -> . condicionL
    (80) condicion -> . condicionR
    (81) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (67) term -> . factor
    (68) term -> . LPAREN expression RPAREN
    (33) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (76) if -> . IF LPAREN condicion RPAREN LCURL line RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL line RCURL else
    (131) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (82) condicionL -> . BOOLEAN opL BOOLEAN
    (83) condicionL -> . ID opL ID
    (84) condicionL -> . ID opL BOOLEAN
    (85) condicionL -> . BOOLEAN opL ID
    (86) condicionR -> . INT opR INT
    (87) condicionR -> . INT opR FLOAT
    (88) condicionR -> . INT opR LONG
    (89) condicionR -> . FLOAT opR FLOAT
    (90) condicionR -> . FLOAT opR INT
    (91) condicionR -> . FLOAT opR LONG
    (92) condicionR -> . LONG opR LONG
    (93) condicionR -> . LONG opR INT
    (94) condicionR -> . LONG opR FLOAT
    (95) condicionR -> . STRING_1 opR STRING_1
    (96) condicionR -> . CHAR opR CHAR
    (97) condicionR -> . ID opR ID
    (98) condicionN -> . EXCL_WS BOOLEAN
    (99) condicionN -> . EXCL_WS ID
    (30) impresion -> . PRINT LPAREN expression RPAREN
    (31) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) asignacion -> . keywordVariables asignacionSimple
    (40) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_linkedlist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (69) factor -> . INT
    (70) factor -> . FLOAT
    (71) factor -> . LONG
    (72) factor -> . CHAR
    (73) factor -> . BOOLEAN
    (74) factor -> . ID
    (75) factor -> . STRING_1
    (41) keywordVariables -> . VAR
    (42) keywordVariables -> . VAL
    (43) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (44) asignacionSimple -> . ID EQUAL valor
    (32) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (22) queue_operations -> . queue_add
    (23) queue_operations -> . queue_peek
    (24) queue_operations -> . queue_remove
    (25) queue_operations -> . queue_poll
    (111) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (114) stack_actuar -> . ID DOT stack_funciones
    (113) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (112) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (132) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (133) lsimplem -> . ID DOT Lmetod
    (134) lcomp -> . ID DOT Cmetod
    (26) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (27) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (29) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (28) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 25
    LONG            shift and go to state 26
    STRING_1        shift and go to state 27
    CHAR            shift and go to state 28
    EXCL_WS         shift and go to state 29
    PRINT           shift and go to state 30
    PRINTLN         shift and go to state 31
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    LINKEDL         shift and go to state 45
    STACK           shift and go to state 50

    line                           shift and go to state 267
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 32
    asignacionSimple               shift and go to state 33
    queue                          shift and go to state 34
    queue_operations               shift and go to state 35
    stack                          shift and go to state 36
    stack_actuar                   shift and go to state 37
    instance_linkedlist            shift and go to state 38
    def_estruct_tipoDato           shift and go to state 39
    lista                          shift and go to state 40
    lsimplem                       shift and go to state 41
    lcomp                          shift and go to state 42
    queue_add                      shift and go to state 46
    queue_peek                     shift and go to state 47
    queue_remove                   shift and go to state 48
    queue_poll                     shift and go to state 49

state 264

    (131) while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .

    $end            reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    LINKEDL         reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 131 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)


state 265

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 268


state 266

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 269


state 267

    (78) else -> ELSE LCURL line . RCURL

    RCURL           shift and go to state 270


state 268

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 271


state 269

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (51) tipoDato -> . TINT
    (52) tipoDato -> . TLONG
    (53) tipoDato -> . TFLOAT
    (54) tipoDato -> . TDOUBLE
    (55) tipoDato -> . TBOOLEAN
    (56) tipoDato -> . TCHAR
    (57) tipoDato -> . TSTRING

    TINT            shift and go to state 170
    TLONG           shift and go to state 171
    TFLOAT          shift and go to state 172
    TDOUBLE         shift and go to state 173
    TBOOLEAN        shift and go to state 174
    TCHAR           shift and go to state 175
    TSTRING         shift and go to state 176

    tipoDato                       shift and go to state 272

state 270

    (78) else -> ELSE LCURL line RCURL .

    $end            reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    RCURL           reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    LPAREN          reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    FOR             reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    IF              reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    WHILE           reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    BOOLEAN         reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    ID              reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    INT             reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    FLOAT           reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    LONG            reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    STRING_1        reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    CHAR            reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    EXCL_WS         reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    PRINT           reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    PRINTLN         reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    VAR             reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    VAL             reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    LINKEDL         reduce using rule 78 (else -> ELSE LCURL line RCURL .)
    STACK           reduce using rule 78 (else -> ELSE LCURL line RCURL .)


state 271

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 273


state 272

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 274


state 273

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 275


state 274

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 276


state 275

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 277


state 276

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 278


state 277

    (132) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LPAREN          reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    FOR             reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    IF              reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    WHILE           reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    ID              reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    INT             reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    FLOAT           reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LONG            reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    STRING_1        reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    CHAR            reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    PRINT           reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    PRINTLN         reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    VAR             reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    VAL             reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LINKEDL         reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    STACK           reduce using rule 132 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 278

    (32) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LPAREN          reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    FOR             reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    IF              reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    WHILE           reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    ID              reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    INT             reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    FLOAT           reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LONG            reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    STRING_1        reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    CHAR            reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    PRINT           reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    PRINTLN         reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    VAR             reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    VAL             reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LINKEDL         reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    STACK           reduce using rule 32 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: reduce/reduce conflict in state 216 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 216
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> blocks
Rule 2     line -> blocks SEMICOLON
Rule 3     line -> blocks LINEBREAK
Rule 4     line -> blocks LINEBREAK line
Rule 5     line -> blocks LINEBREAK line LINEBREAK
Rule 6     line -> blocks SEMICOLON LINEBREAK
Rule 7     line -> blocks SEMICOLON LINEBREAK line
Rule 8     line -> blocks SEMICOLON LINEBREAK line LINEBREAK
Rule 9     line -> LINEBREAK
Rule 10    blocks -> impresion
Rule 11    blocks -> expression
Rule 12    blocks -> estructurasControl
Rule 13    blocks -> condicion
Rule 14    blocks -> funcion
Rule 15    blocks -> asignacion
Rule 16    blocks -> estructurasDatos
Rule 17    estructurasDatos -> queue
Rule 18    estructurasDatos -> queue_operations
Rule 19    estructurasDatos -> stack
Rule 20    estructurasDatos -> stack_actuar
Rule 21    estructurasDatos -> instance_linkedlist
Rule 22    estructurasDatos -> def_estruct_tipoDato
Rule 23    estructurasDatos -> lista
Rule 24    estructurasDatos -> lsimplem
Rule 25    estructurasDatos -> lcomp
Rule 26    estructurasControl -> for
Rule 27    estructurasControl -> if
Rule 28    estructurasControl -> while
Rule 29    queue_operations -> queue_add
Rule 30    queue_operations -> queue_peek
Rule 31    queue_operations -> queue_remove
Rule 32    queue_operations -> queue_poll
Rule 33    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 34    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 35    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 36    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 37    impresion -> PRINT LPAREN expression RPAREN
Rule 38    impresion -> PRINTLN LPAREN expression RPAREN
Rule 39    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 40    for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
Rule 41    iterable -> ID
Rule 42    iterable -> INT THREEDOTS INT
Rule 43    iterable -> ID DOT INDICES
Rule 44    asignacion -> keywordVariables asignacionSimple
Rule 45    asignacion -> asignacionSimple
Rule 46    keywordVariables -> VAR
Rule 47    keywordVariables -> VAL
Rule 48    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 49    asignacionSimple -> ID EQUAL valor
Rule 50    tipoDatoEspecifico -> TINT EQUAL INT
Rule 51    tipoDatoEspecifico -> TLONG EQUAL LONG
Rule 52    tipoDatoEspecifico -> TFLOAT EQUAL FLOAT
Rule 53    tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN
Rule 54    tipoDatoEspecifico -> TCHAR EQUAL CHAR
Rule 55    tipoDatoEspecifico -> TSTRING EQUAL STRING_1
Rule 56    tipoDato -> TINT
Rule 57    tipoDato -> TLONG
Rule 58    tipoDato -> TFLOAT
Rule 59    tipoDato -> TDOUBLE
Rule 60    tipoDato -> TBOOLEAN
Rule 61    tipoDato -> TCHAR
Rule 62    tipoDato -> TSTRING
Rule 63    valor -> expression
Rule 64    expression -> expression PLUS term
Rule 65    expression -> expression MINUS term
Rule 66    expression -> expression TIMES term
Rule 67    expression -> expression DIVIDE term
Rule 68    expression -> expression MOD term
Rule 69    expression -> expression INCREMENTONE
Rule 70    expression -> expression DECREMENTONE
Rule 71    expression -> term
Rule 72    term -> factor
Rule 73    term -> LPAREN expression RPAREN
Rule 74    factor -> INT
Rule 75    factor -> FLOAT
Rule 76    factor -> LONG
Rule 77    factor -> CHAR
Rule 78    factor -> BOOLEAN
Rule 79    factor -> ID
Rule 80    factor -> STRING_1
Rule 81    funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
Rule 82    funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
Rule 83    funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL
Rule 84    funcion -> FUN ID LPAREN RPAREN LCURL RCURL
Rule 85    lineorBreak -> line
Rule 86    lineorBreak -> LINEBREAK line LINEBREAK
Rule 87    lineorBreak -> LINEBREAK line
Rule 88    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
Rule 89    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
Rule 90    else -> ELSE LCURL lineorBreak RCURL
Rule 91    condicion -> condicionL
Rule 92    condicion -> condicionR
Rule 93    condicion -> condicionN
Rule 94    condicionL -> BOOLEAN opL BOOLEAN
Rule 95    condicionL -> ID opL ID
Rule 96    condicionL -> ID opL BOOLEAN
Rule 97    condicionL -> BOOLEAN opL ID
Rule 98    condicionR -> INT opR INT
Rule 99    condicionR -> INT opR FLOAT
Rule 100   condicionR -> INT opR LONG
Rule 101   condicionR -> FLOAT opR FLOAT
Rule 102   condicionR -> FLOAT opR INT
Rule 103   condicionR -> FLOAT opR LONG
Rule 104   condicionR -> LONG opR LONG
Rule 105   condicionR -> LONG opR INT
Rule 106   condicionR -> LONG opR FLOAT
Rule 107   condicionR -> STRING_1 opR STRING_1
Rule 108   condicionR -> CHAR opR CHAR
Rule 109   condicionR -> ID opR ID
Rule 110   condicionR -> ID opR INT
Rule 111   condicionR -> ID opR FLOAT
Rule 112   condicionR -> ID opR LONG
Rule 113   condicionN -> EXCL_WS BOOLEAN
Rule 114   condicionN -> EXCL_WS ID
Rule 115   opL -> CONJ
Rule 116   opL -> DISJ
Rule 117   opR -> LANGLE
Rule 118   opR -> RANGLE
Rule 119   opR -> LE
Rule 120   opR -> GE
Rule 121   opR -> EXCL_EQ
Rule 122   opR -> EXCL_EQEQ
Rule 123   opR -> AS_SAFE
Rule 124   opR -> EQEQ
Rule 125   opR -> EQEQEQ
Rule 126   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 127   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 128   instance_linkedlist -> LINKEDL LPAREN RPAREN
Rule 129   stack_actuar -> ID DOT stack_funciones
Rule 130   stack_funciones -> stack_isEmpty
Rule 131   stack_funciones -> stack_push
Rule 132   stack_funciones -> stack_pop
Rule 133   stack_funciones -> stack_peek
Rule 134   stack_funciones -> stack_size
Rule 135   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 136   stack_pop -> POP LPAREN RPAREN
Rule 137   stack_push -> PUSH LPAREN factor RPAREN
Rule 138   stack_peek -> PEEK LPAREN RPAREN
Rule 139   stack_size -> SIZE LPAREN RPAREN
Rule 140   Lmetod -> FIRST LPAREN RPAREN
Rule 141   Lmetod -> LAST LPAREN RPAREN
Rule 142   Lmetod -> REMOVEL LPAREN RPAREN
Rule 143   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 144   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 145   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 146   while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
Rule 147   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 148   lsimplem -> ID DOT Lmetod
Rule 149   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 33
ANNOTATION           : 
APPEND               : 143
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 123
AT_NO_WS             : 
BOOLEAN              : 53 78 94 94 96 97 113
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 54 77 108 108
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 115
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 70
DISJ                 : 116
DIVIDE               : 67
DIVIDEIN             : 
DO                   : 
DOT                  : 33 34 35 36 43 129 148 149
DOTS                 : 39 48 126 147
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 90
ENUM                 : 
EQEQ                 : 124
EQEQEQ               : 125
EQUAL                : 39 49 50 51 52 53 54 55 126 147
EXCL_EQ              : 121
EXCL_EQEQ            : 122
EXCL_NO_WS           : 
EXCL_WS              : 113 114
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 140
FLOAT                : 52 75 99 101 101 102 103 106 111
FOR                  : 40
FUN                  : 81 82 83 84
GE                   : 120
GET                  : 
HASH                 : 
ID                   : 33 34 35 36 39 40 41 43 48 49 79 81 82 82 83 83 84 95 95 96 97 109 109 110 111 112 114 126 129 146 147 148 149
IF                   : 88 89
IMPORT               : 
IN                   : 40
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 69
INCREMENTTIMES       : 
INDICES              : 43
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 42 42 50 74 98 98 99 100 102 105 110 146
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 135
LANGLE               : 39 39 117 127 147 147
LAST                 : 141
LATEINIT             : 
LCURL                : 40 81 82 83 84 88 89 90 146
LE                   : 119
LINEBREAK            : 3 4 5 5 6 7 8 8 9 86 86 87
LINKEDL              : 39 128 147 147
LISTOF               : 
LONG                 : 51 76 100 103 104 104 105 106 112
LPAREN               : 33 34 35 36 37 38 39 40 73 81 82 83 84 88 89 128 135 136 137 138 139 140 141 142 143 144 145 146 147
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 65
MOD                  : 68
MODIN                : 
NOINLINE             : 
OBJECT               : 143 144 147 147
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 34 138
PLUS                 : 64
POLL                 : 35
POP                  : 136
PRINT                : 37
PRINTLN              : 38
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 137
QUEST_WS             : 
QUEUE                : 39
RANGE                : 
RANGLE               : 39 39 118 127 147 147
RCURL                : 40 81 82 83 84 88 89 90 146
RECEIVER             : 
REIFIED              : 
REMOVE               : 36
REMOVEI              : 145
REMOVEL              : 142
REMOVEN              : 144
RETURN               : 
RPAREN               : 33 34 35 36 37 38 39 40 73 81 82 83 84 88 89 128 135 136 137 138 139 140 141 142 143 144 145 146 147
RSQUARE              : 
SEALED               : 
SEMICOLON            : 2 6 7 8
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 139
STACK                : 127
STRING_1             : 55 80 107 107
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 53 60
TCHAR                : 54 61
TDOUBLE              : 59
TEMPLATE             : 
TFLOAT               : 52 58
THIS                 : 
THREEDOTS            : 42
THROW                : 
TIMES                : 66
TINT                 : 50 56 145
TLONG                : 51 57
TRY                  : 
TSTRING              : 55 62
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 39 47
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 46
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 146
error                : 

Nonterminals, with rules where they appear

Cmetod               : 149
Lmetod               : 148
asignacion           : 15
asignacionSimple     : 44 45
blocks               : 1 2 3 4 5 6 7 8
condicion            : 13 88 89
condicionL           : 91
condicionN           : 93
condicionR           : 92
def_estruct_tipoDato : 22 126
else                 : 89
estructurasControl   : 12
estructurasDatos     : 16
expression           : 11 37 38 63 64 65 66 67 68 69 70 73
factor               : 33 72 137
for                  : 26
funcion              : 14
if                   : 27
impresion            : 10
instance_linkedlist  : 21 126
iterable             : 40
keywordVariables     : 44 126 147
lcomp                : 25
line                 : 4 5 7 8 85 86 87 0
lineorBreak          : 40 81 82 88 89 90 146
lista                : 23
lsimplem             : 24
opL                  : 94 95 96 97
opR                  : 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 146
queue                : 17
queue_add            : 29
queue_operations     : 18
queue_peek           : 30
queue_poll           : 32
queue_remove         : 31
stack                : 19
stack_actuar         : 20
stack_funciones      : 129
stack_isEmpty        : 130
stack_peek           : 133
stack_pop            : 132
stack_push           : 131
stack_size           : 134
term                 : 64 65 66 67 68 71
tipoDato             : 39 39 127
tipoDatoEspecifico   : 48
valor                : 49
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 1
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 1

    (0) S' -> line .



state 2

    (1) line -> blocks .
    (2) line -> blocks . SEMICOLON
    (3) line -> blocks . LINEBREAK
    (4) line -> blocks . LINEBREAK line
    (5) line -> blocks . LINEBREAK line LINEBREAK
    (6) line -> blocks . SEMICOLON LINEBREAK
    (7) line -> blocks . SEMICOLON LINEBREAK line
    (8) line -> blocks . SEMICOLON LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 1 (line -> blocks .)
    RCURL           reduce using rule 1 (line -> blocks .)
    SEMICOLON       shift and go to state 53
    LINEBREAK       shift and go to state 54

  ! LINEBREAK       [ reduce using rule 1 (line -> blocks .) ]


state 3

    (9) line -> LINEBREAK .

    $end            reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       reduce using rule 9 (line -> LINEBREAK .)
    RCURL           reduce using rule 9 (line -> LINEBREAK .)


state 4

    (10) blocks -> impresion .

    SEMICOLON       reduce using rule 10 (blocks -> impresion .)
    LINEBREAK       reduce using rule 10 (blocks -> impresion .)
    $end            reduce using rule 10 (blocks -> impresion .)
    RCURL           reduce using rule 10 (blocks -> impresion .)


state 5

    (11) blocks -> expression .
    (64) expression -> expression . PLUS term
    (65) expression -> expression . MINUS term
    (66) expression -> expression . TIMES term
    (67) expression -> expression . DIVIDE term
    (68) expression -> expression . MOD term
    (69) expression -> expression . INCREMENTONE
    (70) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 11 (blocks -> expression .)
    LINEBREAK       reduce using rule 11 (blocks -> expression .)
    $end            reduce using rule 11 (blocks -> expression .)
    RCURL           reduce using rule 11 (blocks -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 6

    (12) blocks -> estructurasControl .

    SEMICOLON       reduce using rule 12 (blocks -> estructurasControl .)
    LINEBREAK       reduce using rule 12 (blocks -> estructurasControl .)
    $end            reduce using rule 12 (blocks -> estructurasControl .)
    RCURL           reduce using rule 12 (blocks -> estructurasControl .)


state 7

    (13) blocks -> condicion .

    SEMICOLON       reduce using rule 13 (blocks -> condicion .)
    LINEBREAK       reduce using rule 13 (blocks -> condicion .)
    $end            reduce using rule 13 (blocks -> condicion .)
    RCURL           reduce using rule 13 (blocks -> condicion .)


state 8

    (14) blocks -> funcion .

    SEMICOLON       reduce using rule 14 (blocks -> funcion .)
    LINEBREAK       reduce using rule 14 (blocks -> funcion .)
    $end            reduce using rule 14 (blocks -> funcion .)
    RCURL           reduce using rule 14 (blocks -> funcion .)


state 9

    (15) blocks -> asignacion .

    SEMICOLON       reduce using rule 15 (blocks -> asignacion .)
    LINEBREAK       reduce using rule 15 (blocks -> asignacion .)
    $end            reduce using rule 15 (blocks -> asignacion .)
    RCURL           reduce using rule 15 (blocks -> asignacion .)


state 10

    (16) blocks -> estructurasDatos .

    SEMICOLON       reduce using rule 16 (blocks -> estructurasDatos .)
    LINEBREAK       reduce using rule 16 (blocks -> estructurasDatos .)
    $end            reduce using rule 16 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 16 (blocks -> estructurasDatos .)


state 11

    (37) impresion -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 62


state 12

    (73) term -> LPAREN . expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 63
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 13

    (38) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 71


state 14

    (71) expression -> term .

    PLUS            reduce using rule 71 (expression -> term .)
    MINUS           reduce using rule 71 (expression -> term .)
    TIMES           reduce using rule 71 (expression -> term .)
    DIVIDE          reduce using rule 71 (expression -> term .)
    MOD             reduce using rule 71 (expression -> term .)
    INCREMENTONE    reduce using rule 71 (expression -> term .)
    DECREMENTONE    reduce using rule 71 (expression -> term .)
    SEMICOLON       reduce using rule 71 (expression -> term .)
    LINEBREAK       reduce using rule 71 (expression -> term .)
    $end            reduce using rule 71 (expression -> term .)
    RPAREN          reduce using rule 71 (expression -> term .)
    RCURL           reduce using rule 71 (expression -> term .)


state 15

    (26) estructurasControl -> for .

    SEMICOLON       reduce using rule 26 (estructurasControl -> for .)
    LINEBREAK       reduce using rule 26 (estructurasControl -> for .)
    $end            reduce using rule 26 (estructurasControl -> for .)
    RCURL           reduce using rule 26 (estructurasControl -> for .)


state 16

    (27) estructurasControl -> if .

    SEMICOLON       reduce using rule 27 (estructurasControl -> if .)
    LINEBREAK       reduce using rule 27 (estructurasControl -> if .)
    $end            reduce using rule 27 (estructurasControl -> if .)
    RCURL           reduce using rule 27 (estructurasControl -> if .)


state 17

    (28) estructurasControl -> while .

    SEMICOLON       reduce using rule 28 (estructurasControl -> while .)
    LINEBREAK       reduce using rule 28 (estructurasControl -> while .)
    $end            reduce using rule 28 (estructurasControl -> while .)
    RCURL           reduce using rule 28 (estructurasControl -> while .)


state 18

    (91) condicion -> condicionL .

    SEMICOLON       reduce using rule 91 (condicion -> condicionL .)
    LINEBREAK       reduce using rule 91 (condicion -> condicionL .)
    $end            reduce using rule 91 (condicion -> condicionL .)
    RCURL           reduce using rule 91 (condicion -> condicionL .)
    RPAREN          reduce using rule 91 (condicion -> condicionL .)


state 19

    (92) condicion -> condicionR .

    SEMICOLON       reduce using rule 92 (condicion -> condicionR .)
    LINEBREAK       reduce using rule 92 (condicion -> condicionR .)
    $end            reduce using rule 92 (condicion -> condicionR .)
    RCURL           reduce using rule 92 (condicion -> condicionR .)
    RPAREN          reduce using rule 92 (condicion -> condicionR .)


state 20

    (93) condicion -> condicionN .

    SEMICOLON       reduce using rule 93 (condicion -> condicionN .)
    LINEBREAK       reduce using rule 93 (condicion -> condicionN .)
    $end            reduce using rule 93 (condicion -> condicionN .)
    RCURL           reduce using rule 93 (condicion -> condicionN .)
    RPAREN          reduce using rule 93 (condicion -> condicionN .)


state 21

    (81) funcion -> FUN . ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> FUN . ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> FUN . ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> FUN . ID LPAREN RPAREN LCURL RCURL

    ID              shift and go to state 72


state 22

    (95) condicionL -> ID . opL ID
    (96) condicionL -> ID . opL BOOLEAN
    (109) condicionR -> ID . opR ID
    (110) condicionR -> ID . opR INT
    (111) condicionR -> ID . opR FLOAT
    (112) condicionR -> ID . opR LONG
    (48) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (49) asignacionSimple -> ID . EQUAL valor
    (129) stack_actuar -> ID . DOT stack_funciones
    (148) lsimplem -> ID . DOT Lmetod
    (149) lcomp -> ID . DOT Cmetod
    (79) factor -> ID .
    (33) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (36) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (115) opL -> . CONJ
    (116) opL -> . DISJ
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    DOTS            shift and go to state 75
    EQUAL           shift and go to state 76
    DOT             shift and go to state 77
    PLUS            reduce using rule 79 (factor -> ID .)
    MINUS           reduce using rule 79 (factor -> ID .)
    TIMES           reduce using rule 79 (factor -> ID .)
    DIVIDE          reduce using rule 79 (factor -> ID .)
    MOD             reduce using rule 79 (factor -> ID .)
    INCREMENTONE    reduce using rule 79 (factor -> ID .)
    DECREMENTONE    reduce using rule 79 (factor -> ID .)
    SEMICOLON       reduce using rule 79 (factor -> ID .)
    LINEBREAK       reduce using rule 79 (factor -> ID .)
    $end            reduce using rule 79 (factor -> ID .)
    RCURL           reduce using rule 79 (factor -> ID .)
    CONJ            shift and go to state 78
    DISJ            shift and go to state 79
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opL                            shift and go to state 73
    opR                            shift and go to state 74

state 23

    (44) asignacion -> keywordVariables . asignacionSimple
    (126) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (147) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 90

    asignacionSimple               shift and go to state 89

state 24

    (45) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 45 (asignacion -> asignacionSimple .)
    LINEBREAK       reduce using rule 45 (asignacion -> asignacionSimple .)
    $end            reduce using rule 45 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 45 (asignacion -> asignacionSimple .)


state 25

    (17) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 17 (estructurasDatos -> queue .)
    LINEBREAK       reduce using rule 17 (estructurasDatos -> queue .)
    $end            reduce using rule 17 (estructurasDatos -> queue .)
    RCURL           reduce using rule 17 (estructurasDatos -> queue .)


state 26

    (18) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 18 (estructurasDatos -> queue_operations .)
    LINEBREAK       reduce using rule 18 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 18 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 18 (estructurasDatos -> queue_operations .)


state 27

    (19) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 19 (estructurasDatos -> stack .)
    LINEBREAK       reduce using rule 19 (estructurasDatos -> stack .)
    $end            reduce using rule 19 (estructurasDatos -> stack .)
    RCURL           reduce using rule 19 (estructurasDatos -> stack .)


state 28

    (20) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    LINEBREAK       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 20 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 20 (estructurasDatos -> stack_actuar .)


state 29

    (21) estructurasDatos -> instance_linkedlist .

    SEMICOLON       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    LINEBREAK       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 21 (estructurasDatos -> instance_linkedlist .)


state 30

    (22) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    LINEBREAK       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)


state 31

    (23) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 23 (estructurasDatos -> lista .)
    LINEBREAK       reduce using rule 23 (estructurasDatos -> lista .)
    $end            reduce using rule 23 (estructurasDatos -> lista .)
    RCURL           reduce using rule 23 (estructurasDatos -> lista .)


state 32

    (24) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 24 (estructurasDatos -> lsimplem .)
    LINEBREAK       reduce using rule 24 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 24 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 24 (estructurasDatos -> lsimplem .)


state 33

    (25) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 25 (estructurasDatos -> lcomp .)
    LINEBREAK       reduce using rule 25 (estructurasDatos -> lcomp .)
    $end            reduce using rule 25 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 25 (estructurasDatos -> lcomp .)


state 34

    (72) term -> factor .

    PLUS            reduce using rule 72 (term -> factor .)
    MINUS           reduce using rule 72 (term -> factor .)
    TIMES           reduce using rule 72 (term -> factor .)
    DIVIDE          reduce using rule 72 (term -> factor .)
    MOD             reduce using rule 72 (term -> factor .)
    INCREMENTONE    reduce using rule 72 (term -> factor .)
    DECREMENTONE    reduce using rule 72 (term -> factor .)
    SEMICOLON       reduce using rule 72 (term -> factor .)
    LINEBREAK       reduce using rule 72 (term -> factor .)
    $end            reduce using rule 72 (term -> factor .)
    RPAREN          reduce using rule 72 (term -> factor .)
    RCURL           reduce using rule 72 (term -> factor .)


state 35

    (40) for -> FOR . LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 91


state 36

    (88) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL else

    LPAREN          shift and go to state 92


state 37

    (146) while -> WHILE . LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 93


state 38

    (98) condicionR -> INT . opR INT
    (99) condicionR -> INT . opR FLOAT
    (100) condicionR -> INT . opR LONG
    (74) factor -> INT .
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    PLUS            reduce using rule 74 (factor -> INT .)
    MINUS           reduce using rule 74 (factor -> INT .)
    TIMES           reduce using rule 74 (factor -> INT .)
    DIVIDE          reduce using rule 74 (factor -> INT .)
    MOD             reduce using rule 74 (factor -> INT .)
    INCREMENTONE    reduce using rule 74 (factor -> INT .)
    DECREMENTONE    reduce using rule 74 (factor -> INT .)
    SEMICOLON       reduce using rule 74 (factor -> INT .)
    LINEBREAK       reduce using rule 74 (factor -> INT .)
    $end            reduce using rule 74 (factor -> INT .)
    RCURL           reduce using rule 74 (factor -> INT .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 94

state 39

    (94) condicionL -> BOOLEAN . opL BOOLEAN
    (97) condicionL -> BOOLEAN . opL ID
    (78) factor -> BOOLEAN .
    (115) opL -> . CONJ
    (116) opL -> . DISJ

    PLUS            reduce using rule 78 (factor -> BOOLEAN .)
    MINUS           reduce using rule 78 (factor -> BOOLEAN .)
    TIMES           reduce using rule 78 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 78 (factor -> BOOLEAN .)
    MOD             reduce using rule 78 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 78 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 78 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 78 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 78 (factor -> BOOLEAN .)
    $end            reduce using rule 78 (factor -> BOOLEAN .)
    RCURL           reduce using rule 78 (factor -> BOOLEAN .)
    CONJ            shift and go to state 78
    DISJ            shift and go to state 79

    opL                            shift and go to state 95

state 40

    (101) condicionR -> FLOAT . opR FLOAT
    (102) condicionR -> FLOAT . opR INT
    (103) condicionR -> FLOAT . opR LONG
    (75) factor -> FLOAT .
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    PLUS            reduce using rule 75 (factor -> FLOAT .)
    MINUS           reduce using rule 75 (factor -> FLOAT .)
    TIMES           reduce using rule 75 (factor -> FLOAT .)
    DIVIDE          reduce using rule 75 (factor -> FLOAT .)
    MOD             reduce using rule 75 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 75 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 75 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 75 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 75 (factor -> FLOAT .)
    $end            reduce using rule 75 (factor -> FLOAT .)
    RCURL           reduce using rule 75 (factor -> FLOAT .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 96

state 41

    (104) condicionR -> LONG . opR LONG
    (105) condicionR -> LONG . opR INT
    (106) condicionR -> LONG . opR FLOAT
    (76) factor -> LONG .
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    PLUS            reduce using rule 76 (factor -> LONG .)
    MINUS           reduce using rule 76 (factor -> LONG .)
    TIMES           reduce using rule 76 (factor -> LONG .)
    DIVIDE          reduce using rule 76 (factor -> LONG .)
    MOD             reduce using rule 76 (factor -> LONG .)
    INCREMENTONE    reduce using rule 76 (factor -> LONG .)
    DECREMENTONE    reduce using rule 76 (factor -> LONG .)
    SEMICOLON       reduce using rule 76 (factor -> LONG .)
    LINEBREAK       reduce using rule 76 (factor -> LONG .)
    $end            reduce using rule 76 (factor -> LONG .)
    RCURL           reduce using rule 76 (factor -> LONG .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 97

state 42

    (107) condicionR -> STRING_1 . opR STRING_1
    (80) factor -> STRING_1 .
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    PLUS            reduce using rule 80 (factor -> STRING_1 .)
    MINUS           reduce using rule 80 (factor -> STRING_1 .)
    TIMES           reduce using rule 80 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 80 (factor -> STRING_1 .)
    MOD             reduce using rule 80 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 80 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 80 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 80 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 80 (factor -> STRING_1 .)
    $end            reduce using rule 80 (factor -> STRING_1 .)
    RCURL           reduce using rule 80 (factor -> STRING_1 .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 98

state 43

    (108) condicionR -> CHAR . opR CHAR
    (77) factor -> CHAR .
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    PLUS            reduce using rule 77 (factor -> CHAR .)
    MINUS           reduce using rule 77 (factor -> CHAR .)
    TIMES           reduce using rule 77 (factor -> CHAR .)
    DIVIDE          reduce using rule 77 (factor -> CHAR .)
    MOD             reduce using rule 77 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 77 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 77 (factor -> CHAR .)
    SEMICOLON       reduce using rule 77 (factor -> CHAR .)
    LINEBREAK       reduce using rule 77 (factor -> CHAR .)
    $end            reduce using rule 77 (factor -> CHAR .)
    RCURL           reduce using rule 77 (factor -> CHAR .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 99

state 44

    (113) condicionN -> EXCL_WS . BOOLEAN
    (114) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 100
    ID              shift and go to state 101


state 45

    (46) keywordVariables -> VAR .

    ID              reduce using rule 46 (keywordVariables -> VAR .)


state 46

    (47) keywordVariables -> VAL .
    (39) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 102

  ! ID              [ reduce using rule 47 (keywordVariables -> VAL .) ]


state 47

    (128) instance_linkedlist -> LINKEDL . LPAREN RPAREN

    LPAREN          shift and go to state 103


state 48

    (29) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 29 (queue_operations -> queue_add .)
    LINEBREAK       reduce using rule 29 (queue_operations -> queue_add .)
    $end            reduce using rule 29 (queue_operations -> queue_add .)
    RCURL           reduce using rule 29 (queue_operations -> queue_add .)


state 49

    (30) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 30 (queue_operations -> queue_peek .)
    LINEBREAK       reduce using rule 30 (queue_operations -> queue_peek .)
    $end            reduce using rule 30 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 30 (queue_operations -> queue_peek .)


state 50

    (31) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 31 (queue_operations -> queue_remove .)
    LINEBREAK       reduce using rule 31 (queue_operations -> queue_remove .)
    $end            reduce using rule 31 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 31 (queue_operations -> queue_remove .)


state 51

    (32) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 32 (queue_operations -> queue_poll .)
    LINEBREAK       reduce using rule 32 (queue_operations -> queue_poll .)
    $end            reduce using rule 32 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 32 (queue_operations -> queue_poll .)


state 52

    (127) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 104


state 53

    (2) line -> blocks SEMICOLON .
    (6) line -> blocks SEMICOLON . LINEBREAK
    (7) line -> blocks SEMICOLON . LINEBREAK line
    (8) line -> blocks SEMICOLON . LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 2 (line -> blocks SEMICOLON .)
    RCURL           reduce using rule 2 (line -> blocks SEMICOLON .)
    LINEBREAK       shift and go to state 105

  ! LINEBREAK       [ reduce using rule 2 (line -> blocks SEMICOLON .) ]


state 54

    (3) line -> blocks LINEBREAK .
    (4) line -> blocks LINEBREAK . line
    (5) line -> blocks LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 3 (line -> blocks LINEBREAK .)
    RCURL           reduce using rule 3 (line -> blocks LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 3 (line -> blocks LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 106
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 55

    (64) expression -> expression PLUS . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 107
    factor                         shift and go to state 34

state 56

    (65) expression -> expression MINUS . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 108
    factor                         shift and go to state 34

state 57

    (66) expression -> expression TIMES . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 109
    factor                         shift and go to state 34

state 58

    (67) expression -> expression DIVIDE . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 110
    factor                         shift and go to state 34

state 59

    (68) expression -> expression MOD . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 111
    factor                         shift and go to state 34

state 60

    (69) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 69 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 69 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 69 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 69 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 69 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 69 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 69 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 69 (expression -> expression INCREMENTONE .)
    LINEBREAK       reduce using rule 69 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 69 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 69 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 69 (expression -> expression INCREMENTONE .)


state 61

    (70) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 70 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 70 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 70 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 70 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 70 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 70 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 70 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 70 (expression -> expression DECREMENTONE .)
    LINEBREAK       reduce using rule 70 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 70 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 70 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 70 (expression -> expression DECREMENTONE .)


state 62

    (37) impresion -> PRINT LPAREN . expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 112
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 63

    (73) term -> LPAREN expression . RPAREN
    (64) expression -> expression . PLUS term
    (65) expression -> expression . MINUS term
    (66) expression -> expression . TIMES term
    (67) expression -> expression . DIVIDE term
    (68) expression -> expression . MOD term
    (69) expression -> expression . INCREMENTONE
    (70) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 64

    (74) factor -> INT .

    RPAREN          reduce using rule 74 (factor -> INT .)
    PLUS            reduce using rule 74 (factor -> INT .)
    MINUS           reduce using rule 74 (factor -> INT .)
    TIMES           reduce using rule 74 (factor -> INT .)
    DIVIDE          reduce using rule 74 (factor -> INT .)
    MOD             reduce using rule 74 (factor -> INT .)
    INCREMENTONE    reduce using rule 74 (factor -> INT .)
    DECREMENTONE    reduce using rule 74 (factor -> INT .)
    SEMICOLON       reduce using rule 74 (factor -> INT .)
    LINEBREAK       reduce using rule 74 (factor -> INT .)
    $end            reduce using rule 74 (factor -> INT .)
    RCURL           reduce using rule 74 (factor -> INT .)


state 65

    (75) factor -> FLOAT .

    RPAREN          reduce using rule 75 (factor -> FLOAT .)
    PLUS            reduce using rule 75 (factor -> FLOAT .)
    MINUS           reduce using rule 75 (factor -> FLOAT .)
    TIMES           reduce using rule 75 (factor -> FLOAT .)
    DIVIDE          reduce using rule 75 (factor -> FLOAT .)
    MOD             reduce using rule 75 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 75 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 75 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 75 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 75 (factor -> FLOAT .)
    $end            reduce using rule 75 (factor -> FLOAT .)
    RCURL           reduce using rule 75 (factor -> FLOAT .)


state 66

    (76) factor -> LONG .

    RPAREN          reduce using rule 76 (factor -> LONG .)
    PLUS            reduce using rule 76 (factor -> LONG .)
    MINUS           reduce using rule 76 (factor -> LONG .)
    TIMES           reduce using rule 76 (factor -> LONG .)
    DIVIDE          reduce using rule 76 (factor -> LONG .)
    MOD             reduce using rule 76 (factor -> LONG .)
    INCREMENTONE    reduce using rule 76 (factor -> LONG .)
    DECREMENTONE    reduce using rule 76 (factor -> LONG .)
    SEMICOLON       reduce using rule 76 (factor -> LONG .)
    LINEBREAK       reduce using rule 76 (factor -> LONG .)
    $end            reduce using rule 76 (factor -> LONG .)
    RCURL           reduce using rule 76 (factor -> LONG .)


state 67

    (77) factor -> CHAR .

    RPAREN          reduce using rule 77 (factor -> CHAR .)
    PLUS            reduce using rule 77 (factor -> CHAR .)
    MINUS           reduce using rule 77 (factor -> CHAR .)
    TIMES           reduce using rule 77 (factor -> CHAR .)
    DIVIDE          reduce using rule 77 (factor -> CHAR .)
    MOD             reduce using rule 77 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 77 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 77 (factor -> CHAR .)
    SEMICOLON       reduce using rule 77 (factor -> CHAR .)
    LINEBREAK       reduce using rule 77 (factor -> CHAR .)
    $end            reduce using rule 77 (factor -> CHAR .)
    RCURL           reduce using rule 77 (factor -> CHAR .)


state 68

    (78) factor -> BOOLEAN .

    RPAREN          reduce using rule 78 (factor -> BOOLEAN .)
    PLUS            reduce using rule 78 (factor -> BOOLEAN .)
    MINUS           reduce using rule 78 (factor -> BOOLEAN .)
    TIMES           reduce using rule 78 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 78 (factor -> BOOLEAN .)
    MOD             reduce using rule 78 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 78 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 78 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 78 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 78 (factor -> BOOLEAN .)
    $end            reduce using rule 78 (factor -> BOOLEAN .)
    RCURL           reduce using rule 78 (factor -> BOOLEAN .)


state 69

    (79) factor -> ID .

    RPAREN          reduce using rule 79 (factor -> ID .)
    PLUS            reduce using rule 79 (factor -> ID .)
    MINUS           reduce using rule 79 (factor -> ID .)
    TIMES           reduce using rule 79 (factor -> ID .)
    DIVIDE          reduce using rule 79 (factor -> ID .)
    MOD             reduce using rule 79 (factor -> ID .)
    INCREMENTONE    reduce using rule 79 (factor -> ID .)
    DECREMENTONE    reduce using rule 79 (factor -> ID .)
    SEMICOLON       reduce using rule 79 (factor -> ID .)
    LINEBREAK       reduce using rule 79 (factor -> ID .)
    $end            reduce using rule 79 (factor -> ID .)
    RCURL           reduce using rule 79 (factor -> ID .)


state 70

    (80) factor -> STRING_1 .

    RPAREN          reduce using rule 80 (factor -> STRING_1 .)
    PLUS            reduce using rule 80 (factor -> STRING_1 .)
    MINUS           reduce using rule 80 (factor -> STRING_1 .)
    TIMES           reduce using rule 80 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 80 (factor -> STRING_1 .)
    MOD             reduce using rule 80 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 80 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 80 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 80 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 80 (factor -> STRING_1 .)
    $end            reduce using rule 80 (factor -> STRING_1 .)
    RCURL           reduce using rule 80 (factor -> STRING_1 .)


state 71

    (38) impresion -> PRINTLN LPAREN . expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 114
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 72

    (81) funcion -> FUN ID . LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> FUN ID . LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> FUN ID . LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> FUN ID . LPAREN RPAREN LCURL RCURL

    LPAREN          shift and go to state 115


state 73

    (95) condicionL -> ID opL . ID
    (96) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 116
    BOOLEAN         shift and go to state 117


state 74

    (109) condicionR -> ID opR . ID
    (110) condicionR -> ID opR . INT
    (111) condicionR -> ID opR . FLOAT
    (112) condicionR -> ID opR . LONG

    ID              shift and go to state 118
    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    LONG            shift and go to state 121


state 75

    (48) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (50) tipoDatoEspecifico -> . TINT EQUAL INT
    (51) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (52) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (53) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (54) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (55) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    TINT            shift and go to state 123
    TLONG           shift and go to state 124
    TFLOAT          shift and go to state 125
    TBOOLEAN        shift and go to state 126
    TCHAR           shift and go to state 127
    TSTRING         shift and go to state 128

    tipoDatoEspecifico             shift and go to state 122

state 76

    (49) asignacionSimple -> ID EQUAL . valor
    (63) valor -> . expression
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    valor                          shift and go to state 129
    expression                     shift and go to state 130
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 77

    (129) stack_actuar -> ID DOT . stack_funciones
    (148) lsimplem -> ID DOT . Lmetod
    (149) lcomp -> ID DOT . Cmetod
    (33) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (34) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (36) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (35) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (130) stack_funciones -> . stack_isEmpty
    (131) stack_funciones -> . stack_push
    (132) stack_funciones -> . stack_pop
    (133) stack_funciones -> . stack_peek
    (134) stack_funciones -> . stack_size
    (140) Lmetod -> . FIRST LPAREN RPAREN
    (141) Lmetod -> . LAST LPAREN RPAREN
    (142) Lmetod -> . REMOVEL LPAREN RPAREN
    (143) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (144) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (145) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (135) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (137) stack_push -> . PUSH LPAREN factor RPAREN
    (136) stack_pop -> . POP LPAREN RPAREN
    (138) stack_peek -> . PEEK LPAREN RPAREN
    (139) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 134
    PEEK            shift and go to state 135
    REMOVE          shift and go to state 136
    POLL            shift and go to state 137
    FIRST           shift and go to state 143
    LAST            shift and go to state 144
    REMOVEL         shift and go to state 145
    APPEND          shift and go to state 146
    REMOVEN         shift and go to state 147
    REMOVEI         shift and go to state 148
    ISEMPTY         shift and go to state 149
    PUSH            shift and go to state 150
    POP             shift and go to state 151
    SIZE            shift and go to state 152

    stack_funciones                shift and go to state 131
    Lmetod                         shift and go to state 132
    Cmetod                         shift and go to state 133
    stack_isEmpty                  shift and go to state 138
    stack_push                     shift and go to state 139
    stack_pop                      shift and go to state 140
    stack_peek                     shift and go to state 141
    stack_size                     shift and go to state 142

state 78

    (115) opL -> CONJ .

    ID              reduce using rule 115 (opL -> CONJ .)
    BOOLEAN         reduce using rule 115 (opL -> CONJ .)


state 79

    (116) opL -> DISJ .

    ID              reduce using rule 116 (opL -> DISJ .)
    BOOLEAN         reduce using rule 116 (opL -> DISJ .)


state 80

    (117) opR -> LANGLE .

    ID              reduce using rule 117 (opR -> LANGLE .)
    INT             reduce using rule 117 (opR -> LANGLE .)
    FLOAT           reduce using rule 117 (opR -> LANGLE .)
    LONG            reduce using rule 117 (opR -> LANGLE .)
    STRING_1        reduce using rule 117 (opR -> LANGLE .)
    CHAR            reduce using rule 117 (opR -> LANGLE .)


state 81

    (118) opR -> RANGLE .

    ID              reduce using rule 118 (opR -> RANGLE .)
    INT             reduce using rule 118 (opR -> RANGLE .)
    FLOAT           reduce using rule 118 (opR -> RANGLE .)
    LONG            reduce using rule 118 (opR -> RANGLE .)
    STRING_1        reduce using rule 118 (opR -> RANGLE .)
    CHAR            reduce using rule 118 (opR -> RANGLE .)


state 82

    (119) opR -> LE .

    ID              reduce using rule 119 (opR -> LE .)
    INT             reduce using rule 119 (opR -> LE .)
    FLOAT           reduce using rule 119 (opR -> LE .)
    LONG            reduce using rule 119 (opR -> LE .)
    STRING_1        reduce using rule 119 (opR -> LE .)
    CHAR            reduce using rule 119 (opR -> LE .)


state 83

    (120) opR -> GE .

    ID              reduce using rule 120 (opR -> GE .)
    INT             reduce using rule 120 (opR -> GE .)
    FLOAT           reduce using rule 120 (opR -> GE .)
    LONG            reduce using rule 120 (opR -> GE .)
    STRING_1        reduce using rule 120 (opR -> GE .)
    CHAR            reduce using rule 120 (opR -> GE .)


state 84

    (121) opR -> EXCL_EQ .

    ID              reduce using rule 121 (opR -> EXCL_EQ .)
    INT             reduce using rule 121 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 121 (opR -> EXCL_EQ .)
    LONG            reduce using rule 121 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 121 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 121 (opR -> EXCL_EQ .)


state 85

    (122) opR -> EXCL_EQEQ .

    ID              reduce using rule 122 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 122 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 122 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 122 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 122 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 122 (opR -> EXCL_EQEQ .)


state 86

    (123) opR -> AS_SAFE .

    ID              reduce using rule 123 (opR -> AS_SAFE .)
    INT             reduce using rule 123 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 123 (opR -> AS_SAFE .)
    LONG            reduce using rule 123 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 123 (opR -> AS_SAFE .)
    CHAR            reduce using rule 123 (opR -> AS_SAFE .)


state 87

    (124) opR -> EQEQ .

    ID              reduce using rule 124 (opR -> EQEQ .)
    INT             reduce using rule 124 (opR -> EQEQ .)
    FLOAT           reduce using rule 124 (opR -> EQEQ .)
    LONG            reduce using rule 124 (opR -> EQEQ .)
    STRING_1        reduce using rule 124 (opR -> EQEQ .)
    CHAR            reduce using rule 124 (opR -> EQEQ .)


state 88

    (125) opR -> EQEQEQ .

    ID              reduce using rule 125 (opR -> EQEQEQ .)
    INT             reduce using rule 125 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 125 (opR -> EQEQEQ .)
    LONG            reduce using rule 125 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 125 (opR -> EQEQEQ .)
    CHAR            reduce using rule 125 (opR -> EQEQEQ .)


state 89

    (44) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 44 (asignacion -> keywordVariables asignacionSimple .)
    LINEBREAK       reduce using rule 44 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 44 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 44 (asignacion -> keywordVariables asignacionSimple .)


state 90

    (126) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (147) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (48) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (49) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 153
    EQUAL           shift and go to state 76


state 91

    (40) for -> FOR LPAREN . ID IN iterable RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 154


state 92

    (88) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL else
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 156
    ID              shift and go to state 157
    INT             shift and go to state 158
    FLOAT           shift and go to state 159
    LONG            shift and go to state 160
    STRING_1        shift and go to state 161
    CHAR            shift and go to state 162
    EXCL_WS         shift and go to state 44

    condicion                      shift and go to state 155
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20

state 93

    (146) while -> WHILE LPAREN . ID opR INT RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 163


state 94

    (98) condicionR -> INT opR . INT
    (99) condicionR -> INT opR . FLOAT
    (100) condicionR -> INT opR . LONG

    INT             shift and go to state 164
    FLOAT           shift and go to state 165
    LONG            shift and go to state 166


state 95

    (94) condicionL -> BOOLEAN opL . BOOLEAN
    (97) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 167
    ID              shift and go to state 168


state 96

    (101) condicionR -> FLOAT opR . FLOAT
    (102) condicionR -> FLOAT opR . INT
    (103) condicionR -> FLOAT opR . LONG

    FLOAT           shift and go to state 169
    INT             shift and go to state 170
    LONG            shift and go to state 171


state 97

    (104) condicionR -> LONG opR . LONG
    (105) condicionR -> LONG opR . INT
    (106) condicionR -> LONG opR . FLOAT

    LONG            shift and go to state 172
    INT             shift and go to state 173
    FLOAT           shift and go to state 174


state 98

    (107) condicionR -> STRING_1 opR . STRING_1

    STRING_1        shift and go to state 175


state 99

    (108) condicionR -> CHAR opR . CHAR

    CHAR            shift and go to state 176


state 100

    (113) condicionN -> EXCL_WS BOOLEAN .

    SEMICOLON       reduce using rule 113 (condicionN -> EXCL_WS BOOLEAN .)
    LINEBREAK       reduce using rule 113 (condicionN -> EXCL_WS BOOLEAN .)
    $end            reduce using rule 113 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 113 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 113 (condicionN -> EXCL_WS BOOLEAN .)


state 101

    (114) condicionN -> EXCL_WS ID .

    SEMICOLON       reduce using rule 114 (condicionN -> EXCL_WS ID .)
    LINEBREAK       reduce using rule 114 (condicionN -> EXCL_WS ID .)
    $end            reduce using rule 114 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 114 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 114 (condicionN -> EXCL_WS ID .)


state 102

    (39) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 177


state 103

    (128) instance_linkedlist -> LINKEDL LPAREN . RPAREN

    RPAREN          shift and go to state 178


state 104

    (127) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (56) tipoDato -> . TINT
    (57) tipoDato -> . TLONG
    (58) tipoDato -> . TFLOAT
    (59) tipoDato -> . TDOUBLE
    (60) tipoDato -> . TBOOLEAN
    (61) tipoDato -> . TCHAR
    (62) tipoDato -> . TSTRING

    TINT            shift and go to state 180
    TLONG           shift and go to state 181
    TFLOAT          shift and go to state 182
    TDOUBLE         shift and go to state 183
    TBOOLEAN        shift and go to state 184
    TCHAR           shift and go to state 185
    TSTRING         shift and go to state 186

    tipoDato                       shift and go to state 179

state 105

    (6) line -> blocks SEMICOLON LINEBREAK .
    (7) line -> blocks SEMICOLON LINEBREAK . line
    (8) line -> blocks SEMICOLON LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    RCURL           reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 187
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 106

    (4) line -> blocks LINEBREAK line .
    (5) line -> blocks LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 4 (line -> blocks LINEBREAK line .)
    RCURL           reduce using rule 4 (line -> blocks LINEBREAK line .)
    LINEBREAK       shift and go to state 188

  ! LINEBREAK       [ reduce using rule 4 (line -> blocks LINEBREAK line .) ]


state 107

    (64) expression -> expression PLUS term .

    PLUS            reduce using rule 64 (expression -> expression PLUS term .)
    MINUS           reduce using rule 64 (expression -> expression PLUS term .)
    TIMES           reduce using rule 64 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 64 (expression -> expression PLUS term .)
    MOD             reduce using rule 64 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 64 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 64 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 64 (expression -> expression PLUS term .)
    LINEBREAK       reduce using rule 64 (expression -> expression PLUS term .)
    $end            reduce using rule 64 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 64 (expression -> expression PLUS term .)
    RCURL           reduce using rule 64 (expression -> expression PLUS term .)


state 108

    (65) expression -> expression MINUS term .

    PLUS            reduce using rule 65 (expression -> expression MINUS term .)
    MINUS           reduce using rule 65 (expression -> expression MINUS term .)
    TIMES           reduce using rule 65 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 65 (expression -> expression MINUS term .)
    MOD             reduce using rule 65 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 65 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 65 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 65 (expression -> expression MINUS term .)
    LINEBREAK       reduce using rule 65 (expression -> expression MINUS term .)
    $end            reduce using rule 65 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 65 (expression -> expression MINUS term .)
    RCURL           reduce using rule 65 (expression -> expression MINUS term .)


state 109

    (66) expression -> expression TIMES term .

    PLUS            reduce using rule 66 (expression -> expression TIMES term .)
    MINUS           reduce using rule 66 (expression -> expression TIMES term .)
    TIMES           reduce using rule 66 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 66 (expression -> expression TIMES term .)
    MOD             reduce using rule 66 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 66 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 66 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 66 (expression -> expression TIMES term .)
    LINEBREAK       reduce using rule 66 (expression -> expression TIMES term .)
    $end            reduce using rule 66 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 66 (expression -> expression TIMES term .)
    RCURL           reduce using rule 66 (expression -> expression TIMES term .)


state 110

    (67) expression -> expression DIVIDE term .

    PLUS            reduce using rule 67 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 67 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 67 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 67 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 67 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 67 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 67 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 67 (expression -> expression DIVIDE term .)
    LINEBREAK       reduce using rule 67 (expression -> expression DIVIDE term .)
    $end            reduce using rule 67 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 67 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 67 (expression -> expression DIVIDE term .)


state 111

    (68) expression -> expression MOD term .

    PLUS            reduce using rule 68 (expression -> expression MOD term .)
    MINUS           reduce using rule 68 (expression -> expression MOD term .)
    TIMES           reduce using rule 68 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 68 (expression -> expression MOD term .)
    MOD             reduce using rule 68 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 68 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 68 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 68 (expression -> expression MOD term .)
    LINEBREAK       reduce using rule 68 (expression -> expression MOD term .)
    $end            reduce using rule 68 (expression -> expression MOD term .)
    RPAREN          reduce using rule 68 (expression -> expression MOD term .)
    RCURL           reduce using rule 68 (expression -> expression MOD term .)


state 112

    (37) impresion -> PRINT LPAREN expression . RPAREN
    (64) expression -> expression . PLUS term
    (65) expression -> expression . MINUS term
    (66) expression -> expression . TIMES term
    (67) expression -> expression . DIVIDE term
    (68) expression -> expression . MOD term
    (69) expression -> expression . INCREMENTONE
    (70) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 189
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 113

    (73) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 73 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 73 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 73 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 73 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 73 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 73 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 73 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 73 (term -> LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 73 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 73 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 73 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 73 (term -> LPAREN expression RPAREN .)


state 114

    (38) impresion -> PRINTLN LPAREN expression . RPAREN
    (64) expression -> expression . PLUS term
    (65) expression -> expression . MINUS term
    (66) expression -> expression . TIMES term
    (67) expression -> expression . DIVIDE term
    (68) expression -> expression . MOD term
    (69) expression -> expression . INCREMENTONE
    (70) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 190
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 115

    (81) funcion -> FUN ID LPAREN . RPAREN LCURL lineorBreak RCURL
    (82) funcion -> FUN ID LPAREN . ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> FUN ID LPAREN . ID RPAREN LCURL RCURL
    (84) funcion -> FUN ID LPAREN . RPAREN LCURL RCURL

    RPAREN          shift and go to state 192
    ID              shift and go to state 191


state 116

    (95) condicionL -> ID opL ID .

    SEMICOLON       reduce using rule 95 (condicionL -> ID opL ID .)
    LINEBREAK       reduce using rule 95 (condicionL -> ID opL ID .)
    $end            reduce using rule 95 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 95 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 95 (condicionL -> ID opL ID .)


state 117

    (96) condicionL -> ID opL BOOLEAN .

    SEMICOLON       reduce using rule 96 (condicionL -> ID opL BOOLEAN .)
    LINEBREAK       reduce using rule 96 (condicionL -> ID opL BOOLEAN .)
    $end            reduce using rule 96 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 96 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 96 (condicionL -> ID opL BOOLEAN .)


state 118

    (109) condicionR -> ID opR ID .

    SEMICOLON       reduce using rule 109 (condicionR -> ID opR ID .)
    LINEBREAK       reduce using rule 109 (condicionR -> ID opR ID .)
    $end            reduce using rule 109 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 109 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 109 (condicionR -> ID opR ID .)


state 119

    (110) condicionR -> ID opR INT .

    SEMICOLON       reduce using rule 110 (condicionR -> ID opR INT .)
    LINEBREAK       reduce using rule 110 (condicionR -> ID opR INT .)
    $end            reduce using rule 110 (condicionR -> ID opR INT .)
    RCURL           reduce using rule 110 (condicionR -> ID opR INT .)
    RPAREN          reduce using rule 110 (condicionR -> ID opR INT .)


state 120

    (111) condicionR -> ID opR FLOAT .

    SEMICOLON       reduce using rule 111 (condicionR -> ID opR FLOAT .)
    LINEBREAK       reduce using rule 111 (condicionR -> ID opR FLOAT .)
    $end            reduce using rule 111 (condicionR -> ID opR FLOAT .)
    RCURL           reduce using rule 111 (condicionR -> ID opR FLOAT .)
    RPAREN          reduce using rule 111 (condicionR -> ID opR FLOAT .)


state 121

    (112) condicionR -> ID opR LONG .

    SEMICOLON       reduce using rule 112 (condicionR -> ID opR LONG .)
    LINEBREAK       reduce using rule 112 (condicionR -> ID opR LONG .)
    $end            reduce using rule 112 (condicionR -> ID opR LONG .)
    RCURL           reduce using rule 112 (condicionR -> ID opR LONG .)
    RPAREN          reduce using rule 112 (condicionR -> ID opR LONG .)


state 122

    (48) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    SEMICOLON       reduce using rule 48 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LINEBREAK       reduce using rule 48 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 48 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 48 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 123

    (50) tipoDatoEspecifico -> TINT . EQUAL INT

    EQUAL           shift and go to state 193


state 124

    (51) tipoDatoEspecifico -> TLONG . EQUAL LONG

    EQUAL           shift and go to state 194


state 125

    (52) tipoDatoEspecifico -> TFLOAT . EQUAL FLOAT

    EQUAL           shift and go to state 195


state 126

    (53) tipoDatoEspecifico -> TBOOLEAN . EQUAL BOOLEAN

    EQUAL           shift and go to state 196


state 127

    (54) tipoDatoEspecifico -> TCHAR . EQUAL CHAR

    EQUAL           shift and go to state 197


state 128

    (55) tipoDatoEspecifico -> TSTRING . EQUAL STRING_1

    EQUAL           shift and go to state 198


state 129

    (49) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 49 (asignacionSimple -> ID EQUAL valor .)
    LINEBREAK       reduce using rule 49 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 49 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 49 (asignacionSimple -> ID EQUAL valor .)


state 130

    (63) valor -> expression .
    (64) expression -> expression . PLUS term
    (65) expression -> expression . MINUS term
    (66) expression -> expression . TIMES term
    (67) expression -> expression . DIVIDE term
    (68) expression -> expression . MOD term
    (69) expression -> expression . INCREMENTONE
    (70) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 63 (valor -> expression .)
    LINEBREAK       reduce using rule 63 (valor -> expression .)
    $end            reduce using rule 63 (valor -> expression .)
    RCURL           reduce using rule 63 (valor -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 131

    (129) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 129 (stack_actuar -> ID DOT stack_funciones .)
    LINEBREAK       reduce using rule 129 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 129 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 129 (stack_actuar -> ID DOT stack_funciones .)


state 132

    (148) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 148 (lsimplem -> ID DOT Lmetod .)
    LINEBREAK       reduce using rule 148 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 148 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 148 (lsimplem -> ID DOT Lmetod .)


state 133

    (149) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 149 (lcomp -> ID DOT Cmetod .)
    LINEBREAK       reduce using rule 149 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 149 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 149 (lcomp -> ID DOT Cmetod .)


state 134

    (33) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 199


state 135

    (34) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (138) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 200


state 136

    (36) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 201


state 137

    (35) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 202


state 138

    (130) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 130 (stack_funciones -> stack_isEmpty .)
    LINEBREAK       reduce using rule 130 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 130 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 130 (stack_funciones -> stack_isEmpty .)


state 139

    (131) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 131 (stack_funciones -> stack_push .)
    LINEBREAK       reduce using rule 131 (stack_funciones -> stack_push .)
    $end            reduce using rule 131 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 131 (stack_funciones -> stack_push .)


state 140

    (132) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 132 (stack_funciones -> stack_pop .)
    LINEBREAK       reduce using rule 132 (stack_funciones -> stack_pop .)
    $end            reduce using rule 132 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 132 (stack_funciones -> stack_pop .)


state 141

    (133) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 133 (stack_funciones -> stack_peek .)
    LINEBREAK       reduce using rule 133 (stack_funciones -> stack_peek .)
    $end            reduce using rule 133 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 133 (stack_funciones -> stack_peek .)


state 142

    (134) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 134 (stack_funciones -> stack_size .)
    LINEBREAK       reduce using rule 134 (stack_funciones -> stack_size .)
    $end            reduce using rule 134 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 134 (stack_funciones -> stack_size .)


state 143

    (140) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 203


state 144

    (141) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 204


state 145

    (142) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 205


state 146

    (143) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 206


state 147

    (144) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 207


state 148

    (145) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 208


state 149

    (135) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 209


state 150

    (137) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 210


state 151

    (136) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 211


state 152

    (139) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 212


state 153

    (126) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (147) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (48) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (50) tipoDatoEspecifico -> . TINT EQUAL INT
    (51) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (52) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (53) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (54) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (55) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    LINKEDL         shift and go to state 214
    STACK           shift and go to state 52
    TINT            shift and go to state 123
    TLONG           shift and go to state 124
    TFLOAT          shift and go to state 125
    TBOOLEAN        shift and go to state 126
    TCHAR           shift and go to state 127
    TSTRING         shift and go to state 128

    def_estruct_tipoDato           shift and go to state 213
    tipoDatoEspecifico             shift and go to state 122

state 154

    (40) for -> FOR LPAREN ID . IN iterable RPAREN LCURL lineorBreak RCURL

    IN              shift and go to state 215


state 155

    (88) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL
    (89) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL else

    RPAREN          shift and go to state 216


state 156

    (94) condicionL -> BOOLEAN . opL BOOLEAN
    (97) condicionL -> BOOLEAN . opL ID
    (115) opL -> . CONJ
    (116) opL -> . DISJ

    CONJ            shift and go to state 78
    DISJ            shift and go to state 79

    opL                            shift and go to state 95

state 157

    (95) condicionL -> ID . opL ID
    (96) condicionL -> ID . opL BOOLEAN
    (109) condicionR -> ID . opR ID
    (110) condicionR -> ID . opR INT
    (111) condicionR -> ID . opR FLOAT
    (112) condicionR -> ID . opR LONG
    (115) opL -> . CONJ
    (116) opL -> . DISJ
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    CONJ            shift and go to state 78
    DISJ            shift and go to state 79
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opL                            shift and go to state 73
    opR                            shift and go to state 74

state 158

    (98) condicionR -> INT . opR INT
    (99) condicionR -> INT . opR FLOAT
    (100) condicionR -> INT . opR LONG
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 94

state 159

    (101) condicionR -> FLOAT . opR FLOAT
    (102) condicionR -> FLOAT . opR INT
    (103) condicionR -> FLOAT . opR LONG
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 96

state 160

    (104) condicionR -> LONG . opR LONG
    (105) condicionR -> LONG . opR INT
    (106) condicionR -> LONG . opR FLOAT
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 97

state 161

    (107) condicionR -> STRING_1 . opR STRING_1
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 98

state 162

    (108) condicionR -> CHAR . opR CHAR
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 99

state 163

    (146) while -> WHILE LPAREN ID . opR INT RPAREN LCURL lineorBreak RCURL
    (117) opR -> . LANGLE
    (118) opR -> . RANGLE
    (119) opR -> . LE
    (120) opR -> . GE
    (121) opR -> . EXCL_EQ
    (122) opR -> . EXCL_EQEQ
    (123) opR -> . AS_SAFE
    (124) opR -> . EQEQ
    (125) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 217

state 164

    (98) condicionR -> INT opR INT .

    SEMICOLON       reduce using rule 98 (condicionR -> INT opR INT .)
    LINEBREAK       reduce using rule 98 (condicionR -> INT opR INT .)
    $end            reduce using rule 98 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 98 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 98 (condicionR -> INT opR INT .)


state 165

    (99) condicionR -> INT opR FLOAT .

    SEMICOLON       reduce using rule 99 (condicionR -> INT opR FLOAT .)
    LINEBREAK       reduce using rule 99 (condicionR -> INT opR FLOAT .)
    $end            reduce using rule 99 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 99 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 99 (condicionR -> INT opR FLOAT .)


state 166

    (100) condicionR -> INT opR LONG .

    SEMICOLON       reduce using rule 100 (condicionR -> INT opR LONG .)
    LINEBREAK       reduce using rule 100 (condicionR -> INT opR LONG .)
    $end            reduce using rule 100 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 100 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 100 (condicionR -> INT opR LONG .)


state 167

    (94) condicionL -> BOOLEAN opL BOOLEAN .

    SEMICOLON       reduce using rule 94 (condicionL -> BOOLEAN opL BOOLEAN .)
    LINEBREAK       reduce using rule 94 (condicionL -> BOOLEAN opL BOOLEAN .)
    $end            reduce using rule 94 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 94 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 94 (condicionL -> BOOLEAN opL BOOLEAN .)


state 168

    (97) condicionL -> BOOLEAN opL ID .

    SEMICOLON       reduce using rule 97 (condicionL -> BOOLEAN opL ID .)
    LINEBREAK       reduce using rule 97 (condicionL -> BOOLEAN opL ID .)
    $end            reduce using rule 97 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 97 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 97 (condicionL -> BOOLEAN opL ID .)


state 169

    (101) condicionR -> FLOAT opR FLOAT .

    SEMICOLON       reduce using rule 101 (condicionR -> FLOAT opR FLOAT .)
    LINEBREAK       reduce using rule 101 (condicionR -> FLOAT opR FLOAT .)
    $end            reduce using rule 101 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 101 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 101 (condicionR -> FLOAT opR FLOAT .)


state 170

    (102) condicionR -> FLOAT opR INT .

    SEMICOLON       reduce using rule 102 (condicionR -> FLOAT opR INT .)
    LINEBREAK       reduce using rule 102 (condicionR -> FLOAT opR INT .)
    $end            reduce using rule 102 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 102 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 102 (condicionR -> FLOAT opR INT .)


state 171

    (103) condicionR -> FLOAT opR LONG .

    SEMICOLON       reduce using rule 103 (condicionR -> FLOAT opR LONG .)
    LINEBREAK       reduce using rule 103 (condicionR -> FLOAT opR LONG .)
    $end            reduce using rule 103 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 103 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 103 (condicionR -> FLOAT opR LONG .)


state 172

    (104) condicionR -> LONG opR LONG .

    SEMICOLON       reduce using rule 104 (condicionR -> LONG opR LONG .)
    LINEBREAK       reduce using rule 104 (condicionR -> LONG opR LONG .)
    $end            reduce using rule 104 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 104 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 104 (condicionR -> LONG opR LONG .)


state 173

    (105) condicionR -> LONG opR INT .

    SEMICOLON       reduce using rule 105 (condicionR -> LONG opR INT .)
    LINEBREAK       reduce using rule 105 (condicionR -> LONG opR INT .)
    $end            reduce using rule 105 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 105 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 105 (condicionR -> LONG opR INT .)


state 174

    (106) condicionR -> LONG opR FLOAT .

    SEMICOLON       reduce using rule 106 (condicionR -> LONG opR FLOAT .)
    LINEBREAK       reduce using rule 106 (condicionR -> LONG opR FLOAT .)
    $end            reduce using rule 106 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 106 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 106 (condicionR -> LONG opR FLOAT .)


state 175

    (107) condicionR -> STRING_1 opR STRING_1 .

    SEMICOLON       reduce using rule 107 (condicionR -> STRING_1 opR STRING_1 .)
    LINEBREAK       reduce using rule 107 (condicionR -> STRING_1 opR STRING_1 .)
    $end            reduce using rule 107 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 107 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 107 (condicionR -> STRING_1 opR STRING_1 .)


state 176

    (108) condicionR -> CHAR opR CHAR .

    SEMICOLON       reduce using rule 108 (condicionR -> CHAR opR CHAR .)
    LINEBREAK       reduce using rule 108 (condicionR -> CHAR opR CHAR .)
    $end            reduce using rule 108 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 108 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 108 (condicionR -> CHAR opR CHAR .)


state 177

    (39) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 218


state 178

    (128) instance_linkedlist -> LINKEDL LPAREN RPAREN .

    SEMICOLON       reduce using rule 128 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 128 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    $end            reduce using rule 128 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    RCURL           reduce using rule 128 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)


state 179

    (127) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 219


state 180

    (56) tipoDato -> TINT .

    RANGLE          reduce using rule 56 (tipoDato -> TINT .)


state 181

    (57) tipoDato -> TLONG .

    RANGLE          reduce using rule 57 (tipoDato -> TLONG .)


state 182

    (58) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 58 (tipoDato -> TFLOAT .)


state 183

    (59) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 59 (tipoDato -> TDOUBLE .)


state 184

    (60) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 60 (tipoDato -> TBOOLEAN .)


state 185

    (61) tipoDato -> TCHAR .

    RANGLE          reduce using rule 61 (tipoDato -> TCHAR .)


state 186

    (62) tipoDato -> TSTRING .

    RANGLE          reduce using rule 62 (tipoDato -> TSTRING .)


state 187

    (7) line -> blocks SEMICOLON LINEBREAK line .
    (8) line -> blocks SEMICOLON LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    RCURL           reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    LINEBREAK       shift and go to state 220

  ! LINEBREAK       [ reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .) ]


state 188

    (5) line -> blocks LINEBREAK line LINEBREAK .

    $end            reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)


state 189

    (37) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)


state 190

    (38) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 191

    (82) funcion -> FUN ID LPAREN ID . RPAREN LCURL lineorBreak RCURL
    (83) funcion -> FUN ID LPAREN ID . RPAREN LCURL RCURL

    RPAREN          shift and go to state 221


state 192

    (81) funcion -> FUN ID LPAREN RPAREN . LCURL lineorBreak RCURL
    (84) funcion -> FUN ID LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 222


state 193

    (50) tipoDatoEspecifico -> TINT EQUAL . INT

    INT             shift and go to state 223


state 194

    (51) tipoDatoEspecifico -> TLONG EQUAL . LONG

    LONG            shift and go to state 224


state 195

    (52) tipoDatoEspecifico -> TFLOAT EQUAL . FLOAT

    FLOAT           shift and go to state 225


state 196

    (53) tipoDatoEspecifico -> TBOOLEAN EQUAL . BOOLEAN

    BOOLEAN         shift and go to state 226


state 197

    (54) tipoDatoEspecifico -> TCHAR EQUAL . CHAR

    CHAR            shift and go to state 227


state 198

    (55) tipoDatoEspecifico -> TSTRING EQUAL . STRING_1

    STRING_1        shift and go to state 228


state 199

    (33) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 229

state 200

    (34) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (138) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 230


state 201

    (36) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 231


state 202

    (35) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 232


state 203

    (140) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 233


state 204

    (141) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 234


state 205

    (142) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 235


state 206

    (143) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 236


state 207

    (144) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 237


state 208

    (145) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 238


state 209

    (135) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 239


state 210

    (137) stack_push -> PUSH LPAREN . factor RPAREN
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 240

state 211

    (136) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 241


state 212

    (139) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 242


state 213

    (126) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 243


state 214

    (147) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 244


state 215

    (40) for -> FOR LPAREN ID IN . iterable RPAREN LCURL lineorBreak RCURL
    (41) iterable -> . ID
    (42) iterable -> . INT THREEDOTS INT
    (43) iterable -> . ID DOT INDICES

    ID              shift and go to state 245
    INT             shift and go to state 247

    iterable                       shift and go to state 246

state 216

    (88) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL
    (89) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL else

    LCURL           shift and go to state 248


state 217

    (146) while -> WHILE LPAREN ID opR . INT RPAREN LCURL lineorBreak RCURL

    INT             shift and go to state 249


state 218

    (39) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 250


state 219

    (127) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 127 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LINEBREAK       reduce using rule 127 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 127 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 127 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 127 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 220

    (8) line -> blocks SEMICOLON LINEBREAK line LINEBREAK .

    $end            reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)


state 221

    (82) funcion -> FUN ID LPAREN ID RPAREN . LCURL lineorBreak RCURL
    (83) funcion -> FUN ID LPAREN ID RPAREN . LCURL RCURL

    LCURL           shift and go to state 251


state 222

    (81) funcion -> FUN ID LPAREN RPAREN LCURL . lineorBreak RCURL
    (84) funcion -> FUN ID LPAREN RPAREN LCURL . RCURL
    (85) lineorBreak -> . line
    (86) lineorBreak -> . LINEBREAK line LINEBREAK
    (87) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 253
    LINEBREAK       shift and go to state 255
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 252
    line                           shift and go to state 254
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 223

    (50) tipoDatoEspecifico -> TINT EQUAL INT .

    SEMICOLON       reduce using rule 50 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LINEBREAK       reduce using rule 50 (tipoDatoEspecifico -> TINT EQUAL INT .)
    $end            reduce using rule 50 (tipoDatoEspecifico -> TINT EQUAL INT .)
    RCURL           reduce using rule 50 (tipoDatoEspecifico -> TINT EQUAL INT .)


state 224

    (51) tipoDatoEspecifico -> TLONG EQUAL LONG .

    SEMICOLON       reduce using rule 51 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LINEBREAK       reduce using rule 51 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    $end            reduce using rule 51 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 51 (tipoDatoEspecifico -> TLONG EQUAL LONG .)


state 225

    (52) tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .

    SEMICOLON       reduce using rule 52 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LINEBREAK       reduce using rule 52 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 52 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 52 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)


state 226

    (53) tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .

    SEMICOLON       reduce using rule 53 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LINEBREAK       reduce using rule 53 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 53 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 53 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)


state 227

    (54) tipoDatoEspecifico -> TCHAR EQUAL CHAR .

    SEMICOLON       reduce using rule 54 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LINEBREAK       reduce using rule 54 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 54 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 54 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)


state 228

    (55) tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .

    SEMICOLON       reduce using rule 55 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LINEBREAK       reduce using rule 55 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 55 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 55 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)


state 229

    (33) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 256


state 230

    (34) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (138) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LINEBREAK resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINEBREAK       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 138 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LINEBREAK       [ reduce using rule 138 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 138 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 138 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 231

    (36) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 232

    (35) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 233

    (140) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 140 (Lmetod -> FIRST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 140 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 140 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 140 (Lmetod -> FIRST LPAREN RPAREN .)


state 234

    (141) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 141 (Lmetod -> LAST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 141 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 141 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 141 (Lmetod -> LAST LPAREN RPAREN .)


state 235

    (142) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 142 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 142 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 142 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 142 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 236

    (143) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 257


state 237

    (144) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 258


state 238

    (145) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 259


state 239

    (135) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 135 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LINEBREAK       reduce using rule 135 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 135 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 135 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 240

    (137) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 260


state 241

    (136) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 136 (stack_pop -> POP LPAREN RPAREN .)
    LINEBREAK       reduce using rule 136 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 136 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 136 (stack_pop -> POP LPAREN RPAREN .)


state 242

    (139) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 139 (stack_size -> SIZE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 139 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 139 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 139 (stack_size -> SIZE LPAREN RPAREN .)


state 243

    (126) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN

    LINKEDL         shift and go to state 47

    instance_linkedlist            shift and go to state 261

state 244

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 262


state 245

    (41) iterable -> ID .
    (43) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 41 (iterable -> ID .)
    DOT             shift and go to state 263


state 246

    (40) for -> FOR LPAREN ID IN iterable . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 264


state 247

    (42) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 265


state 248

    (88) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL
    (89) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL else
    (85) lineorBreak -> . line
    (86) lineorBreak -> . LINEBREAK line LINEBREAK
    (87) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 255
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    condicion                      shift and go to state 7
    lineorBreak                    shift and go to state 266
    line                           shift and go to state 254
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 249

    (146) while -> WHILE LPAREN ID opR INT . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 267


state 250

    (39) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (56) tipoDato -> . TINT
    (57) tipoDato -> . TLONG
    (58) tipoDato -> . TFLOAT
    (59) tipoDato -> . TDOUBLE
    (60) tipoDato -> . TBOOLEAN
    (61) tipoDato -> . TCHAR
    (62) tipoDato -> . TSTRING

    TINT            shift and go to state 180
    TLONG           shift and go to state 181
    TFLOAT          shift and go to state 182
    TDOUBLE         shift and go to state 183
    TBOOLEAN        shift and go to state 184
    TCHAR           shift and go to state 185
    TSTRING         shift and go to state 186

    tipoDato                       shift and go to state 268

state 251

    (82) funcion -> FUN ID LPAREN ID RPAREN LCURL . lineorBreak RCURL
    (83) funcion -> FUN ID LPAREN ID RPAREN LCURL . RCURL
    (85) lineorBreak -> . line
    (86) lineorBreak -> . LINEBREAK line LINEBREAK
    (87) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 270
    LINEBREAK       shift and go to state 255
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 269
    line                           shift and go to state 254
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 252

    (81) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 271


state 253

    (84) funcion -> FUN ID LPAREN RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    $end            reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    RCURL           reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)


state 254

    (85) lineorBreak -> line .

    RCURL           reduce using rule 85 (lineorBreak -> line .)


state 255

    (86) lineorBreak -> LINEBREAK . line LINEBREAK
    (87) lineorBreak -> LINEBREAK . line
    (9) line -> LINEBREAK .
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 256

    (33) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 257

    (143) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 143 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 143 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 143 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 143 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 258

    (144) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 144 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 144 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 144 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 144 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 259

    (145) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 145 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LINEBREAK       reduce using rule 145 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 145 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 145 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 260

    (137) stack_push -> PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 137 (stack_push -> PUSH LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 137 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 137 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 137 (stack_push -> PUSH LPAREN factor RPAREN .)


state 261

    (126) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    SEMICOLON       reduce using rule 126 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LINEBREAK       reduce using rule 126 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 126 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 126 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 262

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 273


state 263

    (43) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 274


state 264

    (40) for -> FOR LPAREN ID IN iterable RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 275


state 265

    (42) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 276


state 266

    (88) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL
    (89) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL else

    RCURL           shift and go to state 277


state 267

    (146) while -> WHILE LPAREN ID opR INT RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 278


state 268

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 279


state 269

    (82) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 280


state 270

    (83) funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    $end            reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    RCURL           reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)


state 271

    (81) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 81 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 81 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 81 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 81 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)


state 272

    (86) lineorBreak -> LINEBREAK line . LINEBREAK
    (87) lineorBreak -> LINEBREAK line .

    LINEBREAK       shift and go to state 281
    RCURL           reduce using rule 87 (lineorBreak -> LINEBREAK line .)


state 273

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 282


state 274

    (43) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 43 (iterable -> ID DOT INDICES .)


state 275

    (40) for -> FOR LPAREN ID IN iterable RPAREN LCURL . lineorBreak RCURL
    (85) lineorBreak -> . line
    (86) lineorBreak -> . LINEBREAK line LINEBREAK
    (87) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 255
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 283
    line                           shift and go to state 254
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 276

    (42) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 42 (iterable -> INT THREEDOTS INT .)


state 277

    (88) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .
    (89) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL . else
    (90) else -> . ELSE LCURL lineorBreak RCURL

    SEMICOLON       reduce using rule 88 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 88 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 88 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 88 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    ELSE            shift and go to state 285

    else                           shift and go to state 284

state 278

    (146) while -> WHILE LPAREN ID opR INT RPAREN LCURL . lineorBreak RCURL
    (85) lineorBreak -> . line
    (86) lineorBreak -> . LINEBREAK line LINEBREAK
    (87) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 255
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 286
    line                           shift and go to state 254
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 279

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 287


state 280

    (82) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 82 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 82 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 82 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 82 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)


state 281

    (86) lineorBreak -> LINEBREAK line LINEBREAK .

    RCURL           reduce using rule 86 (lineorBreak -> LINEBREAK line LINEBREAK .)


state 282

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 288


state 283

    (40) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 289


state 284

    (89) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .

    SEMICOLON       reduce using rule 89 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    LINEBREAK       reduce using rule 89 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    $end            reduce using rule 89 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    RCURL           reduce using rule 89 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)


state 285

    (90) else -> ELSE . LCURL lineorBreak RCURL

    LCURL           shift and go to state 290


state 286

    (146) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 291


state 287

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 292


state 288

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 293


state 289

    (40) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 40 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 40 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 40 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 40 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)


state 290

    (90) else -> ELSE LCURL . lineorBreak RCURL
    (85) lineorBreak -> . line
    (86) lineorBreak -> . LINEBREAK line LINEBREAK
    (87) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (64) expression -> . expression PLUS term
    (65) expression -> . expression MINUS term
    (66) expression -> . expression TIMES term
    (67) expression -> . expression DIVIDE term
    (68) expression -> . expression MOD term
    (69) expression -> . expression INCREMENTONE
    (70) expression -> . expression DECREMENTONE
    (71) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (91) condicion -> . condicionL
    (92) condicion -> . condicionR
    (93) condicion -> . condicionN
    (81) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (82) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (44) asignacion -> . keywordVariables asignacionSimple
    (45) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (72) term -> . factor
    (73) term -> . LPAREN expression RPAREN
    (40) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (88) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (89) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (146) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (94) condicionL -> . BOOLEAN opL BOOLEAN
    (95) condicionL -> . ID opL ID
    (96) condicionL -> . ID opL BOOLEAN
    (97) condicionL -> . BOOLEAN opL ID
    (98) condicionR -> . INT opR INT
    (99) condicionR -> . INT opR FLOAT
    (100) condicionR -> . INT opR LONG
    (101) condicionR -> . FLOAT opR FLOAT
    (102) condicionR -> . FLOAT opR INT
    (103) condicionR -> . FLOAT opR LONG
    (104) condicionR -> . LONG opR LONG
    (105) condicionR -> . LONG opR INT
    (106) condicionR -> . LONG opR FLOAT
    (107) condicionR -> . STRING_1 opR STRING_1
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . ID opR ID
    (110) condicionR -> . ID opR INT
    (111) condicionR -> . ID opR FLOAT
    (112) condicionR -> . ID opR LONG
    (113) condicionN -> . EXCL_WS BOOLEAN
    (114) condicionN -> . EXCL_WS ID
    (46) keywordVariables -> . VAR
    (47) keywordVariables -> . VAL
    (48) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (49) asignacionSimple -> . ID EQUAL valor
    (39) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (126) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (129) stack_actuar -> . ID DOT stack_funciones
    (128) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (127) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (147) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (148) lsimplem -> . ID DOT Lmetod
    (149) lcomp -> . ID DOT Cmetod
    (74) factor -> . INT
    (75) factor -> . FLOAT
    (76) factor -> . LONG
    (77) factor -> . CHAR
    (78) factor -> . BOOLEAN
    (79) factor -> . ID
    (80) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 255
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 294
    line                           shift and go to state 254
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 291

    (146) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 146 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 146 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 146 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 146 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)


state 292

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 295


state 293

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 296


state 294

    (90) else -> ELSE LCURL lineorBreak . RCURL

    RCURL           shift and go to state 297


state 295

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (56) tipoDato -> . TINT
    (57) tipoDato -> . TLONG
    (58) tipoDato -> . TFLOAT
    (59) tipoDato -> . TDOUBLE
    (60) tipoDato -> . TBOOLEAN
    (61) tipoDato -> . TCHAR
    (62) tipoDato -> . TSTRING

    TINT            shift and go to state 180
    TLONG           shift and go to state 181
    TFLOAT          shift and go to state 182
    TDOUBLE         shift and go to state 183
    TBOOLEAN        shift and go to state 184
    TCHAR           shift and go to state 185
    TSTRING         shift and go to state 186

    tipoDato                       shift and go to state 298

state 296

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 299


state 297

    (90) else -> ELSE LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 90 (else -> ELSE LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 90 (else -> ELSE LCURL lineorBreak RCURL .)
    $end            reduce using rule 90 (else -> ELSE LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 90 (else -> ELSE LCURL lineorBreak RCURL .)


state 298

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 300


state 299

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 301


state 300

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 302


state 301

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 303


state 302

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 304


state 303

    (147) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 147 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 147 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 147 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 147 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 304

    (39) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 39 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 39 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 39 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 39 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINEBREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 53 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 54 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 105 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 106 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 187 resolved as shift
WARNING: reduce/reduce conflict in state 230 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 230
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

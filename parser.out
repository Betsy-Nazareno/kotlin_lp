Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> blocks
Rule 2     line -> blocks SEMICOLON
Rule 3     line -> blocks LINEBREAK
Rule 4     line -> blocks LINEBREAK line
Rule 5     line -> blocks LINEBREAK line LINEBREAK
Rule 6     line -> blocks SEMICOLON LINEBREAK
Rule 7     line -> blocks SEMICOLON LINEBREAK line
Rule 8     line -> blocks SEMICOLON LINEBREAK line LINEBREAK
Rule 9     line -> LINEBREAK
Rule 10    blocks -> impresion
Rule 11    blocks -> expression
Rule 12    blocks -> asignacion
Rule 13    blocks -> estructurasControl
Rule 14    blocks -> condicion
Rule 15    blocks -> funcion
Rule 16    blocks -> estructurasDatos
Rule 17    estructurasDatos -> queue
Rule 18    estructurasDatos -> queue_operations
Rule 19    estructurasDatos -> stack
Rule 20    estructurasDatos -> stack_actuar
Rule 21    estructurasDatos -> instance_linkedlist
Rule 22    estructurasDatos -> def_estruct_tipoDato
Rule 23    estructurasDatos -> lista
Rule 24    estructurasDatos -> lsimplem
Rule 25    estructurasDatos -> lcomp
Rule 26    estructurasControl -> for
Rule 27    estructurasControl -> if
Rule 28    estructurasControl -> while
Rule 29    queue_operations -> queue_add
Rule 30    queue_operations -> queue_peek
Rule 31    queue_operations -> queue_remove
Rule 32    queue_operations -> queue_poll
Rule 33    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 34    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 35    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 36    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 37    impresion -> PRINT LPAREN expression RPAREN
Rule 38    impresion -> PRINTLN LPAREN expression RPAREN
Rule 39    funcion -> PRINT LPAREN error RPAREN
Rule 40    funcion -> PRINTLN LPAREN error RPAREN
Rule 41    queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 42    for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
Rule 43    for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL
Rule 44    iterable -> ID
Rule 45    iterable -> INT THREEDOTS INT
Rule 46    iterable -> ID DOT INDICES
Rule 47    asignacion -> keywordVariables asignacionSimple
Rule 48    asignacion -> asignacionSimple
Rule 49    keywordVariables -> VAR
Rule 50    keywordVariables -> VAL
Rule 51    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 52    asignacionSimple -> ID EQUAL valor
Rule 53    tipoDatoEspecifico -> TINT EQUAL INT
Rule 54    tipoDatoEspecifico -> TLONG EQUAL LONG
Rule 55    tipoDatoEspecifico -> TFLOAT EQUAL FLOAT
Rule 56    tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN
Rule 57    tipoDatoEspecifico -> TCHAR EQUAL CHAR
Rule 58    tipoDatoEspecifico -> TSTRING EQUAL STRING_1
Rule 59    tipoDato -> TINT
Rule 60    tipoDato -> TLONG
Rule 61    tipoDato -> TFLOAT
Rule 62    tipoDato -> TDOUBLE
Rule 63    tipoDato -> TBOOLEAN
Rule 64    tipoDato -> TCHAR
Rule 65    tipoDato -> TSTRING
Rule 66    valor -> expression
Rule 67    expression -> expression PLUS term
Rule 68    expression -> expression MINUS term
Rule 69    expression -> expression TIMES term
Rule 70    expression -> expression DIVIDE term
Rule 71    expression -> expression MOD term
Rule 72    expression -> expression INCREMENTONE
Rule 73    expression -> expression DECREMENTONE
Rule 74    expression -> term
Rule 75    term -> factor
Rule 76    term -> LPAREN expression RPAREN
Rule 77    factor -> INT
Rule 78    factor -> FLOAT
Rule 79    factor -> LONG
Rule 80    factor -> CHAR
Rule 81    factor -> BOOLEAN
Rule 82    factor -> ID
Rule 83    factor -> STRING_1
Rule 84    funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
Rule 85    funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
Rule 86    funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL
Rule 87    funcion -> FUN ID LPAREN RPAREN LCURL RCURL
Rule 88    lineorBreak -> line
Rule 89    lineorBreak -> LINEBREAK line LINEBREAK
Rule 90    lineorBreak -> LINEBREAK line
Rule 91    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
Rule 92    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
Rule 93    else -> ELSE LCURL lineorBreak RCURL
Rule 94    condicion -> condicionL
Rule 95    condicion -> condicionR
Rule 96    condicion -> condicionN
Rule 97    condicionL -> BOOLEAN opL BOOLEAN
Rule 98    condicionL -> ID opL ID
Rule 99    condicionL -> ID opL BOOLEAN
Rule 100   condicionL -> BOOLEAN opL ID
Rule 101   condicionR -> INT opR INT
Rule 102   condicionR -> INT opR FLOAT
Rule 103   condicionR -> INT opR LONG
Rule 104   condicionR -> INT opR ID
Rule 105   condicionR -> FLOAT opR FLOAT
Rule 106   condicionR -> FLOAT opR INT
Rule 107   condicionR -> FLOAT opR LONG
Rule 108   condicionR -> FLOAT opR ID
Rule 109   condicionR -> LONG opR LONG
Rule 110   condicionR -> LONG opR INT
Rule 111   condicionR -> LONG opR FLOAT
Rule 112   condicionR -> LONG opR ID
Rule 113   condicionR -> STRING_1 opR STRING_1
Rule 114   condicionR -> STRING_1 opR ID
Rule 115   condicionR -> CHAR opR CHAR
Rule 116   condicionR -> CHAR opR ID
Rule 117   condicionR -> ID opR ID
Rule 118   condicionR -> ID opR INT
Rule 119   condicionR -> ID opR FLOAT
Rule 120   condicionR -> ID opR LONG
Rule 121   condicionR -> ID opR STRING_1
Rule 122   condicionR -> ID opR CHAR
Rule 123   condicionN -> EXCL_WS BOOLEAN
Rule 124   condicionN -> EXCL_WS ID
Rule 125   opL -> CONJ
Rule 126   opL -> DISJ
Rule 127   opR -> LANGLE
Rule 128   opR -> RANGLE
Rule 129   opR -> LE
Rule 130   opR -> GE
Rule 131   opR -> EXCL_EQ
Rule 132   opR -> EXCL_EQEQ
Rule 133   opR -> AS_SAFE
Rule 134   opR -> EQEQ
Rule 135   opR -> EQEQEQ
Rule 136   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 137   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 138   instance_linkedlist -> LINKEDL LPAREN RPAREN
Rule 139   stack_actuar -> ID DOT stack_funciones
Rule 140   stack_funciones -> stack_isEmpty
Rule 141   stack_funciones -> stack_push
Rule 142   stack_funciones -> stack_pop
Rule 143   stack_funciones -> stack_peek
Rule 144   stack_funciones -> stack_size
Rule 145   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 146   stack_pop -> POP LPAREN RPAREN
Rule 147   stack_push -> PUSH LPAREN factor RPAREN
Rule 148   stack_peek -> PEEK LPAREN RPAREN
Rule 149   stack_size -> SIZE LPAREN RPAREN
Rule 150   Lmetod -> FIRST LPAREN RPAREN
Rule 151   Lmetod -> LAST LPAREN RPAREN
Rule 152   Lmetod -> REMOVEL LPAREN RPAREN
Rule 153   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 154   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 155   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 156   while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
Rule 157   while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
Rule 158   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 159   lsimplem -> ID DOT Lmetod
Rule 160   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 33
ANNOTATION           : 
APPEND               : 153
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 133
AT_NO_WS             : 
BOOLEAN              : 56 81 97 97 99 100 123
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 57 80 115 115 116 122
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 125
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 73
DISJ                 : 126
DIVIDE               : 70
DIVIDEIN             : 
DO                   : 
DOT                  : 33 34 35 36 46 139 159 160
DOTS                 : 41 51 136 158
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 93
ENUM                 : 
EQEQ                 : 134
EQEQEQ               : 135
EQUAL                : 41 52 53 54 55 56 57 58 136 158
EXCL_EQ              : 131
EXCL_EQEQ            : 132
EXCL_NO_WS           : 
EXCL_WS              : 123 124
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 150
FLOAT                : 55 78 102 105 105 106 107 108 111 119
FOR                  : 42 43
FUN                  : 84 85 86 87
GE                   : 130
GET                  : 
HASH                 : 
ID                   : 33 34 35 36 41 42 44 46 51 52 82 84 85 85 86 86 87 98 98 99 100 104 108 112 114 116 117 117 118 119 120 121 122 124 136 139 156 158 159 160
IF                   : 91 92
IMPORT               : 
IN                   : 42
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 72
INCREMENTTIMES       : 
INDICES              : 46
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 45 45 53 77 101 101 102 103 104 106 110 118 156
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 145
LANGLE               : 41 41 127 137 158 158
LAST                 : 151
LATEINIT             : 
LCURL                : 42 43 84 85 86 87 91 92 93 156 157
LE                   : 129
LINEBREAK            : 3 4 5 5 6 7 8 8 9 89 89 90
LINKEDL              : 41 138 158 158
LISTOF               : 
LONG                 : 54 79 103 107 109 109 110 111 112 120
LPAREN               : 33 34 35 36 37 38 39 40 41 42 43 76 84 85 86 87 91 92 138 145 146 147 148 149 150 151 152 153 154 155 156 157 158
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 68
MOD                  : 71
MODIN                : 
NOINLINE             : 
OBJECT               : 153 154 158 158
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 34 148
PLUS                 : 67
POLL                 : 35
POP                  : 146
PRINT                : 37 39
PRINTLN              : 38 40
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 147
QUEST_WS             : 
QUEUE                : 41
RANGE                : 
RANGLE               : 41 41 128 137 158 158
RCURL                : 42 43 84 85 86 87 91 92 93 156 157
RECEIVER             : 
REIFIED              : 
REMOVE               : 36
REMOVEI              : 155
REMOVEL              : 152
REMOVEN              : 154
RETURN               : 
RPAREN               : 33 34 35 36 37 38 39 40 41 42 43 76 84 85 86 87 91 92 138 145 146 147 148 149 150 151 152 153 154 155 156 157 158
RSQUARE              : 
SEALED               : 
SEMICOLON            : 2 6 7 8
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 149
STACK                : 137
STRING_1             : 58 83 113 113 114 121
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 56 63
TCHAR                : 57 64
TDOUBLE              : 62
TEMPLATE             : 
TFLOAT               : 55 61
THIS                 : 
THREEDOTS            : 45
THROW                : 
TIMES                : 69
TINT                 : 53 59 155
TLONG                : 54 60
TRY                  : 
TSTRING              : 58 65
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 50
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 49
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 156 157
error                : 39 40 43 157

Nonterminals, with rules where they appear

Cmetod               : 160
Lmetod               : 159
asignacion           : 12
asignacionSimple     : 47 48
blocks               : 1 2 3 4 5 6 7 8
condicion            : 14 91 92
condicionL           : 94
condicionN           : 96
condicionR           : 95
def_estruct_tipoDato : 22 136
else                 : 92
estructurasControl   : 13
estructurasDatos     : 16
expression           : 11 37 38 66 67 68 69 70 71 72 73 76
factor               : 33 75 147
for                  : 26
funcion              : 15
if                   : 27
impresion            : 10
instance_linkedlist  : 21 136
iterable             : 42
keywordVariables     : 41 47 136 158
lcomp                : 25
line                 : 4 5 7 8 88 89 90 0
lineorBreak          : 42 43 84 85 91 92 93 156 157
lista                : 23
lsimplem             : 24
opL                  : 97 98 99 100
opR                  : 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 156
queue                : 17
queue_add            : 29
queue_operations     : 18
queue_peek           : 30
queue_poll           : 32
queue_remove         : 31
stack                : 19
stack_actuar         : 20
stack_funciones      : 139
stack_isEmpty        : 140
stack_peek           : 143
stack_pop            : 142
stack_push           : 141
stack_size           : 144
term                 : 67 68 69 70 71 74
tipoDato             : 41 41 137
tipoDatoEspecifico   : 51
valor                : 52
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 1
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 1

    (0) S' -> line .



state 2

    (1) line -> blocks .
    (2) line -> blocks . SEMICOLON
    (3) line -> blocks . LINEBREAK
    (4) line -> blocks . LINEBREAK line
    (5) line -> blocks . LINEBREAK line LINEBREAK
    (6) line -> blocks . SEMICOLON LINEBREAK
    (7) line -> blocks . SEMICOLON LINEBREAK line
    (8) line -> blocks . SEMICOLON LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 1 (line -> blocks .)
    RCURL           reduce using rule 1 (line -> blocks .)
    SEMICOLON       shift and go to state 53
    LINEBREAK       shift and go to state 54

  ! LINEBREAK       [ reduce using rule 1 (line -> blocks .) ]


state 3

    (9) line -> LINEBREAK .

    $end            reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       reduce using rule 9 (line -> LINEBREAK .)
    RCURL           reduce using rule 9 (line -> LINEBREAK .)


state 4

    (10) blocks -> impresion .

    SEMICOLON       reduce using rule 10 (blocks -> impresion .)
    LINEBREAK       reduce using rule 10 (blocks -> impresion .)
    $end            reduce using rule 10 (blocks -> impresion .)
    RCURL           reduce using rule 10 (blocks -> impresion .)


state 5

    (11) blocks -> expression .
    (67) expression -> expression . PLUS term
    (68) expression -> expression . MINUS term
    (69) expression -> expression . TIMES term
    (70) expression -> expression . DIVIDE term
    (71) expression -> expression . MOD term
    (72) expression -> expression . INCREMENTONE
    (73) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 11 (blocks -> expression .)
    LINEBREAK       reduce using rule 11 (blocks -> expression .)
    $end            reduce using rule 11 (blocks -> expression .)
    RCURL           reduce using rule 11 (blocks -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 6

    (12) blocks -> asignacion .

    SEMICOLON       reduce using rule 12 (blocks -> asignacion .)
    LINEBREAK       reduce using rule 12 (blocks -> asignacion .)
    $end            reduce using rule 12 (blocks -> asignacion .)
    RCURL           reduce using rule 12 (blocks -> asignacion .)


state 7

    (13) blocks -> estructurasControl .

    SEMICOLON       reduce using rule 13 (blocks -> estructurasControl .)
    LINEBREAK       reduce using rule 13 (blocks -> estructurasControl .)
    $end            reduce using rule 13 (blocks -> estructurasControl .)
    RCURL           reduce using rule 13 (blocks -> estructurasControl .)


state 8

    (14) blocks -> condicion .

    SEMICOLON       reduce using rule 14 (blocks -> condicion .)
    LINEBREAK       reduce using rule 14 (blocks -> condicion .)
    $end            reduce using rule 14 (blocks -> condicion .)
    RCURL           reduce using rule 14 (blocks -> condicion .)


state 9

    (15) blocks -> funcion .

    SEMICOLON       reduce using rule 15 (blocks -> funcion .)
    LINEBREAK       reduce using rule 15 (blocks -> funcion .)
    $end            reduce using rule 15 (blocks -> funcion .)
    RCURL           reduce using rule 15 (blocks -> funcion .)


state 10

    (16) blocks -> estructurasDatos .

    SEMICOLON       reduce using rule 16 (blocks -> estructurasDatos .)
    LINEBREAK       reduce using rule 16 (blocks -> estructurasDatos .)
    $end            reduce using rule 16 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 16 (blocks -> estructurasDatos .)


state 11

    (37) impresion -> PRINT . LPAREN expression RPAREN
    (39) funcion -> PRINT . LPAREN error RPAREN

    LPAREN          shift and go to state 62


state 12

    (76) term -> LPAREN . expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 63
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 13

    (38) impresion -> PRINTLN . LPAREN expression RPAREN
    (40) funcion -> PRINTLN . LPAREN error RPAREN

    LPAREN          shift and go to state 71


state 14

    (74) expression -> term .

    PLUS            reduce using rule 74 (expression -> term .)
    MINUS           reduce using rule 74 (expression -> term .)
    TIMES           reduce using rule 74 (expression -> term .)
    DIVIDE          reduce using rule 74 (expression -> term .)
    MOD             reduce using rule 74 (expression -> term .)
    INCREMENTONE    reduce using rule 74 (expression -> term .)
    DECREMENTONE    reduce using rule 74 (expression -> term .)
    SEMICOLON       reduce using rule 74 (expression -> term .)
    LINEBREAK       reduce using rule 74 (expression -> term .)
    $end            reduce using rule 74 (expression -> term .)
    RPAREN          reduce using rule 74 (expression -> term .)
    RCURL           reduce using rule 74 (expression -> term .)


state 15

    (47) asignacion -> keywordVariables . asignacionSimple
    (41) queue -> keywordVariables . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (136) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 73

    asignacionSimple               shift and go to state 72

state 16

    (48) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 48 (asignacion -> asignacionSimple .)
    LINEBREAK       reduce using rule 48 (asignacion -> asignacionSimple .)
    $end            reduce using rule 48 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 48 (asignacion -> asignacionSimple .)


state 17

    (26) estructurasControl -> for .

    SEMICOLON       reduce using rule 26 (estructurasControl -> for .)
    LINEBREAK       reduce using rule 26 (estructurasControl -> for .)
    $end            reduce using rule 26 (estructurasControl -> for .)
    RCURL           reduce using rule 26 (estructurasControl -> for .)


state 18

    (27) estructurasControl -> if .

    SEMICOLON       reduce using rule 27 (estructurasControl -> if .)
    LINEBREAK       reduce using rule 27 (estructurasControl -> if .)
    $end            reduce using rule 27 (estructurasControl -> if .)
    RCURL           reduce using rule 27 (estructurasControl -> if .)


state 19

    (28) estructurasControl -> while .

    SEMICOLON       reduce using rule 28 (estructurasControl -> while .)
    LINEBREAK       reduce using rule 28 (estructurasControl -> while .)
    $end            reduce using rule 28 (estructurasControl -> while .)
    RCURL           reduce using rule 28 (estructurasControl -> while .)


state 20

    (94) condicion -> condicionL .

    SEMICOLON       reduce using rule 94 (condicion -> condicionL .)
    LINEBREAK       reduce using rule 94 (condicion -> condicionL .)
    $end            reduce using rule 94 (condicion -> condicionL .)
    RCURL           reduce using rule 94 (condicion -> condicionL .)
    RPAREN          reduce using rule 94 (condicion -> condicionL .)


state 21

    (95) condicion -> condicionR .

    SEMICOLON       reduce using rule 95 (condicion -> condicionR .)
    LINEBREAK       reduce using rule 95 (condicion -> condicionR .)
    $end            reduce using rule 95 (condicion -> condicionR .)
    RCURL           reduce using rule 95 (condicion -> condicionR .)
    RPAREN          reduce using rule 95 (condicion -> condicionR .)


state 22

    (96) condicion -> condicionN .

    SEMICOLON       reduce using rule 96 (condicion -> condicionN .)
    LINEBREAK       reduce using rule 96 (condicion -> condicionN .)
    $end            reduce using rule 96 (condicion -> condicionN .)
    RCURL           reduce using rule 96 (condicion -> condicionN .)
    RPAREN          reduce using rule 96 (condicion -> condicionN .)


state 23

    (84) funcion -> FUN . ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> FUN . ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> FUN . ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> FUN . ID LPAREN RPAREN LCURL RCURL

    ID              shift and go to state 74


state 24

    (51) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (52) asignacionSimple -> ID . EQUAL valor
    (98) condicionL -> ID . opL ID
    (99) condicionL -> ID . opL BOOLEAN
    (117) condicionR -> ID . opR ID
    (118) condicionR -> ID . opR INT
    (119) condicionR -> ID . opR FLOAT
    (120) condicionR -> ID . opR LONG
    (121) condicionR -> ID . opR STRING_1
    (122) condicionR -> ID . opR CHAR
    (139) stack_actuar -> ID . DOT stack_funciones
    (159) lsimplem -> ID . DOT Lmetod
    (160) lcomp -> ID . DOT Cmetod
    (82) factor -> ID .
    (33) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (36) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (125) opL -> . CONJ
    (126) opL -> . DISJ
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    DOTS            shift and go to state 75
    EQUAL           shift and go to state 76
    DOT             shift and go to state 79
    PLUS            reduce using rule 82 (factor -> ID .)
    MINUS           reduce using rule 82 (factor -> ID .)
    TIMES           reduce using rule 82 (factor -> ID .)
    DIVIDE          reduce using rule 82 (factor -> ID .)
    MOD             reduce using rule 82 (factor -> ID .)
    INCREMENTONE    reduce using rule 82 (factor -> ID .)
    DECREMENTONE    reduce using rule 82 (factor -> ID .)
    SEMICOLON       reduce using rule 82 (factor -> ID .)
    LINEBREAK       reduce using rule 82 (factor -> ID .)
    $end            reduce using rule 82 (factor -> ID .)
    RCURL           reduce using rule 82 (factor -> ID .)
    CONJ            shift and go to state 80
    DISJ            shift and go to state 81
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opL                            shift and go to state 77
    opR                            shift and go to state 78

state 25

    (17) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 17 (estructurasDatos -> queue .)
    LINEBREAK       reduce using rule 17 (estructurasDatos -> queue .)
    $end            reduce using rule 17 (estructurasDatos -> queue .)
    RCURL           reduce using rule 17 (estructurasDatos -> queue .)


state 26

    (18) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 18 (estructurasDatos -> queue_operations .)
    LINEBREAK       reduce using rule 18 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 18 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 18 (estructurasDatos -> queue_operations .)


state 27

    (19) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 19 (estructurasDatos -> stack .)
    LINEBREAK       reduce using rule 19 (estructurasDatos -> stack .)
    $end            reduce using rule 19 (estructurasDatos -> stack .)
    RCURL           reduce using rule 19 (estructurasDatos -> stack .)


state 28

    (20) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    LINEBREAK       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 20 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 20 (estructurasDatos -> stack_actuar .)


state 29

    (21) estructurasDatos -> instance_linkedlist .

    SEMICOLON       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    LINEBREAK       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 21 (estructurasDatos -> instance_linkedlist .)


state 30

    (22) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    LINEBREAK       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)


state 31

    (23) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 23 (estructurasDatos -> lista .)
    LINEBREAK       reduce using rule 23 (estructurasDatos -> lista .)
    $end            reduce using rule 23 (estructurasDatos -> lista .)
    RCURL           reduce using rule 23 (estructurasDatos -> lista .)


state 32

    (24) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 24 (estructurasDatos -> lsimplem .)
    LINEBREAK       reduce using rule 24 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 24 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 24 (estructurasDatos -> lsimplem .)


state 33

    (25) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 25 (estructurasDatos -> lcomp .)
    LINEBREAK       reduce using rule 25 (estructurasDatos -> lcomp .)
    $end            reduce using rule 25 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 25 (estructurasDatos -> lcomp .)


state 34

    (75) term -> factor .

    PLUS            reduce using rule 75 (term -> factor .)
    MINUS           reduce using rule 75 (term -> factor .)
    TIMES           reduce using rule 75 (term -> factor .)
    DIVIDE          reduce using rule 75 (term -> factor .)
    MOD             reduce using rule 75 (term -> factor .)
    INCREMENTONE    reduce using rule 75 (term -> factor .)
    DECREMENTONE    reduce using rule 75 (term -> factor .)
    SEMICOLON       reduce using rule 75 (term -> factor .)
    LINEBREAK       reduce using rule 75 (term -> factor .)
    $end            reduce using rule 75 (term -> factor .)
    RPAREN          reduce using rule 75 (term -> factor .)
    RCURL           reduce using rule 75 (term -> factor .)


state 35

    (49) keywordVariables -> VAR .

    ID              reduce using rule 49 (keywordVariables -> VAR .)


state 36

    (50) keywordVariables -> VAL .

    ID              reduce using rule 50 (keywordVariables -> VAL .)


state 37

    (42) for -> FOR . LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> FOR . LPAREN error RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 91


state 38

    (91) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL else

    LPAREN          shift and go to state 92


state 39

    (156) while -> WHILE . LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> WHILE . LPAREN error RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 93


state 40

    (101) condicionR -> INT . opR INT
    (102) condicionR -> INT . opR FLOAT
    (103) condicionR -> INT . opR LONG
    (104) condicionR -> INT . opR ID
    (77) factor -> INT .
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    PLUS            reduce using rule 77 (factor -> INT .)
    MINUS           reduce using rule 77 (factor -> INT .)
    TIMES           reduce using rule 77 (factor -> INT .)
    DIVIDE          reduce using rule 77 (factor -> INT .)
    MOD             reduce using rule 77 (factor -> INT .)
    INCREMENTONE    reduce using rule 77 (factor -> INT .)
    DECREMENTONE    reduce using rule 77 (factor -> INT .)
    SEMICOLON       reduce using rule 77 (factor -> INT .)
    LINEBREAK       reduce using rule 77 (factor -> INT .)
    $end            reduce using rule 77 (factor -> INT .)
    RCURL           reduce using rule 77 (factor -> INT .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 94

state 41

    (97) condicionL -> BOOLEAN . opL BOOLEAN
    (100) condicionL -> BOOLEAN . opL ID
    (81) factor -> BOOLEAN .
    (125) opL -> . CONJ
    (126) opL -> . DISJ

    PLUS            reduce using rule 81 (factor -> BOOLEAN .)
    MINUS           reduce using rule 81 (factor -> BOOLEAN .)
    TIMES           reduce using rule 81 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 81 (factor -> BOOLEAN .)
    MOD             reduce using rule 81 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 81 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 81 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 81 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 81 (factor -> BOOLEAN .)
    $end            reduce using rule 81 (factor -> BOOLEAN .)
    RCURL           reduce using rule 81 (factor -> BOOLEAN .)
    CONJ            shift and go to state 80
    DISJ            shift and go to state 81

    opL                            shift and go to state 95

state 42

    (105) condicionR -> FLOAT . opR FLOAT
    (106) condicionR -> FLOAT . opR INT
    (107) condicionR -> FLOAT . opR LONG
    (108) condicionR -> FLOAT . opR ID
    (78) factor -> FLOAT .
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    PLUS            reduce using rule 78 (factor -> FLOAT .)
    MINUS           reduce using rule 78 (factor -> FLOAT .)
    TIMES           reduce using rule 78 (factor -> FLOAT .)
    DIVIDE          reduce using rule 78 (factor -> FLOAT .)
    MOD             reduce using rule 78 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 78 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 78 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 78 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 78 (factor -> FLOAT .)
    $end            reduce using rule 78 (factor -> FLOAT .)
    RCURL           reduce using rule 78 (factor -> FLOAT .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 96

state 43

    (109) condicionR -> LONG . opR LONG
    (110) condicionR -> LONG . opR INT
    (111) condicionR -> LONG . opR FLOAT
    (112) condicionR -> LONG . opR ID
    (79) factor -> LONG .
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    PLUS            reduce using rule 79 (factor -> LONG .)
    MINUS           reduce using rule 79 (factor -> LONG .)
    TIMES           reduce using rule 79 (factor -> LONG .)
    DIVIDE          reduce using rule 79 (factor -> LONG .)
    MOD             reduce using rule 79 (factor -> LONG .)
    INCREMENTONE    reduce using rule 79 (factor -> LONG .)
    DECREMENTONE    reduce using rule 79 (factor -> LONG .)
    SEMICOLON       reduce using rule 79 (factor -> LONG .)
    LINEBREAK       reduce using rule 79 (factor -> LONG .)
    $end            reduce using rule 79 (factor -> LONG .)
    RCURL           reduce using rule 79 (factor -> LONG .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 97

state 44

    (113) condicionR -> STRING_1 . opR STRING_1
    (114) condicionR -> STRING_1 . opR ID
    (83) factor -> STRING_1 .
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    PLUS            reduce using rule 83 (factor -> STRING_1 .)
    MINUS           reduce using rule 83 (factor -> STRING_1 .)
    TIMES           reduce using rule 83 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 83 (factor -> STRING_1 .)
    MOD             reduce using rule 83 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 83 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 83 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 83 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 83 (factor -> STRING_1 .)
    $end            reduce using rule 83 (factor -> STRING_1 .)
    RCURL           reduce using rule 83 (factor -> STRING_1 .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 98

state 45

    (115) condicionR -> CHAR . opR CHAR
    (116) condicionR -> CHAR . opR ID
    (80) factor -> CHAR .
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    PLUS            reduce using rule 80 (factor -> CHAR .)
    MINUS           reduce using rule 80 (factor -> CHAR .)
    TIMES           reduce using rule 80 (factor -> CHAR .)
    DIVIDE          reduce using rule 80 (factor -> CHAR .)
    MOD             reduce using rule 80 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 80 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 80 (factor -> CHAR .)
    SEMICOLON       reduce using rule 80 (factor -> CHAR .)
    LINEBREAK       reduce using rule 80 (factor -> CHAR .)
    $end            reduce using rule 80 (factor -> CHAR .)
    RCURL           reduce using rule 80 (factor -> CHAR .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 99

state 46

    (123) condicionN -> EXCL_WS . BOOLEAN
    (124) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 100
    ID              shift and go to state 101


state 47

    (138) instance_linkedlist -> LINKEDL . LPAREN RPAREN

    LPAREN          shift and go to state 102


state 48

    (29) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 29 (queue_operations -> queue_add .)
    LINEBREAK       reduce using rule 29 (queue_operations -> queue_add .)
    $end            reduce using rule 29 (queue_operations -> queue_add .)
    RCURL           reduce using rule 29 (queue_operations -> queue_add .)


state 49

    (30) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 30 (queue_operations -> queue_peek .)
    LINEBREAK       reduce using rule 30 (queue_operations -> queue_peek .)
    $end            reduce using rule 30 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 30 (queue_operations -> queue_peek .)


state 50

    (31) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 31 (queue_operations -> queue_remove .)
    LINEBREAK       reduce using rule 31 (queue_operations -> queue_remove .)
    $end            reduce using rule 31 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 31 (queue_operations -> queue_remove .)


state 51

    (32) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 32 (queue_operations -> queue_poll .)
    LINEBREAK       reduce using rule 32 (queue_operations -> queue_poll .)
    $end            reduce using rule 32 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 32 (queue_operations -> queue_poll .)


state 52

    (137) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 103


state 53

    (2) line -> blocks SEMICOLON .
    (6) line -> blocks SEMICOLON . LINEBREAK
    (7) line -> blocks SEMICOLON . LINEBREAK line
    (8) line -> blocks SEMICOLON . LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 2 (line -> blocks SEMICOLON .)
    RCURL           reduce using rule 2 (line -> blocks SEMICOLON .)
    LINEBREAK       shift and go to state 104

  ! LINEBREAK       [ reduce using rule 2 (line -> blocks SEMICOLON .) ]


state 54

    (3) line -> blocks LINEBREAK .
    (4) line -> blocks LINEBREAK . line
    (5) line -> blocks LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 3 (line -> blocks LINEBREAK .)
    RCURL           reduce using rule 3 (line -> blocks LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 3 (line -> blocks LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 105
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 55

    (67) expression -> expression PLUS . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 106
    factor                         shift and go to state 34

state 56

    (68) expression -> expression MINUS . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 107
    factor                         shift and go to state 34

state 57

    (69) expression -> expression TIMES . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 108
    factor                         shift and go to state 34

state 58

    (70) expression -> expression DIVIDE . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 109
    factor                         shift and go to state 34

state 59

    (71) expression -> expression MOD . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 110
    factor                         shift and go to state 34

state 60

    (72) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 72 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 72 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 72 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 72 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 72 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 72 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 72 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 72 (expression -> expression INCREMENTONE .)
    LINEBREAK       reduce using rule 72 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 72 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 72 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 72 (expression -> expression INCREMENTONE .)


state 61

    (73) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 73 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 73 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 73 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 73 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 73 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 73 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 73 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 73 (expression -> expression DECREMENTONE .)
    LINEBREAK       reduce using rule 73 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 73 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 73 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 73 (expression -> expression DECREMENTONE .)


state 62

    (37) impresion -> PRINT LPAREN . expression RPAREN
    (39) funcion -> PRINT LPAREN . error RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    error           shift and go to state 112
    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 111
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 63

    (76) term -> LPAREN expression . RPAREN
    (67) expression -> expression . PLUS term
    (68) expression -> expression . MINUS term
    (69) expression -> expression . TIMES term
    (70) expression -> expression . DIVIDE term
    (71) expression -> expression . MOD term
    (72) expression -> expression . INCREMENTONE
    (73) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 64

    (77) factor -> INT .

    RPAREN          reduce using rule 77 (factor -> INT .)
    PLUS            reduce using rule 77 (factor -> INT .)
    MINUS           reduce using rule 77 (factor -> INT .)
    TIMES           reduce using rule 77 (factor -> INT .)
    DIVIDE          reduce using rule 77 (factor -> INT .)
    MOD             reduce using rule 77 (factor -> INT .)
    INCREMENTONE    reduce using rule 77 (factor -> INT .)
    DECREMENTONE    reduce using rule 77 (factor -> INT .)
    SEMICOLON       reduce using rule 77 (factor -> INT .)
    LINEBREAK       reduce using rule 77 (factor -> INT .)
    $end            reduce using rule 77 (factor -> INT .)
    RCURL           reduce using rule 77 (factor -> INT .)


state 65

    (78) factor -> FLOAT .

    RPAREN          reduce using rule 78 (factor -> FLOAT .)
    PLUS            reduce using rule 78 (factor -> FLOAT .)
    MINUS           reduce using rule 78 (factor -> FLOAT .)
    TIMES           reduce using rule 78 (factor -> FLOAT .)
    DIVIDE          reduce using rule 78 (factor -> FLOAT .)
    MOD             reduce using rule 78 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 78 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 78 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 78 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 78 (factor -> FLOAT .)
    $end            reduce using rule 78 (factor -> FLOAT .)
    RCURL           reduce using rule 78 (factor -> FLOAT .)


state 66

    (79) factor -> LONG .

    RPAREN          reduce using rule 79 (factor -> LONG .)
    PLUS            reduce using rule 79 (factor -> LONG .)
    MINUS           reduce using rule 79 (factor -> LONG .)
    TIMES           reduce using rule 79 (factor -> LONG .)
    DIVIDE          reduce using rule 79 (factor -> LONG .)
    MOD             reduce using rule 79 (factor -> LONG .)
    INCREMENTONE    reduce using rule 79 (factor -> LONG .)
    DECREMENTONE    reduce using rule 79 (factor -> LONG .)
    SEMICOLON       reduce using rule 79 (factor -> LONG .)
    LINEBREAK       reduce using rule 79 (factor -> LONG .)
    $end            reduce using rule 79 (factor -> LONG .)
    RCURL           reduce using rule 79 (factor -> LONG .)


state 67

    (80) factor -> CHAR .

    RPAREN          reduce using rule 80 (factor -> CHAR .)
    PLUS            reduce using rule 80 (factor -> CHAR .)
    MINUS           reduce using rule 80 (factor -> CHAR .)
    TIMES           reduce using rule 80 (factor -> CHAR .)
    DIVIDE          reduce using rule 80 (factor -> CHAR .)
    MOD             reduce using rule 80 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 80 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 80 (factor -> CHAR .)
    SEMICOLON       reduce using rule 80 (factor -> CHAR .)
    LINEBREAK       reduce using rule 80 (factor -> CHAR .)
    $end            reduce using rule 80 (factor -> CHAR .)
    RCURL           reduce using rule 80 (factor -> CHAR .)


state 68

    (81) factor -> BOOLEAN .

    RPAREN          reduce using rule 81 (factor -> BOOLEAN .)
    PLUS            reduce using rule 81 (factor -> BOOLEAN .)
    MINUS           reduce using rule 81 (factor -> BOOLEAN .)
    TIMES           reduce using rule 81 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 81 (factor -> BOOLEAN .)
    MOD             reduce using rule 81 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 81 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 81 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 81 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 81 (factor -> BOOLEAN .)
    $end            reduce using rule 81 (factor -> BOOLEAN .)
    RCURL           reduce using rule 81 (factor -> BOOLEAN .)


state 69

    (82) factor -> ID .

    RPAREN          reduce using rule 82 (factor -> ID .)
    PLUS            reduce using rule 82 (factor -> ID .)
    MINUS           reduce using rule 82 (factor -> ID .)
    TIMES           reduce using rule 82 (factor -> ID .)
    DIVIDE          reduce using rule 82 (factor -> ID .)
    MOD             reduce using rule 82 (factor -> ID .)
    INCREMENTONE    reduce using rule 82 (factor -> ID .)
    DECREMENTONE    reduce using rule 82 (factor -> ID .)
    SEMICOLON       reduce using rule 82 (factor -> ID .)
    LINEBREAK       reduce using rule 82 (factor -> ID .)
    $end            reduce using rule 82 (factor -> ID .)
    RCURL           reduce using rule 82 (factor -> ID .)


state 70

    (83) factor -> STRING_1 .

    RPAREN          reduce using rule 83 (factor -> STRING_1 .)
    PLUS            reduce using rule 83 (factor -> STRING_1 .)
    MINUS           reduce using rule 83 (factor -> STRING_1 .)
    TIMES           reduce using rule 83 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 83 (factor -> STRING_1 .)
    MOD             reduce using rule 83 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 83 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 83 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 83 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 83 (factor -> STRING_1 .)
    $end            reduce using rule 83 (factor -> STRING_1 .)
    RCURL           reduce using rule 83 (factor -> STRING_1 .)


state 71

    (38) impresion -> PRINTLN LPAREN . expression RPAREN
    (40) funcion -> PRINTLN LPAREN . error RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    error           shift and go to state 115
    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 114
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 72

    (47) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)
    LINEBREAK       reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)


state 73

    (41) queue -> keywordVariables ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (136) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (51) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (52) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 116
    EQUAL           shift and go to state 76


state 74

    (84) funcion -> FUN ID . LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> FUN ID . LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> FUN ID . LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> FUN ID . LPAREN RPAREN LCURL RCURL

    LPAREN          shift and go to state 117


state 75

    (51) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (53) tipoDatoEspecifico -> . TINT EQUAL INT
    (54) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (55) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (56) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (57) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (58) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    TINT            shift and go to state 119
    TLONG           shift and go to state 120
    TFLOAT          shift and go to state 121
    TBOOLEAN        shift and go to state 122
    TCHAR           shift and go to state 123
    TSTRING         shift and go to state 124

    tipoDatoEspecifico             shift and go to state 118

state 76

    (52) asignacionSimple -> ID EQUAL . valor
    (66) valor -> . expression
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    valor                          shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 77

    (98) condicionL -> ID opL . ID
    (99) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 127
    BOOLEAN         shift and go to state 128


state 78

    (117) condicionR -> ID opR . ID
    (118) condicionR -> ID opR . INT
    (119) condicionR -> ID opR . FLOAT
    (120) condicionR -> ID opR . LONG
    (121) condicionR -> ID opR . STRING_1
    (122) condicionR -> ID opR . CHAR

    ID              shift and go to state 129
    INT             shift and go to state 130
    FLOAT           shift and go to state 131
    LONG            shift and go to state 132
    STRING_1        shift and go to state 133
    CHAR            shift and go to state 134


state 79

    (139) stack_actuar -> ID DOT . stack_funciones
    (159) lsimplem -> ID DOT . Lmetod
    (160) lcomp -> ID DOT . Cmetod
    (33) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (34) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (36) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (35) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (140) stack_funciones -> . stack_isEmpty
    (141) stack_funciones -> . stack_push
    (142) stack_funciones -> . stack_pop
    (143) stack_funciones -> . stack_peek
    (144) stack_funciones -> . stack_size
    (150) Lmetod -> . FIRST LPAREN RPAREN
    (151) Lmetod -> . LAST LPAREN RPAREN
    (152) Lmetod -> . REMOVEL LPAREN RPAREN
    (153) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (154) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (155) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (145) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (147) stack_push -> . PUSH LPAREN factor RPAREN
    (146) stack_pop -> . POP LPAREN RPAREN
    (148) stack_peek -> . PEEK LPAREN RPAREN
    (149) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 138
    PEEK            shift and go to state 139
    REMOVE          shift and go to state 140
    POLL            shift and go to state 141
    FIRST           shift and go to state 147
    LAST            shift and go to state 148
    REMOVEL         shift and go to state 149
    APPEND          shift and go to state 150
    REMOVEN         shift and go to state 151
    REMOVEI         shift and go to state 152
    ISEMPTY         shift and go to state 153
    PUSH            shift and go to state 154
    POP             shift and go to state 155
    SIZE            shift and go to state 156

    stack_funciones                shift and go to state 135
    Lmetod                         shift and go to state 136
    Cmetod                         shift and go to state 137
    stack_isEmpty                  shift and go to state 142
    stack_push                     shift and go to state 143
    stack_pop                      shift and go to state 144
    stack_peek                     shift and go to state 145
    stack_size                     shift and go to state 146

state 80

    (125) opL -> CONJ .

    ID              reduce using rule 125 (opL -> CONJ .)
    BOOLEAN         reduce using rule 125 (opL -> CONJ .)


state 81

    (126) opL -> DISJ .

    ID              reduce using rule 126 (opL -> DISJ .)
    BOOLEAN         reduce using rule 126 (opL -> DISJ .)


state 82

    (127) opR -> LANGLE .

    ID              reduce using rule 127 (opR -> LANGLE .)
    INT             reduce using rule 127 (opR -> LANGLE .)
    FLOAT           reduce using rule 127 (opR -> LANGLE .)
    LONG            reduce using rule 127 (opR -> LANGLE .)
    STRING_1        reduce using rule 127 (opR -> LANGLE .)
    CHAR            reduce using rule 127 (opR -> LANGLE .)


state 83

    (128) opR -> RANGLE .

    ID              reduce using rule 128 (opR -> RANGLE .)
    INT             reduce using rule 128 (opR -> RANGLE .)
    FLOAT           reduce using rule 128 (opR -> RANGLE .)
    LONG            reduce using rule 128 (opR -> RANGLE .)
    STRING_1        reduce using rule 128 (opR -> RANGLE .)
    CHAR            reduce using rule 128 (opR -> RANGLE .)


state 84

    (129) opR -> LE .

    ID              reduce using rule 129 (opR -> LE .)
    INT             reduce using rule 129 (opR -> LE .)
    FLOAT           reduce using rule 129 (opR -> LE .)
    LONG            reduce using rule 129 (opR -> LE .)
    STRING_1        reduce using rule 129 (opR -> LE .)
    CHAR            reduce using rule 129 (opR -> LE .)


state 85

    (130) opR -> GE .

    ID              reduce using rule 130 (opR -> GE .)
    INT             reduce using rule 130 (opR -> GE .)
    FLOAT           reduce using rule 130 (opR -> GE .)
    LONG            reduce using rule 130 (opR -> GE .)
    STRING_1        reduce using rule 130 (opR -> GE .)
    CHAR            reduce using rule 130 (opR -> GE .)


state 86

    (131) opR -> EXCL_EQ .

    ID              reduce using rule 131 (opR -> EXCL_EQ .)
    INT             reduce using rule 131 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 131 (opR -> EXCL_EQ .)
    LONG            reduce using rule 131 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 131 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 131 (opR -> EXCL_EQ .)


state 87

    (132) opR -> EXCL_EQEQ .

    ID              reduce using rule 132 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 132 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 132 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 132 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 132 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 132 (opR -> EXCL_EQEQ .)


state 88

    (133) opR -> AS_SAFE .

    ID              reduce using rule 133 (opR -> AS_SAFE .)
    INT             reduce using rule 133 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 133 (opR -> AS_SAFE .)
    LONG            reduce using rule 133 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 133 (opR -> AS_SAFE .)
    CHAR            reduce using rule 133 (opR -> AS_SAFE .)


state 89

    (134) opR -> EQEQ .

    ID              reduce using rule 134 (opR -> EQEQ .)
    INT             reduce using rule 134 (opR -> EQEQ .)
    FLOAT           reduce using rule 134 (opR -> EQEQ .)
    LONG            reduce using rule 134 (opR -> EQEQ .)
    STRING_1        reduce using rule 134 (opR -> EQEQ .)
    CHAR            reduce using rule 134 (opR -> EQEQ .)


state 90

    (135) opR -> EQEQEQ .

    ID              reduce using rule 135 (opR -> EQEQEQ .)
    INT             reduce using rule 135 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 135 (opR -> EQEQEQ .)
    LONG            reduce using rule 135 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 135 (opR -> EQEQEQ .)
    CHAR            reduce using rule 135 (opR -> EQEQEQ .)


state 91

    (42) for -> FOR LPAREN . ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> FOR LPAREN . error RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 157
    error           shift and go to state 158


state 92

    (91) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL else
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 160
    ID              shift and go to state 161
    INT             shift and go to state 162
    FLOAT           shift and go to state 163
    LONG            shift and go to state 164
    STRING_1        shift and go to state 165
    CHAR            shift and go to state 166
    EXCL_WS         shift and go to state 46

    condicion                      shift and go to state 159
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22

state 93

    (156) while -> WHILE LPAREN . ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> WHILE LPAREN . error RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 167
    error           shift and go to state 168


state 94

    (101) condicionR -> INT opR . INT
    (102) condicionR -> INT opR . FLOAT
    (103) condicionR -> INT opR . LONG
    (104) condicionR -> INT opR . ID

    INT             shift and go to state 169
    FLOAT           shift and go to state 170
    LONG            shift and go to state 171
    ID              shift and go to state 172


state 95

    (97) condicionL -> BOOLEAN opL . BOOLEAN
    (100) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 173
    ID              shift and go to state 174


state 96

    (105) condicionR -> FLOAT opR . FLOAT
    (106) condicionR -> FLOAT opR . INT
    (107) condicionR -> FLOAT opR . LONG
    (108) condicionR -> FLOAT opR . ID

    FLOAT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    ID              shift and go to state 178


state 97

    (109) condicionR -> LONG opR . LONG
    (110) condicionR -> LONG opR . INT
    (111) condicionR -> LONG opR . FLOAT
    (112) condicionR -> LONG opR . ID

    LONG            shift and go to state 179
    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    ID              shift and go to state 182


state 98

    (113) condicionR -> STRING_1 opR . STRING_1
    (114) condicionR -> STRING_1 opR . ID

    STRING_1        shift and go to state 183
    ID              shift and go to state 184


state 99

    (115) condicionR -> CHAR opR . CHAR
    (116) condicionR -> CHAR opR . ID

    CHAR            shift and go to state 185
    ID              shift and go to state 186


state 100

    (123) condicionN -> EXCL_WS BOOLEAN .

    SEMICOLON       reduce using rule 123 (condicionN -> EXCL_WS BOOLEAN .)
    LINEBREAK       reduce using rule 123 (condicionN -> EXCL_WS BOOLEAN .)
    $end            reduce using rule 123 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 123 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 123 (condicionN -> EXCL_WS BOOLEAN .)


state 101

    (124) condicionN -> EXCL_WS ID .

    SEMICOLON       reduce using rule 124 (condicionN -> EXCL_WS ID .)
    LINEBREAK       reduce using rule 124 (condicionN -> EXCL_WS ID .)
    $end            reduce using rule 124 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 124 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 124 (condicionN -> EXCL_WS ID .)


state 102

    (138) instance_linkedlist -> LINKEDL LPAREN . RPAREN

    RPAREN          shift and go to state 187


state 103

    (137) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (59) tipoDato -> . TINT
    (60) tipoDato -> . TLONG
    (61) tipoDato -> . TFLOAT
    (62) tipoDato -> . TDOUBLE
    (63) tipoDato -> . TBOOLEAN
    (64) tipoDato -> . TCHAR
    (65) tipoDato -> . TSTRING

    TINT            shift and go to state 189
    TLONG           shift and go to state 190
    TFLOAT          shift and go to state 191
    TDOUBLE         shift and go to state 192
    TBOOLEAN        shift and go to state 193
    TCHAR           shift and go to state 194
    TSTRING         shift and go to state 195

    tipoDato                       shift and go to state 188

state 104

    (6) line -> blocks SEMICOLON LINEBREAK .
    (7) line -> blocks SEMICOLON LINEBREAK . line
    (8) line -> blocks SEMICOLON LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    RCURL           reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 196
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 105

    (4) line -> blocks LINEBREAK line .
    (5) line -> blocks LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 4 (line -> blocks LINEBREAK line .)
    RCURL           reduce using rule 4 (line -> blocks LINEBREAK line .)
    LINEBREAK       shift and go to state 197

  ! LINEBREAK       [ reduce using rule 4 (line -> blocks LINEBREAK line .) ]


state 106

    (67) expression -> expression PLUS term .

    PLUS            reduce using rule 67 (expression -> expression PLUS term .)
    MINUS           reduce using rule 67 (expression -> expression PLUS term .)
    TIMES           reduce using rule 67 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 67 (expression -> expression PLUS term .)
    MOD             reduce using rule 67 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 67 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 67 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 67 (expression -> expression PLUS term .)
    LINEBREAK       reduce using rule 67 (expression -> expression PLUS term .)
    $end            reduce using rule 67 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 67 (expression -> expression PLUS term .)
    RCURL           reduce using rule 67 (expression -> expression PLUS term .)


state 107

    (68) expression -> expression MINUS term .

    PLUS            reduce using rule 68 (expression -> expression MINUS term .)
    MINUS           reduce using rule 68 (expression -> expression MINUS term .)
    TIMES           reduce using rule 68 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 68 (expression -> expression MINUS term .)
    MOD             reduce using rule 68 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 68 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 68 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 68 (expression -> expression MINUS term .)
    LINEBREAK       reduce using rule 68 (expression -> expression MINUS term .)
    $end            reduce using rule 68 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 68 (expression -> expression MINUS term .)
    RCURL           reduce using rule 68 (expression -> expression MINUS term .)


state 108

    (69) expression -> expression TIMES term .

    PLUS            reduce using rule 69 (expression -> expression TIMES term .)
    MINUS           reduce using rule 69 (expression -> expression TIMES term .)
    TIMES           reduce using rule 69 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 69 (expression -> expression TIMES term .)
    MOD             reduce using rule 69 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 69 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 69 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 69 (expression -> expression TIMES term .)
    LINEBREAK       reduce using rule 69 (expression -> expression TIMES term .)
    $end            reduce using rule 69 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 69 (expression -> expression TIMES term .)
    RCURL           reduce using rule 69 (expression -> expression TIMES term .)


state 109

    (70) expression -> expression DIVIDE term .

    PLUS            reduce using rule 70 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 70 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 70 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 70 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 70 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 70 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 70 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 70 (expression -> expression DIVIDE term .)
    LINEBREAK       reduce using rule 70 (expression -> expression DIVIDE term .)
    $end            reduce using rule 70 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 70 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 70 (expression -> expression DIVIDE term .)


state 110

    (71) expression -> expression MOD term .

    PLUS            reduce using rule 71 (expression -> expression MOD term .)
    MINUS           reduce using rule 71 (expression -> expression MOD term .)
    TIMES           reduce using rule 71 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 71 (expression -> expression MOD term .)
    MOD             reduce using rule 71 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 71 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 71 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 71 (expression -> expression MOD term .)
    LINEBREAK       reduce using rule 71 (expression -> expression MOD term .)
    $end            reduce using rule 71 (expression -> expression MOD term .)
    RPAREN          reduce using rule 71 (expression -> expression MOD term .)
    RCURL           reduce using rule 71 (expression -> expression MOD term .)


state 111

    (37) impresion -> PRINT LPAREN expression . RPAREN
    (67) expression -> expression . PLUS term
    (68) expression -> expression . MINUS term
    (69) expression -> expression . TIMES term
    (70) expression -> expression . DIVIDE term
    (71) expression -> expression . MOD term
    (72) expression -> expression . INCREMENTONE
    (73) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 198
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 112

    (39) funcion -> PRINT LPAREN error . RPAREN

    RPAREN          shift and go to state 199


state 113

    (76) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 76 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 76 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 76 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 76 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 76 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 76 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 76 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 76 (term -> LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 76 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 76 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 76 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 76 (term -> LPAREN expression RPAREN .)


state 114

    (38) impresion -> PRINTLN LPAREN expression . RPAREN
    (67) expression -> expression . PLUS term
    (68) expression -> expression . MINUS term
    (69) expression -> expression . TIMES term
    (70) expression -> expression . DIVIDE term
    (71) expression -> expression . MOD term
    (72) expression -> expression . INCREMENTONE
    (73) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 200
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 115

    (40) funcion -> PRINTLN LPAREN error . RPAREN

    RPAREN          shift and go to state 201


state 116

    (41) queue -> keywordVariables ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (136) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (158) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (51) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (53) tipoDatoEspecifico -> . TINT EQUAL INT
    (54) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (55) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (56) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (57) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (58) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    QUEUE           shift and go to state 202
    LINKEDL         shift and go to state 203
    STACK           shift and go to state 52
    TINT            shift and go to state 119
    TLONG           shift and go to state 120
    TFLOAT          shift and go to state 121
    TBOOLEAN        shift and go to state 122
    TCHAR           shift and go to state 123
    TSTRING         shift and go to state 124

    def_estruct_tipoDato           shift and go to state 204
    tipoDatoEspecifico             shift and go to state 118

state 117

    (84) funcion -> FUN ID LPAREN . RPAREN LCURL lineorBreak RCURL
    (85) funcion -> FUN ID LPAREN . ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> FUN ID LPAREN . ID RPAREN LCURL RCURL
    (87) funcion -> FUN ID LPAREN . RPAREN LCURL RCURL

    RPAREN          shift and go to state 206
    ID              shift and go to state 205


state 118

    (51) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    SEMICOLON       reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LINEBREAK       reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 119

    (53) tipoDatoEspecifico -> TINT . EQUAL INT

    EQUAL           shift and go to state 207


state 120

    (54) tipoDatoEspecifico -> TLONG . EQUAL LONG

    EQUAL           shift and go to state 208


state 121

    (55) tipoDatoEspecifico -> TFLOAT . EQUAL FLOAT

    EQUAL           shift and go to state 209


state 122

    (56) tipoDatoEspecifico -> TBOOLEAN . EQUAL BOOLEAN

    EQUAL           shift and go to state 210


state 123

    (57) tipoDatoEspecifico -> TCHAR . EQUAL CHAR

    EQUAL           shift and go to state 211


state 124

    (58) tipoDatoEspecifico -> TSTRING . EQUAL STRING_1

    EQUAL           shift and go to state 212


state 125

    (52) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)
    LINEBREAK       reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)


state 126

    (66) valor -> expression .
    (67) expression -> expression . PLUS term
    (68) expression -> expression . MINUS term
    (69) expression -> expression . TIMES term
    (70) expression -> expression . DIVIDE term
    (71) expression -> expression . MOD term
    (72) expression -> expression . INCREMENTONE
    (73) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 66 (valor -> expression .)
    LINEBREAK       reduce using rule 66 (valor -> expression .)
    $end            reduce using rule 66 (valor -> expression .)
    RCURL           reduce using rule 66 (valor -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 127

    (98) condicionL -> ID opL ID .

    SEMICOLON       reduce using rule 98 (condicionL -> ID opL ID .)
    LINEBREAK       reduce using rule 98 (condicionL -> ID opL ID .)
    $end            reduce using rule 98 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 98 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 98 (condicionL -> ID opL ID .)


state 128

    (99) condicionL -> ID opL BOOLEAN .

    SEMICOLON       reduce using rule 99 (condicionL -> ID opL BOOLEAN .)
    LINEBREAK       reduce using rule 99 (condicionL -> ID opL BOOLEAN .)
    $end            reduce using rule 99 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 99 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 99 (condicionL -> ID opL BOOLEAN .)


state 129

    (117) condicionR -> ID opR ID .

    SEMICOLON       reduce using rule 117 (condicionR -> ID opR ID .)
    LINEBREAK       reduce using rule 117 (condicionR -> ID opR ID .)
    $end            reduce using rule 117 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 117 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 117 (condicionR -> ID opR ID .)


state 130

    (118) condicionR -> ID opR INT .

    SEMICOLON       reduce using rule 118 (condicionR -> ID opR INT .)
    LINEBREAK       reduce using rule 118 (condicionR -> ID opR INT .)
    $end            reduce using rule 118 (condicionR -> ID opR INT .)
    RCURL           reduce using rule 118 (condicionR -> ID opR INT .)
    RPAREN          reduce using rule 118 (condicionR -> ID opR INT .)


state 131

    (119) condicionR -> ID opR FLOAT .

    SEMICOLON       reduce using rule 119 (condicionR -> ID opR FLOAT .)
    LINEBREAK       reduce using rule 119 (condicionR -> ID opR FLOAT .)
    $end            reduce using rule 119 (condicionR -> ID opR FLOAT .)
    RCURL           reduce using rule 119 (condicionR -> ID opR FLOAT .)
    RPAREN          reduce using rule 119 (condicionR -> ID opR FLOAT .)


state 132

    (120) condicionR -> ID opR LONG .

    SEMICOLON       reduce using rule 120 (condicionR -> ID opR LONG .)
    LINEBREAK       reduce using rule 120 (condicionR -> ID opR LONG .)
    $end            reduce using rule 120 (condicionR -> ID opR LONG .)
    RCURL           reduce using rule 120 (condicionR -> ID opR LONG .)
    RPAREN          reduce using rule 120 (condicionR -> ID opR LONG .)


state 133

    (121) condicionR -> ID opR STRING_1 .

    SEMICOLON       reduce using rule 121 (condicionR -> ID opR STRING_1 .)
    LINEBREAK       reduce using rule 121 (condicionR -> ID opR STRING_1 .)
    $end            reduce using rule 121 (condicionR -> ID opR STRING_1 .)
    RCURL           reduce using rule 121 (condicionR -> ID opR STRING_1 .)
    RPAREN          reduce using rule 121 (condicionR -> ID opR STRING_1 .)


state 134

    (122) condicionR -> ID opR CHAR .

    SEMICOLON       reduce using rule 122 (condicionR -> ID opR CHAR .)
    LINEBREAK       reduce using rule 122 (condicionR -> ID opR CHAR .)
    $end            reduce using rule 122 (condicionR -> ID opR CHAR .)
    RCURL           reduce using rule 122 (condicionR -> ID opR CHAR .)
    RPAREN          reduce using rule 122 (condicionR -> ID opR CHAR .)


state 135

    (139) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 139 (stack_actuar -> ID DOT stack_funciones .)
    LINEBREAK       reduce using rule 139 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 139 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 139 (stack_actuar -> ID DOT stack_funciones .)


state 136

    (159) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 159 (lsimplem -> ID DOT Lmetod .)
    LINEBREAK       reduce using rule 159 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 159 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 159 (lsimplem -> ID DOT Lmetod .)


state 137

    (160) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 160 (lcomp -> ID DOT Cmetod .)
    LINEBREAK       reduce using rule 160 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 160 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 160 (lcomp -> ID DOT Cmetod .)


state 138

    (33) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 213


state 139

    (34) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (148) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 214


state 140

    (36) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 215


state 141

    (35) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 216


state 142

    (140) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 140 (stack_funciones -> stack_isEmpty .)
    LINEBREAK       reduce using rule 140 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 140 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 140 (stack_funciones -> stack_isEmpty .)


state 143

    (141) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 141 (stack_funciones -> stack_push .)
    LINEBREAK       reduce using rule 141 (stack_funciones -> stack_push .)
    $end            reduce using rule 141 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 141 (stack_funciones -> stack_push .)


state 144

    (142) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 142 (stack_funciones -> stack_pop .)
    LINEBREAK       reduce using rule 142 (stack_funciones -> stack_pop .)
    $end            reduce using rule 142 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 142 (stack_funciones -> stack_pop .)


state 145

    (143) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 143 (stack_funciones -> stack_peek .)
    LINEBREAK       reduce using rule 143 (stack_funciones -> stack_peek .)
    $end            reduce using rule 143 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 143 (stack_funciones -> stack_peek .)


state 146

    (144) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 144 (stack_funciones -> stack_size .)
    LINEBREAK       reduce using rule 144 (stack_funciones -> stack_size .)
    $end            reduce using rule 144 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 144 (stack_funciones -> stack_size .)


state 147

    (150) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 217


state 148

    (151) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 218


state 149

    (152) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 219


state 150

    (153) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 220


state 151

    (154) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 221


state 152

    (155) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 222


state 153

    (145) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 223


state 154

    (147) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 224


state 155

    (146) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 225


state 156

    (149) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 226


state 157

    (42) for -> FOR LPAREN ID . IN iterable RPAREN LCURL lineorBreak RCURL

    IN              shift and go to state 227


state 158

    (43) for -> FOR LPAREN error . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 228


state 159

    (91) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL
    (92) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL else

    RPAREN          shift and go to state 229


state 160

    (97) condicionL -> BOOLEAN . opL BOOLEAN
    (100) condicionL -> BOOLEAN . opL ID
    (125) opL -> . CONJ
    (126) opL -> . DISJ

    CONJ            shift and go to state 80
    DISJ            shift and go to state 81

    opL                            shift and go to state 95

state 161

    (98) condicionL -> ID . opL ID
    (99) condicionL -> ID . opL BOOLEAN
    (117) condicionR -> ID . opR ID
    (118) condicionR -> ID . opR INT
    (119) condicionR -> ID . opR FLOAT
    (120) condicionR -> ID . opR LONG
    (121) condicionR -> ID . opR STRING_1
    (122) condicionR -> ID . opR CHAR
    (125) opL -> . CONJ
    (126) opL -> . DISJ
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    CONJ            shift and go to state 80
    DISJ            shift and go to state 81
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opL                            shift and go to state 77
    opR                            shift and go to state 78

state 162

    (101) condicionR -> INT . opR INT
    (102) condicionR -> INT . opR FLOAT
    (103) condicionR -> INT . opR LONG
    (104) condicionR -> INT . opR ID
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 94

state 163

    (105) condicionR -> FLOAT . opR FLOAT
    (106) condicionR -> FLOAT . opR INT
    (107) condicionR -> FLOAT . opR LONG
    (108) condicionR -> FLOAT . opR ID
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 96

state 164

    (109) condicionR -> LONG . opR LONG
    (110) condicionR -> LONG . opR INT
    (111) condicionR -> LONG . opR FLOAT
    (112) condicionR -> LONG . opR ID
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 97

state 165

    (113) condicionR -> STRING_1 . opR STRING_1
    (114) condicionR -> STRING_1 . opR ID
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 98

state 166

    (115) condicionR -> CHAR . opR CHAR
    (116) condicionR -> CHAR . opR ID
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 99

state 167

    (156) while -> WHILE LPAREN ID . opR INT RPAREN LCURL lineorBreak RCURL
    (127) opR -> . LANGLE
    (128) opR -> . RANGLE
    (129) opR -> . LE
    (130) opR -> . GE
    (131) opR -> . EXCL_EQ
    (132) opR -> . EXCL_EQEQ
    (133) opR -> . AS_SAFE
    (134) opR -> . EQEQ
    (135) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 230

state 168

    (157) while -> WHILE LPAREN error . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 231


state 169

    (101) condicionR -> INT opR INT .

    SEMICOLON       reduce using rule 101 (condicionR -> INT opR INT .)
    LINEBREAK       reduce using rule 101 (condicionR -> INT opR INT .)
    $end            reduce using rule 101 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 101 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 101 (condicionR -> INT opR INT .)


state 170

    (102) condicionR -> INT opR FLOAT .

    SEMICOLON       reduce using rule 102 (condicionR -> INT opR FLOAT .)
    LINEBREAK       reduce using rule 102 (condicionR -> INT opR FLOAT .)
    $end            reduce using rule 102 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 102 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 102 (condicionR -> INT opR FLOAT .)


state 171

    (103) condicionR -> INT opR LONG .

    SEMICOLON       reduce using rule 103 (condicionR -> INT opR LONG .)
    LINEBREAK       reduce using rule 103 (condicionR -> INT opR LONG .)
    $end            reduce using rule 103 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 103 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 103 (condicionR -> INT opR LONG .)


state 172

    (104) condicionR -> INT opR ID .

    SEMICOLON       reduce using rule 104 (condicionR -> INT opR ID .)
    LINEBREAK       reduce using rule 104 (condicionR -> INT opR ID .)
    $end            reduce using rule 104 (condicionR -> INT opR ID .)
    RCURL           reduce using rule 104 (condicionR -> INT opR ID .)
    RPAREN          reduce using rule 104 (condicionR -> INT opR ID .)


state 173

    (97) condicionL -> BOOLEAN opL BOOLEAN .

    SEMICOLON       reduce using rule 97 (condicionL -> BOOLEAN opL BOOLEAN .)
    LINEBREAK       reduce using rule 97 (condicionL -> BOOLEAN opL BOOLEAN .)
    $end            reduce using rule 97 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 97 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 97 (condicionL -> BOOLEAN opL BOOLEAN .)


state 174

    (100) condicionL -> BOOLEAN opL ID .

    SEMICOLON       reduce using rule 100 (condicionL -> BOOLEAN opL ID .)
    LINEBREAK       reduce using rule 100 (condicionL -> BOOLEAN opL ID .)
    $end            reduce using rule 100 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 100 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 100 (condicionL -> BOOLEAN opL ID .)


state 175

    (105) condicionR -> FLOAT opR FLOAT .

    SEMICOLON       reduce using rule 105 (condicionR -> FLOAT opR FLOAT .)
    LINEBREAK       reduce using rule 105 (condicionR -> FLOAT opR FLOAT .)
    $end            reduce using rule 105 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 105 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 105 (condicionR -> FLOAT opR FLOAT .)


state 176

    (106) condicionR -> FLOAT opR INT .

    SEMICOLON       reduce using rule 106 (condicionR -> FLOAT opR INT .)
    LINEBREAK       reduce using rule 106 (condicionR -> FLOAT opR INT .)
    $end            reduce using rule 106 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 106 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 106 (condicionR -> FLOAT opR INT .)


state 177

    (107) condicionR -> FLOAT opR LONG .

    SEMICOLON       reduce using rule 107 (condicionR -> FLOAT opR LONG .)
    LINEBREAK       reduce using rule 107 (condicionR -> FLOAT opR LONG .)
    $end            reduce using rule 107 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 107 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 107 (condicionR -> FLOAT opR LONG .)


state 178

    (108) condicionR -> FLOAT opR ID .

    SEMICOLON       reduce using rule 108 (condicionR -> FLOAT opR ID .)
    LINEBREAK       reduce using rule 108 (condicionR -> FLOAT opR ID .)
    $end            reduce using rule 108 (condicionR -> FLOAT opR ID .)
    RCURL           reduce using rule 108 (condicionR -> FLOAT opR ID .)
    RPAREN          reduce using rule 108 (condicionR -> FLOAT opR ID .)


state 179

    (109) condicionR -> LONG opR LONG .

    SEMICOLON       reduce using rule 109 (condicionR -> LONG opR LONG .)
    LINEBREAK       reduce using rule 109 (condicionR -> LONG opR LONG .)
    $end            reduce using rule 109 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 109 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 109 (condicionR -> LONG opR LONG .)


state 180

    (110) condicionR -> LONG opR INT .

    SEMICOLON       reduce using rule 110 (condicionR -> LONG opR INT .)
    LINEBREAK       reduce using rule 110 (condicionR -> LONG opR INT .)
    $end            reduce using rule 110 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 110 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 110 (condicionR -> LONG opR INT .)


state 181

    (111) condicionR -> LONG opR FLOAT .

    SEMICOLON       reduce using rule 111 (condicionR -> LONG opR FLOAT .)
    LINEBREAK       reduce using rule 111 (condicionR -> LONG opR FLOAT .)
    $end            reduce using rule 111 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 111 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 111 (condicionR -> LONG opR FLOAT .)


state 182

    (112) condicionR -> LONG opR ID .

    SEMICOLON       reduce using rule 112 (condicionR -> LONG opR ID .)
    LINEBREAK       reduce using rule 112 (condicionR -> LONG opR ID .)
    $end            reduce using rule 112 (condicionR -> LONG opR ID .)
    RCURL           reduce using rule 112 (condicionR -> LONG opR ID .)
    RPAREN          reduce using rule 112 (condicionR -> LONG opR ID .)


state 183

    (113) condicionR -> STRING_1 opR STRING_1 .

    SEMICOLON       reduce using rule 113 (condicionR -> STRING_1 opR STRING_1 .)
    LINEBREAK       reduce using rule 113 (condicionR -> STRING_1 opR STRING_1 .)
    $end            reduce using rule 113 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 113 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 113 (condicionR -> STRING_1 opR STRING_1 .)


state 184

    (114) condicionR -> STRING_1 opR ID .

    SEMICOLON       reduce using rule 114 (condicionR -> STRING_1 opR ID .)
    LINEBREAK       reduce using rule 114 (condicionR -> STRING_1 opR ID .)
    $end            reduce using rule 114 (condicionR -> STRING_1 opR ID .)
    RCURL           reduce using rule 114 (condicionR -> STRING_1 opR ID .)
    RPAREN          reduce using rule 114 (condicionR -> STRING_1 opR ID .)


state 185

    (115) condicionR -> CHAR opR CHAR .

    SEMICOLON       reduce using rule 115 (condicionR -> CHAR opR CHAR .)
    LINEBREAK       reduce using rule 115 (condicionR -> CHAR opR CHAR .)
    $end            reduce using rule 115 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 115 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 115 (condicionR -> CHAR opR CHAR .)


state 186

    (116) condicionR -> CHAR opR ID .

    SEMICOLON       reduce using rule 116 (condicionR -> CHAR opR ID .)
    LINEBREAK       reduce using rule 116 (condicionR -> CHAR opR ID .)
    $end            reduce using rule 116 (condicionR -> CHAR opR ID .)
    RCURL           reduce using rule 116 (condicionR -> CHAR opR ID .)
    RPAREN          reduce using rule 116 (condicionR -> CHAR opR ID .)


state 187

    (138) instance_linkedlist -> LINKEDL LPAREN RPAREN .

    SEMICOLON       reduce using rule 138 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 138 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    $end            reduce using rule 138 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    RCURL           reduce using rule 138 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)


state 188

    (137) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 232


state 189

    (59) tipoDato -> TINT .

    RANGLE          reduce using rule 59 (tipoDato -> TINT .)


state 190

    (60) tipoDato -> TLONG .

    RANGLE          reduce using rule 60 (tipoDato -> TLONG .)


state 191

    (61) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 61 (tipoDato -> TFLOAT .)


state 192

    (62) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 62 (tipoDato -> TDOUBLE .)


state 193

    (63) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 63 (tipoDato -> TBOOLEAN .)


state 194

    (64) tipoDato -> TCHAR .

    RANGLE          reduce using rule 64 (tipoDato -> TCHAR .)


state 195

    (65) tipoDato -> TSTRING .

    RANGLE          reduce using rule 65 (tipoDato -> TSTRING .)


state 196

    (7) line -> blocks SEMICOLON LINEBREAK line .
    (8) line -> blocks SEMICOLON LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    RCURL           reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    LINEBREAK       shift and go to state 233

  ! LINEBREAK       [ reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .) ]


state 197

    (5) line -> blocks LINEBREAK line LINEBREAK .

    $end            reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)


state 198

    (37) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)


state 199

    (39) funcion -> PRINT LPAREN error RPAREN .

    SEMICOLON       reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)
    LINEBREAK       reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)
    $end            reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)
    RCURL           reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)


state 200

    (38) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 201

    (40) funcion -> PRINTLN LPAREN error RPAREN .

    SEMICOLON       reduce using rule 40 (funcion -> PRINTLN LPAREN error RPAREN .)
    LINEBREAK       reduce using rule 40 (funcion -> PRINTLN LPAREN error RPAREN .)
    $end            reduce using rule 40 (funcion -> PRINTLN LPAREN error RPAREN .)
    RCURL           reduce using rule 40 (funcion -> PRINTLN LPAREN error RPAREN .)


state 202

    (41) queue -> keywordVariables ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 234


state 203

    (158) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 235


state 204

    (136) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 236


state 205

    (85) funcion -> FUN ID LPAREN ID . RPAREN LCURL lineorBreak RCURL
    (86) funcion -> FUN ID LPAREN ID . RPAREN LCURL RCURL

    RPAREN          shift and go to state 237


state 206

    (84) funcion -> FUN ID LPAREN RPAREN . LCURL lineorBreak RCURL
    (87) funcion -> FUN ID LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 238


state 207

    (53) tipoDatoEspecifico -> TINT EQUAL . INT

    INT             shift and go to state 239


state 208

    (54) tipoDatoEspecifico -> TLONG EQUAL . LONG

    LONG            shift and go to state 240


state 209

    (55) tipoDatoEspecifico -> TFLOAT EQUAL . FLOAT

    FLOAT           shift and go to state 241


state 210

    (56) tipoDatoEspecifico -> TBOOLEAN EQUAL . BOOLEAN

    BOOLEAN         shift and go to state 242


state 211

    (57) tipoDatoEspecifico -> TCHAR EQUAL . CHAR

    CHAR            shift and go to state 243


state 212

    (58) tipoDatoEspecifico -> TSTRING EQUAL . STRING_1

    STRING_1        shift and go to state 244


state 213

    (33) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 245

state 214

    (34) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (148) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 246


state 215

    (36) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 247


state 216

    (35) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 248


state 217

    (150) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 249


state 218

    (151) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 250


state 219

    (152) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 251


state 220

    (153) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 252


state 221

    (154) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 253


state 222

    (155) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 254


state 223

    (145) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 255


state 224

    (147) stack_push -> PUSH LPAREN . factor RPAREN
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 256

state 225

    (146) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 257


state 226

    (149) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 258


state 227

    (42) for -> FOR LPAREN ID IN . iterable RPAREN LCURL lineorBreak RCURL
    (44) iterable -> . ID
    (45) iterable -> . INT THREEDOTS INT
    (46) iterable -> . ID DOT INDICES

    ID              shift and go to state 259
    INT             shift and go to state 261

    iterable                       shift and go to state 260

state 228

    (43) for -> FOR LPAREN error RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 262


state 229

    (91) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL
    (92) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL else

    LCURL           shift and go to state 263


state 230

    (156) while -> WHILE LPAREN ID opR . INT RPAREN LCURL lineorBreak RCURL

    INT             shift and go to state 264


state 231

    (157) while -> WHILE LPAREN error RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 265


state 232

    (137) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 137 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LINEBREAK       reduce using rule 137 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 137 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 137 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 137 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 233

    (8) line -> blocks SEMICOLON LINEBREAK line LINEBREAK .

    $end            reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)


state 234

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (59) tipoDato -> . TINT
    (60) tipoDato -> . TLONG
    (61) tipoDato -> . TFLOAT
    (62) tipoDato -> . TDOUBLE
    (63) tipoDato -> . TBOOLEAN
    (64) tipoDato -> . TCHAR
    (65) tipoDato -> . TSTRING

    TINT            shift and go to state 189
    TLONG           shift and go to state 190
    TFLOAT          shift and go to state 191
    TDOUBLE         shift and go to state 192
    TBOOLEAN        shift and go to state 193
    TCHAR           shift and go to state 194
    TSTRING         shift and go to state 195

    tipoDato                       shift and go to state 266

state 235

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 267


state 236

    (136) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN

    LINKEDL         shift and go to state 47

    instance_linkedlist            shift and go to state 268

state 237

    (85) funcion -> FUN ID LPAREN ID RPAREN . LCURL lineorBreak RCURL
    (86) funcion -> FUN ID LPAREN ID RPAREN . LCURL RCURL

    LCURL           shift and go to state 269


state 238

    (84) funcion -> FUN ID LPAREN RPAREN LCURL . lineorBreak RCURL
    (87) funcion -> FUN ID LPAREN RPAREN LCURL . RCURL
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 271
    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 270
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 239

    (53) tipoDatoEspecifico -> TINT EQUAL INT .

    SEMICOLON       reduce using rule 53 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LINEBREAK       reduce using rule 53 (tipoDatoEspecifico -> TINT EQUAL INT .)
    $end            reduce using rule 53 (tipoDatoEspecifico -> TINT EQUAL INT .)
    RCURL           reduce using rule 53 (tipoDatoEspecifico -> TINT EQUAL INT .)


state 240

    (54) tipoDatoEspecifico -> TLONG EQUAL LONG .

    SEMICOLON       reduce using rule 54 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LINEBREAK       reduce using rule 54 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    $end            reduce using rule 54 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 54 (tipoDatoEspecifico -> TLONG EQUAL LONG .)


state 241

    (55) tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .

    SEMICOLON       reduce using rule 55 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LINEBREAK       reduce using rule 55 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 55 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 55 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)


state 242

    (56) tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .

    SEMICOLON       reduce using rule 56 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LINEBREAK       reduce using rule 56 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 56 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 56 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)


state 243

    (57) tipoDatoEspecifico -> TCHAR EQUAL CHAR .

    SEMICOLON       reduce using rule 57 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LINEBREAK       reduce using rule 57 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 57 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 57 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)


state 244

    (58) tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .

    SEMICOLON       reduce using rule 58 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LINEBREAK       reduce using rule 58 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 58 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 58 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)


state 245

    (33) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 274


state 246

    (34) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (148) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LINEBREAK resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINEBREAK       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 148 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LINEBREAK       [ reduce using rule 148 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 148 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 148 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 247

    (36) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 248

    (35) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 249

    (150) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 150 (Lmetod -> FIRST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 150 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 150 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 150 (Lmetod -> FIRST LPAREN RPAREN .)


state 250

    (151) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 151 (Lmetod -> LAST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 151 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 151 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 151 (Lmetod -> LAST LPAREN RPAREN .)


state 251

    (152) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 152 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 152 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 152 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 152 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 252

    (153) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 275


state 253

    (154) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 276


state 254

    (155) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 277


state 255

    (145) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 145 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LINEBREAK       reduce using rule 145 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 145 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 145 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 256

    (147) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 278


state 257

    (146) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 146 (stack_pop -> POP LPAREN RPAREN .)
    LINEBREAK       reduce using rule 146 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 146 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 146 (stack_pop -> POP LPAREN RPAREN .)


state 258

    (149) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 149 (stack_size -> SIZE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 149 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 149 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 149 (stack_size -> SIZE LPAREN RPAREN .)


state 259

    (44) iterable -> ID .
    (46) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 44 (iterable -> ID .)
    DOT             shift and go to state 279


state 260

    (42) for -> FOR LPAREN ID IN iterable . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 280


state 261

    (45) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 281


state 262

    (43) for -> FOR LPAREN error RPAREN LCURL . lineorBreak RCURL
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 282
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 263

    (91) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL
    (92) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL else
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    condicion                      shift and go to state 8
    lineorBreak                    shift and go to state 283
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 264

    (156) while -> WHILE LPAREN ID opR INT . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 284


state 265

    (157) while -> WHILE LPAREN error RPAREN LCURL . lineorBreak RCURL
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 285
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 266

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 286


state 267

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 287


state 268

    (136) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    SEMICOLON       reduce using rule 136 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LINEBREAK       reduce using rule 136 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 136 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 136 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 269

    (85) funcion -> FUN ID LPAREN ID RPAREN LCURL . lineorBreak RCURL
    (86) funcion -> FUN ID LPAREN ID RPAREN LCURL . RCURL
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 289
    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 288
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 270

    (84) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 290


state 271

    (87) funcion -> FUN ID LPAREN RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 87 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 87 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    $end            reduce using rule 87 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    RCURL           reduce using rule 87 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)


state 272

    (88) lineorBreak -> line .

    RCURL           reduce using rule 88 (lineorBreak -> line .)


state 273

    (89) lineorBreak -> LINEBREAK . line LINEBREAK
    (90) lineorBreak -> LINEBREAK . line
    (9) line -> LINEBREAK .
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 291
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 274

    (33) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 275

    (153) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 153 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 153 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 153 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 153 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 276

    (154) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 154 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 154 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 154 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 154 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 277

    (155) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 155 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LINEBREAK       reduce using rule 155 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 155 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 155 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 278

    (147) stack_push -> PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 147 (stack_push -> PUSH LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 147 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 147 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 147 (stack_push -> PUSH LPAREN factor RPAREN .)


state 279

    (46) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 292


state 280

    (42) for -> FOR LPAREN ID IN iterable RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 293


state 281

    (45) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 294


state 282

    (43) for -> FOR LPAREN error RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 295


state 283

    (91) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL
    (92) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL else

    RCURL           shift and go to state 296


state 284

    (156) while -> WHILE LPAREN ID opR INT RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 297


state 285

    (157) while -> WHILE LPAREN error RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 298


state 286

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 299


state 287

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 300


state 288

    (85) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 301


state 289

    (86) funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 86 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 86 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    $end            reduce using rule 86 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    RCURL           reduce using rule 86 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)


state 290

    (84) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 84 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)


state 291

    (89) lineorBreak -> LINEBREAK line . LINEBREAK
    (90) lineorBreak -> LINEBREAK line .

    LINEBREAK       shift and go to state 302
    RCURL           reduce using rule 90 (lineorBreak -> LINEBREAK line .)


state 292

    (46) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 46 (iterable -> ID DOT INDICES .)


state 293

    (42) for -> FOR LPAREN ID IN iterable RPAREN LCURL . lineorBreak RCURL
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 303
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 294

    (45) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 45 (iterable -> INT THREEDOTS INT .)


state 295

    (43) for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)


state 296

    (91) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .
    (92) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL . else
    (93) else -> . ELSE LCURL lineorBreak RCURL

    SEMICOLON       reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    ELSE            shift and go to state 305

    else                           shift and go to state 304

state 297

    (156) while -> WHILE LPAREN ID opR INT RPAREN LCURL . lineorBreak RCURL
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 306
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 298

    (157) while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 157 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 157 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 157 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 157 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)


state 299

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 307


state 300

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 308


state 301

    (85) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 85 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 85 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 85 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 85 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)


state 302

    (89) lineorBreak -> LINEBREAK line LINEBREAK .

    RCURL           reduce using rule 89 (lineorBreak -> LINEBREAK line LINEBREAK .)


state 303

    (42) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 309


state 304

    (92) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .

    SEMICOLON       reduce using rule 92 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    LINEBREAK       reduce using rule 92 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    $end            reduce using rule 92 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    RCURL           reduce using rule 92 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)


state 305

    (93) else -> ELSE . LCURL lineorBreak RCURL

    LCURL           shift and go to state 310


state 306

    (156) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 311


state 307

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 312


state 308

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 313


state 309

    (42) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)


state 310

    (93) else -> ELSE LCURL . lineorBreak RCURL
    (88) lineorBreak -> . line
    (89) lineorBreak -> . LINEBREAK line LINEBREAK
    (90) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (67) expression -> . expression PLUS term
    (68) expression -> . expression MINUS term
    (69) expression -> . expression TIMES term
    (70) expression -> . expression DIVIDE term
    (71) expression -> . expression MOD term
    (72) expression -> . expression INCREMENTONE
    (73) expression -> . expression DECREMENTONE
    (74) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (94) condicion -> . condicionL
    (95) condicion -> . condicionR
    (96) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (40) funcion -> . PRINTLN LPAREN error RPAREN
    (84) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (85) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (86) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (87) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (75) term -> . factor
    (76) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (92) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (156) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (157) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (97) condicionL -> . BOOLEAN opL BOOLEAN
    (98) condicionL -> . ID opL ID
    (99) condicionL -> . ID opL BOOLEAN
    (100) condicionL -> . BOOLEAN opL ID
    (101) condicionR -> . INT opR INT
    (102) condicionR -> . INT opR FLOAT
    (103) condicionR -> . INT opR LONG
    (104) condicionR -> . INT opR ID
    (105) condicionR -> . FLOAT opR FLOAT
    (106) condicionR -> . FLOAT opR INT
    (107) condicionR -> . FLOAT opR LONG
    (108) condicionR -> . FLOAT opR ID
    (109) condicionR -> . LONG opR LONG
    (110) condicionR -> . LONG opR INT
    (111) condicionR -> . LONG opR FLOAT
    (112) condicionR -> . LONG opR ID
    (113) condicionR -> . STRING_1 opR STRING_1
    (114) condicionR -> . STRING_1 opR ID
    (115) condicionR -> . CHAR opR CHAR
    (116) condicionR -> . CHAR opR ID
    (117) condicionR -> . ID opR ID
    (118) condicionR -> . ID opR INT
    (119) condicionR -> . ID opR FLOAT
    (120) condicionR -> . ID opR LONG
    (121) condicionR -> . ID opR STRING_1
    (122) condicionR -> . ID opR CHAR
    (123) condicionN -> . EXCL_WS BOOLEAN
    (124) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (136) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (139) stack_actuar -> . ID DOT stack_funciones
    (138) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (137) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (158) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (159) lsimplem -> . ID DOT Lmetod
    (160) lcomp -> . ID DOT Cmetod
    (77) factor -> . INT
    (78) factor -> . FLOAT
    (79) factor -> . LONG
    (80) factor -> . CHAR
    (81) factor -> . BOOLEAN
    (82) factor -> . ID
    (83) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 273
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 314
    line                           shift and go to state 272
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 311

    (156) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 156 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 156 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 156 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 156 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)


state 312

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (59) tipoDato -> . TINT
    (60) tipoDato -> . TLONG
    (61) tipoDato -> . TFLOAT
    (62) tipoDato -> . TDOUBLE
    (63) tipoDato -> . TBOOLEAN
    (64) tipoDato -> . TCHAR
    (65) tipoDato -> . TSTRING

    TINT            shift and go to state 189
    TLONG           shift and go to state 190
    TFLOAT          shift and go to state 191
    TDOUBLE         shift and go to state 192
    TBOOLEAN        shift and go to state 193
    TCHAR           shift and go to state 194
    TSTRING         shift and go to state 195

    tipoDato                       shift and go to state 315

state 313

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 316


state 314

    (93) else -> ELSE LCURL lineorBreak . RCURL

    RCURL           shift and go to state 317


state 315

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 318


state 316

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 319


state 317

    (93) else -> ELSE LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 93 (else -> ELSE LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 93 (else -> ELSE LCURL lineorBreak RCURL .)
    $end            reduce using rule 93 (else -> ELSE LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 93 (else -> ELSE LCURL lineorBreak RCURL .)


state 318

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 320


state 319

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 321


state 320

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 322


state 321

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 323


state 322

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)


state 323

    (158) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 158 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 158 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 158 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 158 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINEBREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 53 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 54 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 104 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 105 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 196 resolved as shift
WARNING: reduce/reduce conflict in state 246 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 246
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SEMICOLON
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> blocks
Rule 2     line -> blocks LINEBREAK
Rule 3     line -> blocks LINEBREAK line
Rule 4     line -> blocks LINEBREAK line LINEBREAK
Rule 5     line -> LINEBREAK
Rule 6     blocks -> impresion
Rule 7     blocks -> expression
Rule 8     blocks -> estructurasControl
Rule 9     blocks -> condicion
Rule 10    blocks -> funcion
Rule 11    blocks -> asignacion
Rule 12    blocks -> estructurasDatos
Rule 13    estructurasDatos -> queue
Rule 14    estructurasDatos -> queue_operations
Rule 15    estructurasDatos -> stack
Rule 16    estructurasDatos -> stack_actuar
Rule 17    estructurasDatos -> instance_linkedlist
Rule 18    estructurasDatos -> def_estruct_tipoDato
Rule 19    estructurasDatos -> lista
Rule 20    estructurasDatos -> lsimplem
Rule 21    estructurasDatos -> lcomp
Rule 22    estructurasControl -> for
Rule 23    estructurasControl -> if
Rule 24    estructurasControl -> while
Rule 25    queue_operations -> queue_add
Rule 26    queue_operations -> queue_peek
Rule 27    queue_operations -> queue_remove
Rule 28    queue_operations -> queue_poll
Rule 29    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 30    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 31    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 32    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 33    impresion -> PRINT LPAREN expression RPAREN
Rule 34    impresion -> PRINTLN LPAREN expression RPAREN
Rule 35    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 36    for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
Rule 37    iterable -> ID
Rule 38    iterable -> INT THREEDOTS INT
Rule 39    iterable -> ID DOT INDICES
Rule 40    asignacion -> keywordVariables asignacionSimple
Rule 41    asignacion -> asignacionSimple
Rule 42    keywordVariables -> VAR
Rule 43    keywordVariables -> VAL
Rule 44    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 45    asignacionSimple -> ID EQUAL valor
Rule 46    tipoDatoEspecifico -> TINT EQUAL INT
Rule 47    tipoDatoEspecifico -> TLONG EQUAL LONG
Rule 48    tipoDatoEspecifico -> TFLOAT EQUAL FLOAT
Rule 49    tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN
Rule 50    tipoDatoEspecifico -> TCHAR EQUAL CHAR
Rule 51    tipoDatoEspecifico -> TSTRING EQUAL STRING_1
Rule 52    tipoDato -> TINT
Rule 53    tipoDato -> TLONG
Rule 54    tipoDato -> TFLOAT
Rule 55    tipoDato -> TDOUBLE
Rule 56    tipoDato -> TBOOLEAN
Rule 57    tipoDato -> TCHAR
Rule 58    tipoDato -> TSTRING
Rule 59    valor -> expression
Rule 60    expression -> expression PLUS term
Rule 61    expression -> expression MINUS term
Rule 62    expression -> expression TIMES term
Rule 63    expression -> expression DIVIDE term
Rule 64    expression -> expression MOD term
Rule 65    expression -> expression INCREMENTONE
Rule 66    expression -> expression DECREMENTONE
Rule 67    expression -> term
Rule 68    term -> factor
Rule 69    term -> LPAREN expression RPAREN
Rule 70    factor -> INT
Rule 71    factor -> FLOAT
Rule 72    factor -> LONG
Rule 73    factor -> CHAR
Rule 74    factor -> BOOLEAN
Rule 75    factor -> ID
Rule 76    factor -> STRING_1
Rule 77    funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
Rule 78    funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
Rule 79    funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL
Rule 80    funcion -> FUN ID LPAREN RPAREN LCURL RCURL
Rule 81    lineorBreak -> line
Rule 82    lineorBreak -> LINEBREAK line LINEBREAK
Rule 83    lineorBreak -> LINEBREAK line
Rule 84    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
Rule 85    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
Rule 86    else -> ELSE LCURL lineorBreak RCURL
Rule 87    condicion -> condicionL
Rule 88    condicion -> condicionR
Rule 89    condicion -> condicionN
Rule 90    condicionL -> BOOLEAN opL BOOLEAN
Rule 91    condicionL -> ID opL ID
Rule 92    condicionL -> ID opL BOOLEAN
Rule 93    condicionL -> BOOLEAN opL ID
Rule 94    condicionR -> INT opR INT
Rule 95    condicionR -> INT opR FLOAT
Rule 96    condicionR -> INT opR LONG
Rule 97    condicionR -> INT opR ID
Rule 98    condicionR -> FLOAT opR FLOAT
Rule 99    condicionR -> FLOAT opR INT
Rule 100   condicionR -> FLOAT opR LONG
Rule 101   condicionR -> FLOAT opR ID
Rule 102   condicionR -> LONG opR LONG
Rule 103   condicionR -> LONG opR INT
Rule 104   condicionR -> LONG opR FLOAT
Rule 105   condicionR -> LONG opR ID
Rule 106   condicionR -> STRING_1 opR STRING_1
Rule 107   condicionR -> STRING_1 opR ID
Rule 108   condicionR -> CHAR opR CHAR
Rule 109   condicionR -> CHAR opR ID
Rule 110   condicionR -> ID opR ID
Rule 111   condicionR -> ID opR INT
Rule 112   condicionR -> ID opR FLOAT
Rule 113   condicionR -> ID opR LONG
Rule 114   condicionR -> ID opR STRING_1
Rule 115   condicionR -> ID opR CHAR
Rule 116   condicionN -> EXCL_WS BOOLEAN
Rule 117   condicionN -> EXCL_WS ID
Rule 118   opL -> CONJ
Rule 119   opL -> DISJ
Rule 120   opR -> LANGLE
Rule 121   opR -> RANGLE
Rule 122   opR -> LE
Rule 123   opR -> GE
Rule 124   opR -> EXCL_EQ
Rule 125   opR -> EXCL_EQEQ
Rule 126   opR -> AS_SAFE
Rule 127   opR -> EQEQ
Rule 128   opR -> EQEQEQ
Rule 129   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 130   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 131   instance_linkedlist -> LINKEDL LPAREN RPAREN
Rule 132   stack_actuar -> ID DOT stack_funciones
Rule 133   stack_funciones -> stack_isEmpty
Rule 134   stack_funciones -> stack_push
Rule 135   stack_funciones -> stack_pop
Rule 136   stack_funciones -> stack_peek
Rule 137   stack_funciones -> stack_size
Rule 138   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 139   stack_pop -> POP LPAREN RPAREN
Rule 140   stack_push -> PUSH LPAREN factor RPAREN
Rule 141   stack_peek -> PEEK LPAREN RPAREN
Rule 142   stack_size -> SIZE LPAREN RPAREN
Rule 143   Lmetod -> FIRST LPAREN RPAREN
Rule 144   Lmetod -> LAST LPAREN RPAREN
Rule 145   Lmetod -> REMOVEL LPAREN RPAREN
Rule 146   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 147   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 148   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 149   while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
Rule 150   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 151   lsimplem -> ID DOT Lmetod
Rule 152   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 29
ANNOTATION           : 
APPEND               : 146
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 126
AT_NO_WS             : 
BOOLEAN              : 49 74 90 90 92 93 116
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 50 73 108 108 109 115
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 118
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 66
DISJ                 : 119
DIVIDE               : 63
DIVIDEIN             : 
DO                   : 
DOT                  : 29 30 31 32 39 132 151 152
DOTS                 : 35 44 129 150
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 86
ENUM                 : 
EQEQ                 : 127
EQEQEQ               : 128
EQUAL                : 35 45 46 47 48 49 50 51 129 150
EXCL_EQ              : 124
EXCL_EQEQ            : 125
EXCL_NO_WS           : 
EXCL_WS              : 116 117
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 143
FLOAT                : 48 71 95 98 98 99 100 101 104 112
FOR                  : 36
FUN                  : 77 78 79 80
GE                   : 123
GET                  : 
HASH                 : 
ID                   : 29 30 31 32 35 36 37 39 44 45 75 77 78 78 79 79 80 91 91 92 93 97 101 105 107 109 110 110 111 112 113 114 115 117 129 132 149 150 151 152
IF                   : 84 85
IMPORT               : 
IN                   : 36
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 65
INCREMENTTIMES       : 
INDICES              : 39
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 38 38 46 70 94 94 95 96 97 99 103 111 149
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 138
LANGLE               : 35 35 120 130 150 150
LAST                 : 144
LATEINIT             : 
LCURL                : 36 77 78 79 80 84 85 86 149
LE                   : 122
LINEBREAK            : 2 3 4 4 5 82 82 83
LINKEDL              : 35 131 150 150
LISTOF               : 
LONG                 : 47 72 96 100 102 102 103 104 105 113
LPAREN               : 29 30 31 32 33 34 35 36 69 77 78 79 80 84 85 131 138 139 140 141 142 143 144 145 146 147 148 149 150
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 61
MOD                  : 64
MODIN                : 
NOINLINE             : 
OBJECT               : 146 147 150 150
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 30 141
PLUS                 : 60
POLL                 : 31
POP                  : 139
PRINT                : 33
PRINTLN              : 34
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 140
QUEST_WS             : 
QUEUE                : 35
RANGE                : 
RANGLE               : 35 35 121 130 150 150
RCURL                : 36 77 78 79 80 84 85 86 149
RECEIVER             : 
REIFIED              : 
REMOVE               : 32
REMOVEI              : 148
REMOVEL              : 145
REMOVEN              : 147
RETURN               : 
RPAREN               : 29 30 31 32 33 34 35 36 69 77 78 79 80 84 85 131 138 139 140 141 142 143 144 145 146 147 148 149 150
RSQUARE              : 
SEALED               : 
SEMICOLON            : 
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 142
STACK                : 130
STRING_1             : 51 76 106 106 107 114
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 49 56
TCHAR                : 50 57
TDOUBLE              : 55
TEMPLATE             : 
TFLOAT               : 48 54
THIS                 : 
THREEDOTS            : 38
THROW                : 
TIMES                : 62
TINT                 : 46 52 148
TLONG                : 47 53
TRY                  : 
TSTRING              : 51 58
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 35 43
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 42
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 149
error                : 

Nonterminals, with rules where they appear

Cmetod               : 152
Lmetod               : 151
asignacion           : 11
asignacionSimple     : 40 41
blocks               : 1 2 3 4
condicion            : 9 84 85
condicionL           : 87
condicionN           : 89
condicionR           : 88
def_estruct_tipoDato : 18 129
else                 : 85
estructurasControl   : 8
estructurasDatos     : 12
expression           : 7 33 34 59 60 61 62 63 64 65 66 69
factor               : 29 68 140
for                  : 22
funcion              : 10
if                   : 23
impresion            : 6
instance_linkedlist  : 17 129
iterable             : 36
keywordVariables     : 40 129 150
lcomp                : 21
line                 : 3 4 81 82 83 0
lineorBreak          : 36 77 78 84 85 86 149
lista                : 19
lsimplem             : 20
opL                  : 90 91 92 93
opR                  : 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 149
queue                : 13
queue_add            : 25
queue_operations     : 14
queue_peek           : 26
queue_poll           : 28
queue_remove         : 27
stack                : 15
stack_actuar         : 16
stack_funciones      : 132
stack_isEmpty        : 133
stack_peek           : 136
stack_pop            : 135
stack_push           : 134
stack_size           : 137
term                 : 60 61 62 63 64 67
tipoDato             : 35 35 130
tipoDatoEspecifico   : 44
valor                : 45
while                : 24

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 1
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 1

    (0) S' -> line .



state 2

    (1) line -> blocks .
    (2) line -> blocks . LINEBREAK
    (3) line -> blocks . LINEBREAK line
    (4) line -> blocks . LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 1 (line -> blocks .)
    RCURL           reduce using rule 1 (line -> blocks .)
    LINEBREAK       shift and go to state 53

  ! LINEBREAK       [ reduce using rule 1 (line -> blocks .) ]


state 3

    (5) line -> LINEBREAK .

    $end            reduce using rule 5 (line -> LINEBREAK .)
    LINEBREAK       reduce using rule 5 (line -> LINEBREAK .)
    RCURL           reduce using rule 5 (line -> LINEBREAK .)


state 4

    (6) blocks -> impresion .

    LINEBREAK       reduce using rule 6 (blocks -> impresion .)
    $end            reduce using rule 6 (blocks -> impresion .)
    RCURL           reduce using rule 6 (blocks -> impresion .)


state 5

    (7) blocks -> expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    LINEBREAK       reduce using rule 7 (blocks -> expression .)
    $end            reduce using rule 7 (blocks -> expression .)
    RCURL           reduce using rule 7 (blocks -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 6

    (8) blocks -> estructurasControl .

    LINEBREAK       reduce using rule 8 (blocks -> estructurasControl .)
    $end            reduce using rule 8 (blocks -> estructurasControl .)
    RCURL           reduce using rule 8 (blocks -> estructurasControl .)


state 7

    (9) blocks -> condicion .

    LINEBREAK       reduce using rule 9 (blocks -> condicion .)
    $end            reduce using rule 9 (blocks -> condicion .)
    RCURL           reduce using rule 9 (blocks -> condicion .)


state 8

    (10) blocks -> funcion .

    LINEBREAK       reduce using rule 10 (blocks -> funcion .)
    $end            reduce using rule 10 (blocks -> funcion .)
    RCURL           reduce using rule 10 (blocks -> funcion .)


state 9

    (11) blocks -> asignacion .

    LINEBREAK       reduce using rule 11 (blocks -> asignacion .)
    $end            reduce using rule 11 (blocks -> asignacion .)
    RCURL           reduce using rule 11 (blocks -> asignacion .)


state 10

    (12) blocks -> estructurasDatos .

    LINEBREAK       reduce using rule 12 (blocks -> estructurasDatos .)
    $end            reduce using rule 12 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 12 (blocks -> estructurasDatos .)


state 11

    (33) impresion -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 61


state 12

    (69) term -> LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    expression                     shift and go to state 62
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 13

    (34) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 70


state 14

    (67) expression -> term .

    PLUS            reduce using rule 67 (expression -> term .)
    MINUS           reduce using rule 67 (expression -> term .)
    TIMES           reduce using rule 67 (expression -> term .)
    DIVIDE          reduce using rule 67 (expression -> term .)
    MOD             reduce using rule 67 (expression -> term .)
    INCREMENTONE    reduce using rule 67 (expression -> term .)
    DECREMENTONE    reduce using rule 67 (expression -> term .)
    LINEBREAK       reduce using rule 67 (expression -> term .)
    $end            reduce using rule 67 (expression -> term .)
    RPAREN          reduce using rule 67 (expression -> term .)
    RCURL           reduce using rule 67 (expression -> term .)


state 15

    (22) estructurasControl -> for .

    LINEBREAK       reduce using rule 22 (estructurasControl -> for .)
    $end            reduce using rule 22 (estructurasControl -> for .)
    RCURL           reduce using rule 22 (estructurasControl -> for .)


state 16

    (23) estructurasControl -> if .

    LINEBREAK       reduce using rule 23 (estructurasControl -> if .)
    $end            reduce using rule 23 (estructurasControl -> if .)
    RCURL           reduce using rule 23 (estructurasControl -> if .)


state 17

    (24) estructurasControl -> while .

    LINEBREAK       reduce using rule 24 (estructurasControl -> while .)
    $end            reduce using rule 24 (estructurasControl -> while .)
    RCURL           reduce using rule 24 (estructurasControl -> while .)


state 18

    (87) condicion -> condicionL .

    LINEBREAK       reduce using rule 87 (condicion -> condicionL .)
    $end            reduce using rule 87 (condicion -> condicionL .)
    RCURL           reduce using rule 87 (condicion -> condicionL .)
    RPAREN          reduce using rule 87 (condicion -> condicionL .)


state 19

    (88) condicion -> condicionR .

    LINEBREAK       reduce using rule 88 (condicion -> condicionR .)
    $end            reduce using rule 88 (condicion -> condicionR .)
    RCURL           reduce using rule 88 (condicion -> condicionR .)
    RPAREN          reduce using rule 88 (condicion -> condicionR .)


state 20

    (89) condicion -> condicionN .

    LINEBREAK       reduce using rule 89 (condicion -> condicionN .)
    $end            reduce using rule 89 (condicion -> condicionN .)
    RCURL           reduce using rule 89 (condicion -> condicionN .)
    RPAREN          reduce using rule 89 (condicion -> condicionN .)


state 21

    (77) funcion -> FUN . ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> FUN . ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN . ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> FUN . ID LPAREN RPAREN LCURL RCURL

    ID              shift and go to state 71


state 22

    (91) condicionL -> ID . opL ID
    (92) condicionL -> ID . opL BOOLEAN
    (110) condicionR -> ID . opR ID
    (111) condicionR -> ID . opR INT
    (112) condicionR -> ID . opR FLOAT
    (113) condicionR -> ID . opR LONG
    (114) condicionR -> ID . opR STRING_1
    (115) condicionR -> ID . opR CHAR
    (44) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (45) asignacionSimple -> ID . EQUAL valor
    (132) stack_actuar -> ID . DOT stack_funciones
    (151) lsimplem -> ID . DOT Lmetod
    (152) lcomp -> ID . DOT Cmetod
    (75) factor -> ID .
    (29) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (32) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (118) opL -> . CONJ
    (119) opL -> . DISJ
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    DOTS            shift and go to state 74
    EQUAL           shift and go to state 75
    DOT             shift and go to state 76
    PLUS            reduce using rule 75 (factor -> ID .)
    MINUS           reduce using rule 75 (factor -> ID .)
    TIMES           reduce using rule 75 (factor -> ID .)
    DIVIDE          reduce using rule 75 (factor -> ID .)
    MOD             reduce using rule 75 (factor -> ID .)
    INCREMENTONE    reduce using rule 75 (factor -> ID .)
    DECREMENTONE    reduce using rule 75 (factor -> ID .)
    LINEBREAK       reduce using rule 75 (factor -> ID .)
    $end            reduce using rule 75 (factor -> ID .)
    RCURL           reduce using rule 75 (factor -> ID .)
    CONJ            shift and go to state 77
    DISJ            shift and go to state 78
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opL                            shift and go to state 72
    opR                            shift and go to state 73

state 23

    (40) asignacion -> keywordVariables . asignacionSimple
    (129) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (150) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 89

    asignacionSimple               shift and go to state 88

state 24

    (41) asignacion -> asignacionSimple .

    LINEBREAK       reduce using rule 41 (asignacion -> asignacionSimple .)
    $end            reduce using rule 41 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 41 (asignacion -> asignacionSimple .)


state 25

    (13) estructurasDatos -> queue .

    LINEBREAK       reduce using rule 13 (estructurasDatos -> queue .)
    $end            reduce using rule 13 (estructurasDatos -> queue .)
    RCURL           reduce using rule 13 (estructurasDatos -> queue .)


state 26

    (14) estructurasDatos -> queue_operations .

    LINEBREAK       reduce using rule 14 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 14 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 14 (estructurasDatos -> queue_operations .)


state 27

    (15) estructurasDatos -> stack .

    LINEBREAK       reduce using rule 15 (estructurasDatos -> stack .)
    $end            reduce using rule 15 (estructurasDatos -> stack .)
    RCURL           reduce using rule 15 (estructurasDatos -> stack .)


state 28

    (16) estructurasDatos -> stack_actuar .

    LINEBREAK       reduce using rule 16 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 16 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 16 (estructurasDatos -> stack_actuar .)


state 29

    (17) estructurasDatos -> instance_linkedlist .

    LINEBREAK       reduce using rule 17 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 17 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 17 (estructurasDatos -> instance_linkedlist .)


state 30

    (18) estructurasDatos -> def_estruct_tipoDato .

    LINEBREAK       reduce using rule 18 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 18 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 18 (estructurasDatos -> def_estruct_tipoDato .)


state 31

    (19) estructurasDatos -> lista .

    LINEBREAK       reduce using rule 19 (estructurasDatos -> lista .)
    $end            reduce using rule 19 (estructurasDatos -> lista .)
    RCURL           reduce using rule 19 (estructurasDatos -> lista .)


state 32

    (20) estructurasDatos -> lsimplem .

    LINEBREAK       reduce using rule 20 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 20 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 20 (estructurasDatos -> lsimplem .)


state 33

    (21) estructurasDatos -> lcomp .

    LINEBREAK       reduce using rule 21 (estructurasDatos -> lcomp .)
    $end            reduce using rule 21 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 21 (estructurasDatos -> lcomp .)


state 34

    (68) term -> factor .

    PLUS            reduce using rule 68 (term -> factor .)
    MINUS           reduce using rule 68 (term -> factor .)
    TIMES           reduce using rule 68 (term -> factor .)
    DIVIDE          reduce using rule 68 (term -> factor .)
    MOD             reduce using rule 68 (term -> factor .)
    INCREMENTONE    reduce using rule 68 (term -> factor .)
    DECREMENTONE    reduce using rule 68 (term -> factor .)
    LINEBREAK       reduce using rule 68 (term -> factor .)
    $end            reduce using rule 68 (term -> factor .)
    RPAREN          reduce using rule 68 (term -> factor .)
    RCURL           reduce using rule 68 (term -> factor .)


state 35

    (36) for -> FOR . LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 90


state 36

    (84) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL else

    LPAREN          shift and go to state 91


state 37

    (149) while -> WHILE . LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 92


state 38

    (94) condicionR -> INT . opR INT
    (95) condicionR -> INT . opR FLOAT
    (96) condicionR -> INT . opR LONG
    (97) condicionR -> INT . opR ID
    (70) factor -> INT .
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    PLUS            reduce using rule 70 (factor -> INT .)
    MINUS           reduce using rule 70 (factor -> INT .)
    TIMES           reduce using rule 70 (factor -> INT .)
    DIVIDE          reduce using rule 70 (factor -> INT .)
    MOD             reduce using rule 70 (factor -> INT .)
    INCREMENTONE    reduce using rule 70 (factor -> INT .)
    DECREMENTONE    reduce using rule 70 (factor -> INT .)
    LINEBREAK       reduce using rule 70 (factor -> INT .)
    $end            reduce using rule 70 (factor -> INT .)
    RCURL           reduce using rule 70 (factor -> INT .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 93

state 39

    (90) condicionL -> BOOLEAN . opL BOOLEAN
    (93) condicionL -> BOOLEAN . opL ID
    (74) factor -> BOOLEAN .
    (118) opL -> . CONJ
    (119) opL -> . DISJ

    PLUS            reduce using rule 74 (factor -> BOOLEAN .)
    MINUS           reduce using rule 74 (factor -> BOOLEAN .)
    TIMES           reduce using rule 74 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 74 (factor -> BOOLEAN .)
    MOD             reduce using rule 74 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 74 (factor -> BOOLEAN .)
    $end            reduce using rule 74 (factor -> BOOLEAN .)
    RCURL           reduce using rule 74 (factor -> BOOLEAN .)
    CONJ            shift and go to state 77
    DISJ            shift and go to state 78

    opL                            shift and go to state 94

state 40

    (98) condicionR -> FLOAT . opR FLOAT
    (99) condicionR -> FLOAT . opR INT
    (100) condicionR -> FLOAT . opR LONG
    (101) condicionR -> FLOAT . opR ID
    (71) factor -> FLOAT .
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    PLUS            reduce using rule 71 (factor -> FLOAT .)
    MINUS           reduce using rule 71 (factor -> FLOAT .)
    TIMES           reduce using rule 71 (factor -> FLOAT .)
    DIVIDE          reduce using rule 71 (factor -> FLOAT .)
    MOD             reduce using rule 71 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 71 (factor -> FLOAT .)
    $end            reduce using rule 71 (factor -> FLOAT .)
    RCURL           reduce using rule 71 (factor -> FLOAT .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 95

state 41

    (102) condicionR -> LONG . opR LONG
    (103) condicionR -> LONG . opR INT
    (104) condicionR -> LONG . opR FLOAT
    (105) condicionR -> LONG . opR ID
    (72) factor -> LONG .
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    PLUS            reduce using rule 72 (factor -> LONG .)
    MINUS           reduce using rule 72 (factor -> LONG .)
    TIMES           reduce using rule 72 (factor -> LONG .)
    DIVIDE          reduce using rule 72 (factor -> LONG .)
    MOD             reduce using rule 72 (factor -> LONG .)
    INCREMENTONE    reduce using rule 72 (factor -> LONG .)
    DECREMENTONE    reduce using rule 72 (factor -> LONG .)
    LINEBREAK       reduce using rule 72 (factor -> LONG .)
    $end            reduce using rule 72 (factor -> LONG .)
    RCURL           reduce using rule 72 (factor -> LONG .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 96

state 42

    (106) condicionR -> STRING_1 . opR STRING_1
    (107) condicionR -> STRING_1 . opR ID
    (76) factor -> STRING_1 .
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    PLUS            reduce using rule 76 (factor -> STRING_1 .)
    MINUS           reduce using rule 76 (factor -> STRING_1 .)
    TIMES           reduce using rule 76 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 76 (factor -> STRING_1 .)
    MOD             reduce using rule 76 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 76 (factor -> STRING_1 .)
    $end            reduce using rule 76 (factor -> STRING_1 .)
    RCURL           reduce using rule 76 (factor -> STRING_1 .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 97

state 43

    (108) condicionR -> CHAR . opR CHAR
    (109) condicionR -> CHAR . opR ID
    (73) factor -> CHAR .
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    PLUS            reduce using rule 73 (factor -> CHAR .)
    MINUS           reduce using rule 73 (factor -> CHAR .)
    TIMES           reduce using rule 73 (factor -> CHAR .)
    DIVIDE          reduce using rule 73 (factor -> CHAR .)
    MOD             reduce using rule 73 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 73 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 73 (factor -> CHAR .)
    LINEBREAK       reduce using rule 73 (factor -> CHAR .)
    $end            reduce using rule 73 (factor -> CHAR .)
    RCURL           reduce using rule 73 (factor -> CHAR .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 98

state 44

    (116) condicionN -> EXCL_WS . BOOLEAN
    (117) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 99
    ID              shift and go to state 100


state 45

    (42) keywordVariables -> VAR .

    ID              reduce using rule 42 (keywordVariables -> VAR .)


state 46

    (43) keywordVariables -> VAL .
    (35) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101

  ! ID              [ reduce using rule 43 (keywordVariables -> VAL .) ]


state 47

    (131) instance_linkedlist -> LINKEDL . LPAREN RPAREN

    LPAREN          shift and go to state 102


state 48

    (25) queue_operations -> queue_add .

    LINEBREAK       reduce using rule 25 (queue_operations -> queue_add .)
    $end            reduce using rule 25 (queue_operations -> queue_add .)
    RCURL           reduce using rule 25 (queue_operations -> queue_add .)


state 49

    (26) queue_operations -> queue_peek .

    LINEBREAK       reduce using rule 26 (queue_operations -> queue_peek .)
    $end            reduce using rule 26 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 26 (queue_operations -> queue_peek .)


state 50

    (27) queue_operations -> queue_remove .

    LINEBREAK       reduce using rule 27 (queue_operations -> queue_remove .)
    $end            reduce using rule 27 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 27 (queue_operations -> queue_remove .)


state 51

    (28) queue_operations -> queue_poll .

    LINEBREAK       reduce using rule 28 (queue_operations -> queue_poll .)
    $end            reduce using rule 28 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 28 (queue_operations -> queue_poll .)


state 52

    (130) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 103


state 53

    (2) line -> blocks LINEBREAK .
    (3) line -> blocks LINEBREAK . line
    (4) line -> blocks LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 2 (line -> blocks LINEBREAK .)
    RCURL           reduce using rule 2 (line -> blocks LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 2 (line -> blocks LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 104
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 54

    (60) expression -> expression PLUS . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 105
    factor                         shift and go to state 34

state 55

    (61) expression -> expression MINUS . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 106
    factor                         shift and go to state 34

state 56

    (62) expression -> expression TIMES . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 107
    factor                         shift and go to state 34

state 57

    (63) expression -> expression DIVIDE . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 108
    factor                         shift and go to state 34

state 58

    (64) expression -> expression MOD . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 109
    factor                         shift and go to state 34

state 59

    (65) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 65 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 65 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 65 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 65 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 65 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 65 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 65 (expression -> expression INCREMENTONE .)
    LINEBREAK       reduce using rule 65 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 65 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 65 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 65 (expression -> expression INCREMENTONE .)


state 60

    (66) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 66 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 66 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 66 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 66 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 66 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 66 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 66 (expression -> expression DECREMENTONE .)
    LINEBREAK       reduce using rule 66 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 66 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 66 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 66 (expression -> expression DECREMENTONE .)


state 61

    (33) impresion -> PRINT LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    expression                     shift and go to state 110
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 62

    (69) term -> LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 63

    (70) factor -> INT .

    RPAREN          reduce using rule 70 (factor -> INT .)
    PLUS            reduce using rule 70 (factor -> INT .)
    MINUS           reduce using rule 70 (factor -> INT .)
    TIMES           reduce using rule 70 (factor -> INT .)
    DIVIDE          reduce using rule 70 (factor -> INT .)
    MOD             reduce using rule 70 (factor -> INT .)
    INCREMENTONE    reduce using rule 70 (factor -> INT .)
    DECREMENTONE    reduce using rule 70 (factor -> INT .)
    LINEBREAK       reduce using rule 70 (factor -> INT .)
    $end            reduce using rule 70 (factor -> INT .)
    RCURL           reduce using rule 70 (factor -> INT .)


state 64

    (71) factor -> FLOAT .

    RPAREN          reduce using rule 71 (factor -> FLOAT .)
    PLUS            reduce using rule 71 (factor -> FLOAT .)
    MINUS           reduce using rule 71 (factor -> FLOAT .)
    TIMES           reduce using rule 71 (factor -> FLOAT .)
    DIVIDE          reduce using rule 71 (factor -> FLOAT .)
    MOD             reduce using rule 71 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 71 (factor -> FLOAT .)
    $end            reduce using rule 71 (factor -> FLOAT .)
    RCURL           reduce using rule 71 (factor -> FLOAT .)


state 65

    (72) factor -> LONG .

    RPAREN          reduce using rule 72 (factor -> LONG .)
    PLUS            reduce using rule 72 (factor -> LONG .)
    MINUS           reduce using rule 72 (factor -> LONG .)
    TIMES           reduce using rule 72 (factor -> LONG .)
    DIVIDE          reduce using rule 72 (factor -> LONG .)
    MOD             reduce using rule 72 (factor -> LONG .)
    INCREMENTONE    reduce using rule 72 (factor -> LONG .)
    DECREMENTONE    reduce using rule 72 (factor -> LONG .)
    LINEBREAK       reduce using rule 72 (factor -> LONG .)
    $end            reduce using rule 72 (factor -> LONG .)
    RCURL           reduce using rule 72 (factor -> LONG .)


state 66

    (73) factor -> CHAR .

    RPAREN          reduce using rule 73 (factor -> CHAR .)
    PLUS            reduce using rule 73 (factor -> CHAR .)
    MINUS           reduce using rule 73 (factor -> CHAR .)
    TIMES           reduce using rule 73 (factor -> CHAR .)
    DIVIDE          reduce using rule 73 (factor -> CHAR .)
    MOD             reduce using rule 73 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 73 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 73 (factor -> CHAR .)
    LINEBREAK       reduce using rule 73 (factor -> CHAR .)
    $end            reduce using rule 73 (factor -> CHAR .)
    RCURL           reduce using rule 73 (factor -> CHAR .)


state 67

    (74) factor -> BOOLEAN .

    RPAREN          reduce using rule 74 (factor -> BOOLEAN .)
    PLUS            reduce using rule 74 (factor -> BOOLEAN .)
    MINUS           reduce using rule 74 (factor -> BOOLEAN .)
    TIMES           reduce using rule 74 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 74 (factor -> BOOLEAN .)
    MOD             reduce using rule 74 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 74 (factor -> BOOLEAN .)
    $end            reduce using rule 74 (factor -> BOOLEAN .)
    RCURL           reduce using rule 74 (factor -> BOOLEAN .)


state 68

    (75) factor -> ID .

    RPAREN          reduce using rule 75 (factor -> ID .)
    PLUS            reduce using rule 75 (factor -> ID .)
    MINUS           reduce using rule 75 (factor -> ID .)
    TIMES           reduce using rule 75 (factor -> ID .)
    DIVIDE          reduce using rule 75 (factor -> ID .)
    MOD             reduce using rule 75 (factor -> ID .)
    INCREMENTONE    reduce using rule 75 (factor -> ID .)
    DECREMENTONE    reduce using rule 75 (factor -> ID .)
    LINEBREAK       reduce using rule 75 (factor -> ID .)
    $end            reduce using rule 75 (factor -> ID .)
    RCURL           reduce using rule 75 (factor -> ID .)


state 69

    (76) factor -> STRING_1 .

    RPAREN          reduce using rule 76 (factor -> STRING_1 .)
    PLUS            reduce using rule 76 (factor -> STRING_1 .)
    MINUS           reduce using rule 76 (factor -> STRING_1 .)
    TIMES           reduce using rule 76 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 76 (factor -> STRING_1 .)
    MOD             reduce using rule 76 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 76 (factor -> STRING_1 .)
    $end            reduce using rule 76 (factor -> STRING_1 .)
    RCURL           reduce using rule 76 (factor -> STRING_1 .)


state 70

    (34) impresion -> PRINTLN LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    expression                     shift and go to state 112
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 71

    (77) funcion -> FUN ID . LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> FUN ID . LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN ID . LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> FUN ID . LPAREN RPAREN LCURL RCURL

    LPAREN          shift and go to state 113


state 72

    (91) condicionL -> ID opL . ID
    (92) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 114
    BOOLEAN         shift and go to state 115


state 73

    (110) condicionR -> ID opR . ID
    (111) condicionR -> ID opR . INT
    (112) condicionR -> ID opR . FLOAT
    (113) condicionR -> ID opR . LONG
    (114) condicionR -> ID opR . STRING_1
    (115) condicionR -> ID opR . CHAR

    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    LONG            shift and go to state 119
    STRING_1        shift and go to state 120
    CHAR            shift and go to state 121


state 74

    (44) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (46) tipoDatoEspecifico -> . TINT EQUAL INT
    (47) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (48) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (49) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (50) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (51) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    TINT            shift and go to state 123
    TLONG           shift and go to state 124
    TFLOAT          shift and go to state 125
    TBOOLEAN        shift and go to state 126
    TCHAR           shift and go to state 127
    TSTRING         shift and go to state 128

    tipoDatoEspecifico             shift and go to state 122

state 75

    (45) asignacionSimple -> ID EQUAL . valor
    (59) valor -> . expression
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    valor                          shift and go to state 129
    expression                     shift and go to state 130
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 76

    (132) stack_actuar -> ID DOT . stack_funciones
    (151) lsimplem -> ID DOT . Lmetod
    (152) lcomp -> ID DOT . Cmetod
    (29) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (30) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (32) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (31) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (133) stack_funciones -> . stack_isEmpty
    (134) stack_funciones -> . stack_push
    (135) stack_funciones -> . stack_pop
    (136) stack_funciones -> . stack_peek
    (137) stack_funciones -> . stack_size
    (143) Lmetod -> . FIRST LPAREN RPAREN
    (144) Lmetod -> . LAST LPAREN RPAREN
    (145) Lmetod -> . REMOVEL LPAREN RPAREN
    (146) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (147) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (148) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (138) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (140) stack_push -> . PUSH LPAREN factor RPAREN
    (139) stack_pop -> . POP LPAREN RPAREN
    (141) stack_peek -> . PEEK LPAREN RPAREN
    (142) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 134
    PEEK            shift and go to state 135
    REMOVE          shift and go to state 136
    POLL            shift and go to state 137
    FIRST           shift and go to state 143
    LAST            shift and go to state 144
    REMOVEL         shift and go to state 145
    APPEND          shift and go to state 146
    REMOVEN         shift and go to state 147
    REMOVEI         shift and go to state 148
    ISEMPTY         shift and go to state 149
    PUSH            shift and go to state 150
    POP             shift and go to state 151
    SIZE            shift and go to state 152

    stack_funciones                shift and go to state 131
    Lmetod                         shift and go to state 132
    Cmetod                         shift and go to state 133
    stack_isEmpty                  shift and go to state 138
    stack_push                     shift and go to state 139
    stack_pop                      shift and go to state 140
    stack_peek                     shift and go to state 141
    stack_size                     shift and go to state 142

state 77

    (118) opL -> CONJ .

    ID              reduce using rule 118 (opL -> CONJ .)
    BOOLEAN         reduce using rule 118 (opL -> CONJ .)


state 78

    (119) opL -> DISJ .

    ID              reduce using rule 119 (opL -> DISJ .)
    BOOLEAN         reduce using rule 119 (opL -> DISJ .)


state 79

    (120) opR -> LANGLE .

    ID              reduce using rule 120 (opR -> LANGLE .)
    INT             reduce using rule 120 (opR -> LANGLE .)
    FLOAT           reduce using rule 120 (opR -> LANGLE .)
    LONG            reduce using rule 120 (opR -> LANGLE .)
    STRING_1        reduce using rule 120 (opR -> LANGLE .)
    CHAR            reduce using rule 120 (opR -> LANGLE .)


state 80

    (121) opR -> RANGLE .

    ID              reduce using rule 121 (opR -> RANGLE .)
    INT             reduce using rule 121 (opR -> RANGLE .)
    FLOAT           reduce using rule 121 (opR -> RANGLE .)
    LONG            reduce using rule 121 (opR -> RANGLE .)
    STRING_1        reduce using rule 121 (opR -> RANGLE .)
    CHAR            reduce using rule 121 (opR -> RANGLE .)


state 81

    (122) opR -> LE .

    ID              reduce using rule 122 (opR -> LE .)
    INT             reduce using rule 122 (opR -> LE .)
    FLOAT           reduce using rule 122 (opR -> LE .)
    LONG            reduce using rule 122 (opR -> LE .)
    STRING_1        reduce using rule 122 (opR -> LE .)
    CHAR            reduce using rule 122 (opR -> LE .)


state 82

    (123) opR -> GE .

    ID              reduce using rule 123 (opR -> GE .)
    INT             reduce using rule 123 (opR -> GE .)
    FLOAT           reduce using rule 123 (opR -> GE .)
    LONG            reduce using rule 123 (opR -> GE .)
    STRING_1        reduce using rule 123 (opR -> GE .)
    CHAR            reduce using rule 123 (opR -> GE .)


state 83

    (124) opR -> EXCL_EQ .

    ID              reduce using rule 124 (opR -> EXCL_EQ .)
    INT             reduce using rule 124 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 124 (opR -> EXCL_EQ .)
    LONG            reduce using rule 124 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 124 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 124 (opR -> EXCL_EQ .)


state 84

    (125) opR -> EXCL_EQEQ .

    ID              reduce using rule 125 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 125 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 125 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 125 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 125 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 125 (opR -> EXCL_EQEQ .)


state 85

    (126) opR -> AS_SAFE .

    ID              reduce using rule 126 (opR -> AS_SAFE .)
    INT             reduce using rule 126 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 126 (opR -> AS_SAFE .)
    LONG            reduce using rule 126 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 126 (opR -> AS_SAFE .)
    CHAR            reduce using rule 126 (opR -> AS_SAFE .)


state 86

    (127) opR -> EQEQ .

    ID              reduce using rule 127 (opR -> EQEQ .)
    INT             reduce using rule 127 (opR -> EQEQ .)
    FLOAT           reduce using rule 127 (opR -> EQEQ .)
    LONG            reduce using rule 127 (opR -> EQEQ .)
    STRING_1        reduce using rule 127 (opR -> EQEQ .)
    CHAR            reduce using rule 127 (opR -> EQEQ .)


state 87

    (128) opR -> EQEQEQ .

    ID              reduce using rule 128 (opR -> EQEQEQ .)
    INT             reduce using rule 128 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 128 (opR -> EQEQEQ .)
    LONG            reduce using rule 128 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 128 (opR -> EQEQEQ .)
    CHAR            reduce using rule 128 (opR -> EQEQEQ .)


state 88

    (40) asignacion -> keywordVariables asignacionSimple .

    LINEBREAK       reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)


state 89

    (129) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (150) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (45) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 153
    EQUAL           shift and go to state 75


state 90

    (36) for -> FOR LPAREN . ID IN iterable RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 154


state 91

    (84) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL else
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 156
    ID              shift and go to state 157
    INT             shift and go to state 158
    FLOAT           shift and go to state 159
    LONG            shift and go to state 160
    STRING_1        shift and go to state 161
    CHAR            shift and go to state 162
    EXCL_WS         shift and go to state 44

    condicion                      shift and go to state 155
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20

state 92

    (149) while -> WHILE LPAREN . ID opR INT RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 163


state 93

    (94) condicionR -> INT opR . INT
    (95) condicionR -> INT opR . FLOAT
    (96) condicionR -> INT opR . LONG
    (97) condicionR -> INT opR . ID

    INT             shift and go to state 164
    FLOAT           shift and go to state 165
    LONG            shift and go to state 166
    ID              shift and go to state 167


state 94

    (90) condicionL -> BOOLEAN opL . BOOLEAN
    (93) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 168
    ID              shift and go to state 169


state 95

    (98) condicionR -> FLOAT opR . FLOAT
    (99) condicionR -> FLOAT opR . INT
    (100) condicionR -> FLOAT opR . LONG
    (101) condicionR -> FLOAT opR . ID

    FLOAT           shift and go to state 170
    INT             shift and go to state 171
    LONG            shift and go to state 172
    ID              shift and go to state 173


state 96

    (102) condicionR -> LONG opR . LONG
    (103) condicionR -> LONG opR . INT
    (104) condicionR -> LONG opR . FLOAT
    (105) condicionR -> LONG opR . ID

    LONG            shift and go to state 174
    INT             shift and go to state 175
    FLOAT           shift and go to state 176
    ID              shift and go to state 177


state 97

    (106) condicionR -> STRING_1 opR . STRING_1
    (107) condicionR -> STRING_1 opR . ID

    STRING_1        shift and go to state 178
    ID              shift and go to state 179


state 98

    (108) condicionR -> CHAR opR . CHAR
    (109) condicionR -> CHAR opR . ID

    CHAR            shift and go to state 180
    ID              shift and go to state 181


state 99

    (116) condicionN -> EXCL_WS BOOLEAN .

    LINEBREAK       reduce using rule 116 (condicionN -> EXCL_WS BOOLEAN .)
    $end            reduce using rule 116 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 116 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 116 (condicionN -> EXCL_WS BOOLEAN .)


state 100

    (117) condicionN -> EXCL_WS ID .

    LINEBREAK       reduce using rule 117 (condicionN -> EXCL_WS ID .)
    $end            reduce using rule 117 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 117 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 117 (condicionN -> EXCL_WS ID .)


state 101

    (35) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 182


state 102

    (131) instance_linkedlist -> LINKEDL LPAREN . RPAREN

    RPAREN          shift and go to state 183


state 103

    (130) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 185
    TLONG           shift and go to state 186
    TFLOAT          shift and go to state 187
    TDOUBLE         shift and go to state 188
    TBOOLEAN        shift and go to state 189
    TCHAR           shift and go to state 190
    TSTRING         shift and go to state 191

    tipoDato                       shift and go to state 184

state 104

    (3) line -> blocks LINEBREAK line .
    (4) line -> blocks LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 3 (line -> blocks LINEBREAK line .)
    RCURL           reduce using rule 3 (line -> blocks LINEBREAK line .)
    LINEBREAK       shift and go to state 192

  ! LINEBREAK       [ reduce using rule 3 (line -> blocks LINEBREAK line .) ]


state 105

    (60) expression -> expression PLUS term .

    PLUS            reduce using rule 60 (expression -> expression PLUS term .)
    MINUS           reduce using rule 60 (expression -> expression PLUS term .)
    TIMES           reduce using rule 60 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 60 (expression -> expression PLUS term .)
    MOD             reduce using rule 60 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 60 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 60 (expression -> expression PLUS term .)
    LINEBREAK       reduce using rule 60 (expression -> expression PLUS term .)
    $end            reduce using rule 60 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 60 (expression -> expression PLUS term .)
    RCURL           reduce using rule 60 (expression -> expression PLUS term .)


state 106

    (61) expression -> expression MINUS term .

    PLUS            reduce using rule 61 (expression -> expression MINUS term .)
    MINUS           reduce using rule 61 (expression -> expression MINUS term .)
    TIMES           reduce using rule 61 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 61 (expression -> expression MINUS term .)
    MOD             reduce using rule 61 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 61 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 61 (expression -> expression MINUS term .)
    LINEBREAK       reduce using rule 61 (expression -> expression MINUS term .)
    $end            reduce using rule 61 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 61 (expression -> expression MINUS term .)
    RCURL           reduce using rule 61 (expression -> expression MINUS term .)


state 107

    (62) expression -> expression TIMES term .

    PLUS            reduce using rule 62 (expression -> expression TIMES term .)
    MINUS           reduce using rule 62 (expression -> expression TIMES term .)
    TIMES           reduce using rule 62 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 62 (expression -> expression TIMES term .)
    MOD             reduce using rule 62 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 62 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 62 (expression -> expression TIMES term .)
    LINEBREAK       reduce using rule 62 (expression -> expression TIMES term .)
    $end            reduce using rule 62 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 62 (expression -> expression TIMES term .)
    RCURL           reduce using rule 62 (expression -> expression TIMES term .)


state 108

    (63) expression -> expression DIVIDE term .

    PLUS            reduce using rule 63 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 63 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 63 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 63 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 63 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 63 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 63 (expression -> expression DIVIDE term .)
    LINEBREAK       reduce using rule 63 (expression -> expression DIVIDE term .)
    $end            reduce using rule 63 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 63 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 63 (expression -> expression DIVIDE term .)


state 109

    (64) expression -> expression MOD term .

    PLUS            reduce using rule 64 (expression -> expression MOD term .)
    MINUS           reduce using rule 64 (expression -> expression MOD term .)
    TIMES           reduce using rule 64 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 64 (expression -> expression MOD term .)
    MOD             reduce using rule 64 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 64 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 64 (expression -> expression MOD term .)
    LINEBREAK       reduce using rule 64 (expression -> expression MOD term .)
    $end            reduce using rule 64 (expression -> expression MOD term .)
    RPAREN          reduce using rule 64 (expression -> expression MOD term .)
    RCURL           reduce using rule 64 (expression -> expression MOD term .)


state 110

    (33) impresion -> PRINT LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 193
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 111

    (69) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 69 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 69 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 69 (term -> LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 69 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 69 (term -> LPAREN expression RPAREN .)


state 112

    (34) impresion -> PRINTLN LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 194
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 113

    (77) funcion -> FUN ID LPAREN . RPAREN LCURL lineorBreak RCURL
    (78) funcion -> FUN ID LPAREN . ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN . ID RPAREN LCURL RCURL
    (80) funcion -> FUN ID LPAREN . RPAREN LCURL RCURL

    RPAREN          shift and go to state 196
    ID              shift and go to state 195


state 114

    (91) condicionL -> ID opL ID .

    LINEBREAK       reduce using rule 91 (condicionL -> ID opL ID .)
    $end            reduce using rule 91 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 91 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 91 (condicionL -> ID opL ID .)


state 115

    (92) condicionL -> ID opL BOOLEAN .

    LINEBREAK       reduce using rule 92 (condicionL -> ID opL BOOLEAN .)
    $end            reduce using rule 92 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 92 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 92 (condicionL -> ID opL BOOLEAN .)


state 116

    (110) condicionR -> ID opR ID .

    LINEBREAK       reduce using rule 110 (condicionR -> ID opR ID .)
    $end            reduce using rule 110 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 110 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 110 (condicionR -> ID opR ID .)


state 117

    (111) condicionR -> ID opR INT .

    LINEBREAK       reduce using rule 111 (condicionR -> ID opR INT .)
    $end            reduce using rule 111 (condicionR -> ID opR INT .)
    RCURL           reduce using rule 111 (condicionR -> ID opR INT .)
    RPAREN          reduce using rule 111 (condicionR -> ID opR INT .)


state 118

    (112) condicionR -> ID opR FLOAT .

    LINEBREAK       reduce using rule 112 (condicionR -> ID opR FLOAT .)
    $end            reduce using rule 112 (condicionR -> ID opR FLOAT .)
    RCURL           reduce using rule 112 (condicionR -> ID opR FLOAT .)
    RPAREN          reduce using rule 112 (condicionR -> ID opR FLOAT .)


state 119

    (113) condicionR -> ID opR LONG .

    LINEBREAK       reduce using rule 113 (condicionR -> ID opR LONG .)
    $end            reduce using rule 113 (condicionR -> ID opR LONG .)
    RCURL           reduce using rule 113 (condicionR -> ID opR LONG .)
    RPAREN          reduce using rule 113 (condicionR -> ID opR LONG .)


state 120

    (114) condicionR -> ID opR STRING_1 .

    LINEBREAK       reduce using rule 114 (condicionR -> ID opR STRING_1 .)
    $end            reduce using rule 114 (condicionR -> ID opR STRING_1 .)
    RCURL           reduce using rule 114 (condicionR -> ID opR STRING_1 .)
    RPAREN          reduce using rule 114 (condicionR -> ID opR STRING_1 .)


state 121

    (115) condicionR -> ID opR CHAR .

    LINEBREAK       reduce using rule 115 (condicionR -> ID opR CHAR .)
    $end            reduce using rule 115 (condicionR -> ID opR CHAR .)
    RCURL           reduce using rule 115 (condicionR -> ID opR CHAR .)
    RPAREN          reduce using rule 115 (condicionR -> ID opR CHAR .)


state 122

    (44) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    LINEBREAK       reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 123

    (46) tipoDatoEspecifico -> TINT . EQUAL INT

    EQUAL           shift and go to state 197


state 124

    (47) tipoDatoEspecifico -> TLONG . EQUAL LONG

    EQUAL           shift and go to state 198


state 125

    (48) tipoDatoEspecifico -> TFLOAT . EQUAL FLOAT

    EQUAL           shift and go to state 199


state 126

    (49) tipoDatoEspecifico -> TBOOLEAN . EQUAL BOOLEAN

    EQUAL           shift and go to state 200


state 127

    (50) tipoDatoEspecifico -> TCHAR . EQUAL CHAR

    EQUAL           shift and go to state 201


state 128

    (51) tipoDatoEspecifico -> TSTRING . EQUAL STRING_1

    EQUAL           shift and go to state 202


state 129

    (45) asignacionSimple -> ID EQUAL valor .

    LINEBREAK       reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)


state 130

    (59) valor -> expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    LINEBREAK       reduce using rule 59 (valor -> expression .)
    $end            reduce using rule 59 (valor -> expression .)
    RCURL           reduce using rule 59 (valor -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 131

    (132) stack_actuar -> ID DOT stack_funciones .

    LINEBREAK       reduce using rule 132 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 132 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 132 (stack_actuar -> ID DOT stack_funciones .)


state 132

    (151) lsimplem -> ID DOT Lmetod .

    LINEBREAK       reduce using rule 151 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 151 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 151 (lsimplem -> ID DOT Lmetod .)


state 133

    (152) lcomp -> ID DOT Cmetod .

    LINEBREAK       reduce using rule 152 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 152 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 152 (lcomp -> ID DOT Cmetod .)


state 134

    (29) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 203


state 135

    (30) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (141) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 204


state 136

    (32) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 205


state 137

    (31) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 206


state 138

    (133) stack_funciones -> stack_isEmpty .

    LINEBREAK       reduce using rule 133 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 133 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 133 (stack_funciones -> stack_isEmpty .)


state 139

    (134) stack_funciones -> stack_push .

    LINEBREAK       reduce using rule 134 (stack_funciones -> stack_push .)
    $end            reduce using rule 134 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 134 (stack_funciones -> stack_push .)


state 140

    (135) stack_funciones -> stack_pop .

    LINEBREAK       reduce using rule 135 (stack_funciones -> stack_pop .)
    $end            reduce using rule 135 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 135 (stack_funciones -> stack_pop .)


state 141

    (136) stack_funciones -> stack_peek .

    LINEBREAK       reduce using rule 136 (stack_funciones -> stack_peek .)
    $end            reduce using rule 136 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 136 (stack_funciones -> stack_peek .)


state 142

    (137) stack_funciones -> stack_size .

    LINEBREAK       reduce using rule 137 (stack_funciones -> stack_size .)
    $end            reduce using rule 137 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 137 (stack_funciones -> stack_size .)


state 143

    (143) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 207


state 144

    (144) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 208


state 145

    (145) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 209


state 146

    (146) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 210


state 147

    (147) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 211


state 148

    (148) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 212


state 149

    (138) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 213


state 150

    (140) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 214


state 151

    (139) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 215


state 152

    (142) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 216


state 153

    (129) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (150) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (46) tipoDatoEspecifico -> . TINT EQUAL INT
    (47) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (48) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (49) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (50) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (51) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    LINKEDL         shift and go to state 218
    STACK           shift and go to state 52
    TINT            shift and go to state 123
    TLONG           shift and go to state 124
    TFLOAT          shift and go to state 125
    TBOOLEAN        shift and go to state 126
    TCHAR           shift and go to state 127
    TSTRING         shift and go to state 128

    def_estruct_tipoDato           shift and go to state 217
    tipoDatoEspecifico             shift and go to state 122

state 154

    (36) for -> FOR LPAREN ID . IN iterable RPAREN LCURL lineorBreak RCURL

    IN              shift and go to state 219


state 155

    (84) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL
    (85) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL else

    RPAREN          shift and go to state 220


state 156

    (90) condicionL -> BOOLEAN . opL BOOLEAN
    (93) condicionL -> BOOLEAN . opL ID
    (118) opL -> . CONJ
    (119) opL -> . DISJ

    CONJ            shift and go to state 77
    DISJ            shift and go to state 78

    opL                            shift and go to state 94

state 157

    (91) condicionL -> ID . opL ID
    (92) condicionL -> ID . opL BOOLEAN
    (110) condicionR -> ID . opR ID
    (111) condicionR -> ID . opR INT
    (112) condicionR -> ID . opR FLOAT
    (113) condicionR -> ID . opR LONG
    (114) condicionR -> ID . opR STRING_1
    (115) condicionR -> ID . opR CHAR
    (118) opL -> . CONJ
    (119) opL -> . DISJ
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    CONJ            shift and go to state 77
    DISJ            shift and go to state 78
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opL                            shift and go to state 72
    opR                            shift and go to state 73

state 158

    (94) condicionR -> INT . opR INT
    (95) condicionR -> INT . opR FLOAT
    (96) condicionR -> INT . opR LONG
    (97) condicionR -> INT . opR ID
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 93

state 159

    (98) condicionR -> FLOAT . opR FLOAT
    (99) condicionR -> FLOAT . opR INT
    (100) condicionR -> FLOAT . opR LONG
    (101) condicionR -> FLOAT . opR ID
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 95

state 160

    (102) condicionR -> LONG . opR LONG
    (103) condicionR -> LONG . opR INT
    (104) condicionR -> LONG . opR FLOAT
    (105) condicionR -> LONG . opR ID
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 96

state 161

    (106) condicionR -> STRING_1 . opR STRING_1
    (107) condicionR -> STRING_1 . opR ID
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 97

state 162

    (108) condicionR -> CHAR . opR CHAR
    (109) condicionR -> CHAR . opR ID
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 98

state 163

    (149) while -> WHILE LPAREN ID . opR INT RPAREN LCURL lineorBreak RCURL
    (120) opR -> . LANGLE
    (121) opR -> . RANGLE
    (122) opR -> . LE
    (123) opR -> . GE
    (124) opR -> . EXCL_EQ
    (125) opR -> . EXCL_EQEQ
    (126) opR -> . AS_SAFE
    (127) opR -> . EQEQ
    (128) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 221

state 164

    (94) condicionR -> INT opR INT .

    LINEBREAK       reduce using rule 94 (condicionR -> INT opR INT .)
    $end            reduce using rule 94 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 94 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 94 (condicionR -> INT opR INT .)


state 165

    (95) condicionR -> INT opR FLOAT .

    LINEBREAK       reduce using rule 95 (condicionR -> INT opR FLOAT .)
    $end            reduce using rule 95 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 95 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 95 (condicionR -> INT opR FLOAT .)


state 166

    (96) condicionR -> INT opR LONG .

    LINEBREAK       reduce using rule 96 (condicionR -> INT opR LONG .)
    $end            reduce using rule 96 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 96 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 96 (condicionR -> INT opR LONG .)


state 167

    (97) condicionR -> INT opR ID .

    LINEBREAK       reduce using rule 97 (condicionR -> INT opR ID .)
    $end            reduce using rule 97 (condicionR -> INT opR ID .)
    RCURL           reduce using rule 97 (condicionR -> INT opR ID .)
    RPAREN          reduce using rule 97 (condicionR -> INT opR ID .)


state 168

    (90) condicionL -> BOOLEAN opL BOOLEAN .

    LINEBREAK       reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)
    $end            reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)


state 169

    (93) condicionL -> BOOLEAN opL ID .

    LINEBREAK       reduce using rule 93 (condicionL -> BOOLEAN opL ID .)
    $end            reduce using rule 93 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 93 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 93 (condicionL -> BOOLEAN opL ID .)


state 170

    (98) condicionR -> FLOAT opR FLOAT .

    LINEBREAK       reduce using rule 98 (condicionR -> FLOAT opR FLOAT .)
    $end            reduce using rule 98 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 98 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 98 (condicionR -> FLOAT opR FLOAT .)


state 171

    (99) condicionR -> FLOAT opR INT .

    LINEBREAK       reduce using rule 99 (condicionR -> FLOAT opR INT .)
    $end            reduce using rule 99 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 99 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 99 (condicionR -> FLOAT opR INT .)


state 172

    (100) condicionR -> FLOAT opR LONG .

    LINEBREAK       reduce using rule 100 (condicionR -> FLOAT opR LONG .)
    $end            reduce using rule 100 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 100 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 100 (condicionR -> FLOAT opR LONG .)


state 173

    (101) condicionR -> FLOAT opR ID .

    LINEBREAK       reduce using rule 101 (condicionR -> FLOAT opR ID .)
    $end            reduce using rule 101 (condicionR -> FLOAT opR ID .)
    RCURL           reduce using rule 101 (condicionR -> FLOAT opR ID .)
    RPAREN          reduce using rule 101 (condicionR -> FLOAT opR ID .)


state 174

    (102) condicionR -> LONG opR LONG .

    LINEBREAK       reduce using rule 102 (condicionR -> LONG opR LONG .)
    $end            reduce using rule 102 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 102 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 102 (condicionR -> LONG opR LONG .)


state 175

    (103) condicionR -> LONG opR INT .

    LINEBREAK       reduce using rule 103 (condicionR -> LONG opR INT .)
    $end            reduce using rule 103 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 103 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 103 (condicionR -> LONG opR INT .)


state 176

    (104) condicionR -> LONG opR FLOAT .

    LINEBREAK       reduce using rule 104 (condicionR -> LONG opR FLOAT .)
    $end            reduce using rule 104 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 104 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 104 (condicionR -> LONG opR FLOAT .)


state 177

    (105) condicionR -> LONG opR ID .

    LINEBREAK       reduce using rule 105 (condicionR -> LONG opR ID .)
    $end            reduce using rule 105 (condicionR -> LONG opR ID .)
    RCURL           reduce using rule 105 (condicionR -> LONG opR ID .)
    RPAREN          reduce using rule 105 (condicionR -> LONG opR ID .)


state 178

    (106) condicionR -> STRING_1 opR STRING_1 .

    LINEBREAK       reduce using rule 106 (condicionR -> STRING_1 opR STRING_1 .)
    $end            reduce using rule 106 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 106 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 106 (condicionR -> STRING_1 opR STRING_1 .)


state 179

    (107) condicionR -> STRING_1 opR ID .

    LINEBREAK       reduce using rule 107 (condicionR -> STRING_1 opR ID .)
    $end            reduce using rule 107 (condicionR -> STRING_1 opR ID .)
    RCURL           reduce using rule 107 (condicionR -> STRING_1 opR ID .)
    RPAREN          reduce using rule 107 (condicionR -> STRING_1 opR ID .)


state 180

    (108) condicionR -> CHAR opR CHAR .

    LINEBREAK       reduce using rule 108 (condicionR -> CHAR opR CHAR .)
    $end            reduce using rule 108 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 108 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 108 (condicionR -> CHAR opR CHAR .)


state 181

    (109) condicionR -> CHAR opR ID .

    LINEBREAK       reduce using rule 109 (condicionR -> CHAR opR ID .)
    $end            reduce using rule 109 (condicionR -> CHAR opR ID .)
    RCURL           reduce using rule 109 (condicionR -> CHAR opR ID .)
    RPAREN          reduce using rule 109 (condicionR -> CHAR opR ID .)


state 182

    (35) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 222


state 183

    (131) instance_linkedlist -> LINKEDL LPAREN RPAREN .

    LINEBREAK       reduce using rule 131 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    $end            reduce using rule 131 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    RCURL           reduce using rule 131 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)


state 184

    (130) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 223


state 185

    (52) tipoDato -> TINT .

    RANGLE          reduce using rule 52 (tipoDato -> TINT .)


state 186

    (53) tipoDato -> TLONG .

    RANGLE          reduce using rule 53 (tipoDato -> TLONG .)


state 187

    (54) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 54 (tipoDato -> TFLOAT .)


state 188

    (55) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 55 (tipoDato -> TDOUBLE .)


state 189

    (56) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 56 (tipoDato -> TBOOLEAN .)


state 190

    (57) tipoDato -> TCHAR .

    RANGLE          reduce using rule 57 (tipoDato -> TCHAR .)


state 191

    (58) tipoDato -> TSTRING .

    RANGLE          reduce using rule 58 (tipoDato -> TSTRING .)


state 192

    (4) line -> blocks LINEBREAK line LINEBREAK .

    $end            reduce using rule 4 (line -> blocks LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 4 (line -> blocks LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 4 (line -> blocks LINEBREAK line LINEBREAK .)


state 193

    (33) impresion -> PRINT LPAREN expression RPAREN .

    LINEBREAK       reduce using rule 33 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 33 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 33 (impresion -> PRINT LPAREN expression RPAREN .)


state 194

    (34) impresion -> PRINTLN LPAREN expression RPAREN .

    LINEBREAK       reduce using rule 34 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 34 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 34 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 195

    (78) funcion -> FUN ID LPAREN ID . RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN ID . RPAREN LCURL RCURL

    RPAREN          shift and go to state 224


state 196

    (77) funcion -> FUN ID LPAREN RPAREN . LCURL lineorBreak RCURL
    (80) funcion -> FUN ID LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 225


state 197

    (46) tipoDatoEspecifico -> TINT EQUAL . INT

    INT             shift and go to state 226


state 198

    (47) tipoDatoEspecifico -> TLONG EQUAL . LONG

    LONG            shift and go to state 227


state 199

    (48) tipoDatoEspecifico -> TFLOAT EQUAL . FLOAT

    FLOAT           shift and go to state 228


state 200

    (49) tipoDatoEspecifico -> TBOOLEAN EQUAL . BOOLEAN

    BOOLEAN         shift and go to state 229


state 201

    (50) tipoDatoEspecifico -> TCHAR EQUAL . CHAR

    CHAR            shift and go to state 230


state 202

    (51) tipoDatoEspecifico -> TSTRING EQUAL . STRING_1

    STRING_1        shift and go to state 231


state 203

    (29) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    factor                         shift and go to state 232

state 204

    (30) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (141) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 233


state 205

    (32) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 234


state 206

    (31) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 235


state 207

    (143) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 236


state 208

    (144) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 237


state 209

    (145) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 238


state 210

    (146) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 239


state 211

    (147) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 240


state 212

    (148) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 241


state 213

    (138) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 242


state 214

    (140) stack_push -> PUSH LPAREN . factor RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    factor                         shift and go to state 243

state 215

    (139) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 244


state 216

    (142) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 245


state 217

    (129) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 246


state 218

    (150) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 247


state 219

    (36) for -> FOR LPAREN ID IN . iterable RPAREN LCURL lineorBreak RCURL
    (37) iterable -> . ID
    (38) iterable -> . INT THREEDOTS INT
    (39) iterable -> . ID DOT INDICES

    ID              shift and go to state 248
    INT             shift and go to state 250

    iterable                       shift and go to state 249

state 220

    (84) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL
    (85) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL else

    LCURL           shift and go to state 251


state 221

    (149) while -> WHILE LPAREN ID opR . INT RPAREN LCURL lineorBreak RCURL

    INT             shift and go to state 252


state 222

    (35) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 253


state 223

    (130) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    LINEBREAK       reduce using rule 130 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 130 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 130 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 130 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 224

    (78) funcion -> FUN ID LPAREN ID RPAREN . LCURL lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN ID RPAREN . LCURL RCURL

    LCURL           shift and go to state 254


state 225

    (77) funcion -> FUN ID LPAREN RPAREN LCURL . lineorBreak RCURL
    (80) funcion -> FUN ID LPAREN RPAREN LCURL . RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 256
    LINEBREAK       shift and go to state 258
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 255
    line                           shift and go to state 257
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 226

    (46) tipoDatoEspecifico -> TINT EQUAL INT .

    LINEBREAK       reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    $end            reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    RCURL           reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)


state 227

    (47) tipoDatoEspecifico -> TLONG EQUAL LONG .

    LINEBREAK       reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    $end            reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)


state 228

    (48) tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .

    LINEBREAK       reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)


state 229

    (49) tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .

    LINEBREAK       reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)


state 230

    (50) tipoDatoEspecifico -> TCHAR EQUAL CHAR .

    LINEBREAK       reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)


state 231

    (51) tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .

    LINEBREAK       reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)


state 232

    (29) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 259


state 233

    (30) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (141) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for LINEBREAK resolved using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINEBREAK       reduce using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! LINEBREAK       [ reduce using rule 141 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 141 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 141 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 234

    (32) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    LINEBREAK       reduce using rule 32 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 32 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 32 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 235

    (31) queue_poll -> ID DOT POLL LPAREN RPAREN .

    LINEBREAK       reduce using rule 31 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 31 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 31 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 236

    (143) Lmetod -> FIRST LPAREN RPAREN .

    LINEBREAK       reduce using rule 143 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 143 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 143 (Lmetod -> FIRST LPAREN RPAREN .)


state 237

    (144) Lmetod -> LAST LPAREN RPAREN .

    LINEBREAK       reduce using rule 144 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 144 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 144 (Lmetod -> LAST LPAREN RPAREN .)


state 238

    (145) Lmetod -> REMOVEL LPAREN RPAREN .

    LINEBREAK       reduce using rule 145 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 145 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 145 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 239

    (146) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 260


state 240

    (147) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 261


state 241

    (148) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 262


state 242

    (138) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    LINEBREAK       reduce using rule 138 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 138 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 138 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 243

    (140) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 263


state 244

    (139) stack_pop -> POP LPAREN RPAREN .

    LINEBREAK       reduce using rule 139 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 139 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 139 (stack_pop -> POP LPAREN RPAREN .)


state 245

    (142) stack_size -> SIZE LPAREN RPAREN .

    LINEBREAK       reduce using rule 142 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 142 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 142 (stack_size -> SIZE LPAREN RPAREN .)


state 246

    (129) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN

    LINKEDL         shift and go to state 47

    instance_linkedlist            shift and go to state 264

state 247

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 265


state 248

    (37) iterable -> ID .
    (39) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 37 (iterable -> ID .)
    DOT             shift and go to state 266


state 249

    (36) for -> FOR LPAREN ID IN iterable . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 267


state 250

    (38) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 268


state 251

    (84) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL
    (85) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL else
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 258
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    condicion                      shift and go to state 7
    lineorBreak                    shift and go to state 269
    line                           shift and go to state 257
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 252

    (149) while -> WHILE LPAREN ID opR INT . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 270


state 253

    (35) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 185
    TLONG           shift and go to state 186
    TFLOAT          shift and go to state 187
    TDOUBLE         shift and go to state 188
    TBOOLEAN        shift and go to state 189
    TCHAR           shift and go to state 190
    TSTRING         shift and go to state 191

    tipoDato                       shift and go to state 271

state 254

    (78) funcion -> FUN ID LPAREN ID RPAREN LCURL . lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN ID RPAREN LCURL . RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 273
    LINEBREAK       shift and go to state 258
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 272
    line                           shift and go to state 257
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 255

    (77) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 274


state 256

    (80) funcion -> FUN ID LPAREN RPAREN LCURL RCURL .

    LINEBREAK       reduce using rule 80 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    $end            reduce using rule 80 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    RCURL           reduce using rule 80 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)


state 257

    (81) lineorBreak -> line .

    RCURL           reduce using rule 81 (lineorBreak -> line .)


state 258

    (82) lineorBreak -> LINEBREAK . line LINEBREAK
    (83) lineorBreak -> LINEBREAK . line
    (5) line -> LINEBREAK .
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 5 (line -> LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 275
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 259

    (29) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    LINEBREAK       reduce using rule 29 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 29 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 29 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 260

    (146) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    LINEBREAK       reduce using rule 146 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 146 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 146 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 261

    (147) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    LINEBREAK       reduce using rule 147 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 147 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 147 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 262

    (148) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    LINEBREAK       reduce using rule 148 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 148 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 148 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 263

    (140) stack_push -> PUSH LPAREN factor RPAREN .

    LINEBREAK       reduce using rule 140 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 140 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 140 (stack_push -> PUSH LPAREN factor RPAREN .)


state 264

    (129) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    LINEBREAK       reduce using rule 129 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 129 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 129 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 265

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 276


state 266

    (39) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 277


state 267

    (36) for -> FOR LPAREN ID IN iterable RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 278


state 268

    (38) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 279


state 269

    (84) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL
    (85) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL else

    RCURL           shift and go to state 280


state 270

    (149) while -> WHILE LPAREN ID opR INT RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 281


state 271

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 282


state 272

    (78) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 283


state 273

    (79) funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .

    LINEBREAK       reduce using rule 79 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    $end            reduce using rule 79 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    RCURL           reduce using rule 79 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)


state 274

    (77) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 77 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 77 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 77 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)


state 275

    (82) lineorBreak -> LINEBREAK line . LINEBREAK
    (83) lineorBreak -> LINEBREAK line .

    LINEBREAK       shift and go to state 284
    RCURL           reduce using rule 83 (lineorBreak -> LINEBREAK line .)


state 276

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 285


state 277

    (39) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 39 (iterable -> ID DOT INDICES .)


state 278

    (36) for -> FOR LPAREN ID IN iterable RPAREN LCURL . lineorBreak RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 258
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 286
    line                           shift and go to state 257
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 279

    (38) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 38 (iterable -> INT THREEDOTS INT .)


state 280

    (84) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .
    (85) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL . else
    (86) else -> . ELSE LCURL lineorBreak RCURL

    LINEBREAK       reduce using rule 84 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 84 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 84 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    ELSE            shift and go to state 288

    else                           shift and go to state 287

state 281

    (149) while -> WHILE LPAREN ID opR INT RPAREN LCURL . lineorBreak RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 258
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 289
    line                           shift and go to state 257
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 282

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 290


state 283

    (78) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 78 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 78 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 78 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)


state 284

    (82) lineorBreak -> LINEBREAK line LINEBREAK .

    RCURL           reduce using rule 82 (lineorBreak -> LINEBREAK line LINEBREAK .)


state 285

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 291


state 286

    (36) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 292


state 287

    (85) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .

    LINEBREAK       reduce using rule 85 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    $end            reduce using rule 85 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    RCURL           reduce using rule 85 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)


state 288

    (86) else -> ELSE . LCURL lineorBreak RCURL

    LCURL           shift and go to state 293


state 289

    (149) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 294


state 290

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 295


state 291

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 296


state 292

    (36) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 36 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 36 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 36 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)


state 293

    (86) else -> ELSE LCURL . lineorBreak RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (149) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . INT opR ID
    (98) condicionR -> . FLOAT opR FLOAT
    (99) condicionR -> . FLOAT opR INT
    (100) condicionR -> . FLOAT opR LONG
    (101) condicionR -> . FLOAT opR ID
    (102) condicionR -> . LONG opR LONG
    (103) condicionR -> . LONG opR INT
    (104) condicionR -> . LONG opR FLOAT
    (105) condicionR -> . LONG opR ID
    (106) condicionR -> . STRING_1 opR STRING_1
    (107) condicionR -> . STRING_1 opR ID
    (108) condicionR -> . CHAR opR CHAR
    (109) condicionR -> . CHAR opR ID
    (110) condicionR -> . ID opR ID
    (111) condicionR -> . ID opR INT
    (112) condicionR -> . ID opR FLOAT
    (113) condicionR -> . ID opR LONG
    (114) condicionR -> . ID opR STRING_1
    (115) condicionR -> . ID opR CHAR
    (116) condicionN -> . EXCL_WS BOOLEAN
    (117) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (129) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (132) stack_actuar -> . ID DOT stack_funciones
    (131) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (130) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (150) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (151) lsimplem -> . ID DOT Lmetod
    (152) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 258
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 297
    line                           shift and go to state 257
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 294

    (149) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 149 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 149 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 149 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)


state 295

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 298


state 296

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 299


state 297

    (86) else -> ELSE LCURL lineorBreak . RCURL

    RCURL           shift and go to state 300


state 298

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 185
    TLONG           shift and go to state 186
    TFLOAT          shift and go to state 187
    TDOUBLE         shift and go to state 188
    TBOOLEAN        shift and go to state 189
    TCHAR           shift and go to state 190
    TSTRING         shift and go to state 191

    tipoDato                       shift and go to state 301

state 299

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 302


state 300

    (86) else -> ELSE LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 86 (else -> ELSE LCURL lineorBreak RCURL .)
    $end            reduce using rule 86 (else -> ELSE LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 86 (else -> ELSE LCURL lineorBreak RCURL .)


state 301

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 303


state 302

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 304


state 303

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 305


state 304

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 306


state 305

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 307


state 306

    (150) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    LINEBREAK       reduce using rule 150 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 150 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 150 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 307

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    LINEBREAK       reduce using rule 35 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 35 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 35 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINEBREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 53 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 104 resolved as shift
WARNING: reduce/reduce conflict in state 233 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 233
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

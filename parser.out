Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> blocks
Rule 2     line -> blocks SEMICOLON
Rule 3     line -> blocks LINEBREAK
Rule 4     line -> blocks LINEBREAK line
Rule 5     line -> blocks LINEBREAK line LINEBREAK
Rule 6     line -> blocks SEMICOLON LINEBREAK
Rule 7     line -> blocks SEMICOLON LINEBREAK line
Rule 8     line -> blocks SEMICOLON LINEBREAK line LINEBREAK
Rule 9     line -> LINEBREAK
Rule 10    blocks -> impresion
Rule 11    blocks -> expression
Rule 12    blocks -> estructurasControl
Rule 13    blocks -> condicion
Rule 14    blocks -> funcion
Rule 15    blocks -> asignacion
Rule 16    blocks -> estructurasDatos
Rule 17    estructurasDatos -> queue
Rule 18    estructurasDatos -> queue_operations
Rule 19    estructurasDatos -> stack
Rule 20    estructurasDatos -> stack_actuar
Rule 21    estructurasDatos -> instance_linkedlist
Rule 22    estructurasDatos -> def_estruct_tipoDato
Rule 23    estructurasDatos -> lista
Rule 24    estructurasDatos -> lsimplem
Rule 25    estructurasDatos -> lcomp
Rule 26    estructurasControl -> for
Rule 27    estructurasControl -> if
Rule 28    estructurasControl -> while
Rule 29    queue_operations -> queue_add
Rule 30    queue_operations -> queue_peek
Rule 31    queue_operations -> queue_remove
Rule 32    queue_operations -> queue_poll
Rule 33    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 34    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 35    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 36    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 37    impresion -> PRINT LPAREN expression RPAREN
Rule 38    impresion -> PRINTLN LPAREN expression RPAREN
Rule 39    impresion -> PRINT LPAREN error RPAREN
Rule 40    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 41    for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
Rule 42    iterable -> ID
Rule 43    iterable -> INT THREEDOTS INT
Rule 44    iterable -> ID DOT INDICES
Rule 45    asignacion -> keywordVariables asignacionSimple
Rule 46    asignacion -> asignacionSimple
Rule 47    keywordVariables -> VAR
Rule 48    keywordVariables -> VAL
Rule 49    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 50    asignacionSimple -> ID EQUAL valor
Rule 51    tipoDatoEspecifico -> tipoEntero
Rule 52    tipoDatoEspecifico -> tipoLong
Rule 53    tipoDatoEspecifico -> tipoFloat
Rule 54    tipoDatoEspecifico -> tipoBoolean
Rule 55    tipoDatoEspecifico -> tipoChar
Rule 56    tipoDatoEspecifico -> tipoString
Rule 57    tipoEntero -> TINT EQUAL INT
Rule 58    tipoEntero -> TINT EQUAL error
Rule 59    tipoLong -> TLONG EQUAL LONG
Rule 60    tipoLong -> TLONG EQUAL error
Rule 61    tipoFloat -> TFLOAT EQUAL FLOAT
Rule 62    tipoFloat -> TFLOAT EQUAL error
Rule 63    tipoBoolean -> TBOOLEAN EQUAL BOOLEAN
Rule 64    tipoBoolean -> TBOOLEAN EQUAL error
Rule 65    tipoChar -> TCHAR EQUAL CHAR
Rule 66    tipoChar -> TCHAR EQUAL error
Rule 67    tipoString -> TSTRING EQUAL STRING_1
Rule 68    tipoString -> TSTRING EQUAL error
Rule 69    tipoDato -> TINT
Rule 70    tipoDato -> TLONG
Rule 71    tipoDato -> TFLOAT
Rule 72    tipoDato -> TDOUBLE
Rule 73    tipoDato -> TBOOLEAN
Rule 74    tipoDato -> TCHAR
Rule 75    tipoDato -> TSTRING
Rule 76    valor -> expression
Rule 77    expression -> expression PLUS term
Rule 78    expression -> expression MINUS term
Rule 79    expression -> expression TIMES term
Rule 80    expression -> expression DIVIDE term
Rule 81    expression -> expression MOD term
Rule 82    expression -> expression INCREMENTONE
Rule 83    expression -> expression DECREMENTONE
Rule 84    expression -> term
Rule 85    term -> factor
Rule 86    term -> LPAREN expression RPAREN
Rule 87    factor -> INT
Rule 88    factor -> FLOAT
Rule 89    factor -> LONG
Rule 90    factor -> CHAR
Rule 91    factor -> BOOLEAN
Rule 92    factor -> ID
Rule 93    factor -> STRING_1
Rule 94    funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
Rule 95    funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
Rule 96    funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL
Rule 97    funcion -> FUN ID LPAREN RPAREN LCURL RCURL
Rule 98    lineorBreak -> line
Rule 99    lineorBreak -> LINEBREAK line LINEBREAK
Rule 100   lineorBreak -> LINEBREAK line
Rule 101   if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
Rule 102   if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
Rule 103   else -> ELSE LCURL lineorBreak RCURL
Rule 104   condicion -> condicionL
Rule 105   condicion -> condicionR
Rule 106   condicion -> condicionN
Rule 107   condicionL -> BOOLEAN opL BOOLEAN
Rule 108   condicionL -> ID opL ID
Rule 109   condicionL -> ID opL BOOLEAN
Rule 110   condicionL -> BOOLEAN opL ID
Rule 111   condicionR -> INT opR INT
Rule 112   condicionR -> INT opR FLOAT
Rule 113   condicionR -> INT opR LONG
Rule 114   condicionR -> INT opR ID
Rule 115   condicionR -> FLOAT opR FLOAT
Rule 116   condicionR -> FLOAT opR INT
Rule 117   condicionR -> FLOAT opR LONG
Rule 118   condicionR -> FLOAT opR ID
Rule 119   condicionR -> LONG opR LONG
Rule 120   condicionR -> LONG opR INT
Rule 121   condicionR -> LONG opR FLOAT
Rule 122   condicionR -> LONG opR ID
Rule 123   condicionR -> STRING_1 opR STRING_1
Rule 124   condicionR -> STRING_1 opR ID
Rule 125   condicionR -> CHAR opR CHAR
Rule 126   condicionR -> CHAR opR ID
Rule 127   condicionR -> ID opR ID
Rule 128   condicionR -> ID opR INT
Rule 129   condicionR -> ID opR FLOAT
Rule 130   condicionR -> ID opR LONG
Rule 131   condicionR -> ID opR STRING_1
Rule 132   condicionR -> ID opR CHAR
Rule 133   condicionN -> EXCL_WS BOOLEAN
Rule 134   condicionN -> EXCL_WS ID
Rule 135   opL -> CONJ
Rule 136   opL -> DISJ
Rule 137   opR -> LANGLE
Rule 138   opR -> RANGLE
Rule 139   opR -> LE
Rule 140   opR -> GE
Rule 141   opR -> EXCL_EQ
Rule 142   opR -> EXCL_EQEQ
Rule 143   opR -> AS_SAFE
Rule 144   opR -> EQEQ
Rule 145   opR -> EQEQEQ
Rule 146   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 147   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 148   instance_linkedlist -> LINKEDL LPAREN RPAREN
Rule 149   stack_actuar -> ID DOT stack_funciones
Rule 150   stack_funciones -> stack_isEmpty
Rule 151   stack_funciones -> stack_push
Rule 152   stack_funciones -> stack_pop
Rule 153   stack_funciones -> stack_peek
Rule 154   stack_funciones -> stack_size
Rule 155   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 156   stack_pop -> POP LPAREN RPAREN
Rule 157   stack_push -> PUSH LPAREN factor RPAREN
Rule 158   stack_peek -> PEEK LPAREN RPAREN
Rule 159   stack_size -> SIZE LPAREN RPAREN
Rule 160   Lmetod -> FIRST LPAREN RPAREN
Rule 161   Lmetod -> LAST LPAREN RPAREN
Rule 162   Lmetod -> REMOVEL LPAREN RPAREN
Rule 163   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 164   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 165   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 166   while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
Rule 167   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 168   lsimplem -> ID DOT Lmetod
Rule 169   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 33
ANNOTATION           : 
APPEND               : 163
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 143
AT_NO_WS             : 
BOOLEAN              : 63 91 107 107 109 110 133
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 65 90 125 125 126 132
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 135
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 83
DISJ                 : 136
DIVIDE               : 80
DIVIDEIN             : 
DO                   : 
DOT                  : 33 34 35 36 44 149 168 169
DOTS                 : 40 49 146 167
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 103
ENUM                 : 
EQEQ                 : 144
EQEQEQ               : 145
EQUAL                : 40 50 57 58 59 60 61 62 63 64 65 66 67 68 146 167
EXCL_EQ              : 141
EXCL_EQEQ            : 142
EXCL_NO_WS           : 
EXCL_WS              : 133 134
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 160
FLOAT                : 61 88 112 115 115 116 117 118 121 129
FOR                  : 41
FUN                  : 94 95 96 97
GE                   : 140
GET                  : 
HASH                 : 
ID                   : 33 34 35 36 40 41 42 44 49 50 92 94 95 95 96 96 97 108 108 109 110 114 118 122 124 126 127 127 128 129 130 131 132 134 146 149 166 167 168 169
IF                   : 101 102
IMPORT               : 
IN                   : 41
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 82
INCREMENTTIMES       : 
INDICES              : 44
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 43 43 57 87 111 111 112 113 114 116 120 128 166
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 155
LANGLE               : 40 40 137 147 167 167
LAST                 : 161
LATEINIT             : 
LCURL                : 41 94 95 96 97 101 102 103 166
LE                   : 139
LINEBREAK            : 3 4 5 5 6 7 8 8 9 99 99 100
LINKEDL              : 40 148 167 167
LISTOF               : 
LONG                 : 59 89 113 117 119 119 120 121 122 130
LPAREN               : 33 34 35 36 37 38 39 40 41 86 94 95 96 97 101 102 148 155 156 157 158 159 160 161 162 163 164 165 166 167
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 78
MOD                  : 81
MODIN                : 
NOINLINE             : 
OBJECT               : 163 164 167 167
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 34 158
PLUS                 : 77
POLL                 : 35
POP                  : 156
PRINT                : 37 39
PRINTLN              : 38
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 157
QUEST_WS             : 
QUEUE                : 40
RANGE                : 
RANGLE               : 40 40 138 147 167 167
RCURL                : 41 94 95 96 97 101 102 103 166
RECEIVER             : 
REIFIED              : 
REMOVE               : 36
REMOVEI              : 165
REMOVEL              : 162
REMOVEN              : 164
RETURN               : 
RPAREN               : 33 34 35 36 37 38 39 40 41 86 94 95 96 97 101 102 148 155 156 157 158 159 160 161 162 163 164 165 166 167
RSQUARE              : 
SEALED               : 
SEMICOLON            : 2 6 7 8
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 159
STACK                : 147
STRING_1             : 67 93 123 123 124 131
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 63 64 73
TCHAR                : 65 66 74
TDOUBLE              : 72
TEMPLATE             : 
TFLOAT               : 61 62 71
THIS                 : 
THREEDOTS            : 43
THROW                : 
TIMES                : 79
TINT                 : 57 58 69 165
TLONG                : 59 60 70
TRY                  : 
TSTRING              : 67 68 75
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 40 48
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 47
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 166
error                : 39 58 60 62 64 66 68

Nonterminals, with rules where they appear

Cmetod               : 169
Lmetod               : 168
asignacion           : 15
asignacionSimple     : 45 46
blocks               : 1 2 3 4 5 6 7 8
condicion            : 13 101 102
condicionL           : 104
condicionN           : 106
condicionR           : 105
def_estruct_tipoDato : 22 146
else                 : 102
estructurasControl   : 12
estructurasDatos     : 16
expression           : 11 37 38 76 77 78 79 80 81 82 83 86
factor               : 33 85 157
for                  : 26
funcion              : 14
if                   : 27
impresion            : 10
instance_linkedlist  : 21 146
iterable             : 41
keywordVariables     : 45 146 167
lcomp                : 25
line                 : 4 5 7 8 98 99 100 0
lineorBreak          : 41 94 95 101 102 103 166
lista                : 23
lsimplem             : 24
opL                  : 107 108 109 110
opR                  : 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 166
queue                : 17
queue_add            : 29
queue_operations     : 18
queue_peek           : 30
queue_poll           : 32
queue_remove         : 31
stack                : 19
stack_actuar         : 20
stack_funciones      : 149
stack_isEmpty        : 150
stack_peek           : 153
stack_pop            : 152
stack_push           : 151
stack_size           : 154
term                 : 77 78 79 80 81 84
tipoBoolean          : 54
tipoChar             : 55
tipoDato             : 40 40 147
tipoDatoEspecifico   : 49
tipoEntero           : 51
tipoFloat            : 53
tipoLong             : 52
tipoString           : 56
valor                : 50
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 1
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 1

    (0) S' -> line .



state 2

    (1) line -> blocks .
    (2) line -> blocks . SEMICOLON
    (3) line -> blocks . LINEBREAK
    (4) line -> blocks . LINEBREAK line
    (5) line -> blocks . LINEBREAK line LINEBREAK
    (6) line -> blocks . SEMICOLON LINEBREAK
    (7) line -> blocks . SEMICOLON LINEBREAK line
    (8) line -> blocks . SEMICOLON LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 1 (line -> blocks .)
    RCURL           reduce using rule 1 (line -> blocks .)
    SEMICOLON       shift and go to state 53
    LINEBREAK       shift and go to state 54

  ! LINEBREAK       [ reduce using rule 1 (line -> blocks .) ]


state 3

    (9) line -> LINEBREAK .

    $end            reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       reduce using rule 9 (line -> LINEBREAK .)
    RCURL           reduce using rule 9 (line -> LINEBREAK .)


state 4

    (10) blocks -> impresion .

    SEMICOLON       reduce using rule 10 (blocks -> impresion .)
    LINEBREAK       reduce using rule 10 (blocks -> impresion .)
    $end            reduce using rule 10 (blocks -> impresion .)
    RCURL           reduce using rule 10 (blocks -> impresion .)


state 5

    (11) blocks -> expression .
    (77) expression -> expression . PLUS term
    (78) expression -> expression . MINUS term
    (79) expression -> expression . TIMES term
    (80) expression -> expression . DIVIDE term
    (81) expression -> expression . MOD term
    (82) expression -> expression . INCREMENTONE
    (83) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 11 (blocks -> expression .)
    LINEBREAK       reduce using rule 11 (blocks -> expression .)
    $end            reduce using rule 11 (blocks -> expression .)
    RCURL           reduce using rule 11 (blocks -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 6

    (12) blocks -> estructurasControl .

    SEMICOLON       reduce using rule 12 (blocks -> estructurasControl .)
    LINEBREAK       reduce using rule 12 (blocks -> estructurasControl .)
    $end            reduce using rule 12 (blocks -> estructurasControl .)
    RCURL           reduce using rule 12 (blocks -> estructurasControl .)


state 7

    (13) blocks -> condicion .

    SEMICOLON       reduce using rule 13 (blocks -> condicion .)
    LINEBREAK       reduce using rule 13 (blocks -> condicion .)
    $end            reduce using rule 13 (blocks -> condicion .)
    RCURL           reduce using rule 13 (blocks -> condicion .)


state 8

    (14) blocks -> funcion .

    SEMICOLON       reduce using rule 14 (blocks -> funcion .)
    LINEBREAK       reduce using rule 14 (blocks -> funcion .)
    $end            reduce using rule 14 (blocks -> funcion .)
    RCURL           reduce using rule 14 (blocks -> funcion .)


state 9

    (15) blocks -> asignacion .

    SEMICOLON       reduce using rule 15 (blocks -> asignacion .)
    LINEBREAK       reduce using rule 15 (blocks -> asignacion .)
    $end            reduce using rule 15 (blocks -> asignacion .)
    RCURL           reduce using rule 15 (blocks -> asignacion .)


state 10

    (16) blocks -> estructurasDatos .

    SEMICOLON       reduce using rule 16 (blocks -> estructurasDatos .)
    LINEBREAK       reduce using rule 16 (blocks -> estructurasDatos .)
    $end            reduce using rule 16 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 16 (blocks -> estructurasDatos .)


state 11

    (37) impresion -> PRINT . LPAREN expression RPAREN
    (39) impresion -> PRINT . LPAREN error RPAREN

    LPAREN          shift and go to state 62


state 12

    (86) term -> LPAREN . expression RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 63
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 13

    (38) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 71


state 14

    (84) expression -> term .

    PLUS            reduce using rule 84 (expression -> term .)
    MINUS           reduce using rule 84 (expression -> term .)
    TIMES           reduce using rule 84 (expression -> term .)
    DIVIDE          reduce using rule 84 (expression -> term .)
    MOD             reduce using rule 84 (expression -> term .)
    INCREMENTONE    reduce using rule 84 (expression -> term .)
    DECREMENTONE    reduce using rule 84 (expression -> term .)
    SEMICOLON       reduce using rule 84 (expression -> term .)
    LINEBREAK       reduce using rule 84 (expression -> term .)
    $end            reduce using rule 84 (expression -> term .)
    RPAREN          reduce using rule 84 (expression -> term .)
    RCURL           reduce using rule 84 (expression -> term .)


state 15

    (26) estructurasControl -> for .

    SEMICOLON       reduce using rule 26 (estructurasControl -> for .)
    LINEBREAK       reduce using rule 26 (estructurasControl -> for .)
    $end            reduce using rule 26 (estructurasControl -> for .)
    RCURL           reduce using rule 26 (estructurasControl -> for .)


state 16

    (27) estructurasControl -> if .

    SEMICOLON       reduce using rule 27 (estructurasControl -> if .)
    LINEBREAK       reduce using rule 27 (estructurasControl -> if .)
    $end            reduce using rule 27 (estructurasControl -> if .)
    RCURL           reduce using rule 27 (estructurasControl -> if .)


state 17

    (28) estructurasControl -> while .

    SEMICOLON       reduce using rule 28 (estructurasControl -> while .)
    LINEBREAK       reduce using rule 28 (estructurasControl -> while .)
    $end            reduce using rule 28 (estructurasControl -> while .)
    RCURL           reduce using rule 28 (estructurasControl -> while .)


state 18

    (104) condicion -> condicionL .

    SEMICOLON       reduce using rule 104 (condicion -> condicionL .)
    LINEBREAK       reduce using rule 104 (condicion -> condicionL .)
    $end            reduce using rule 104 (condicion -> condicionL .)
    RCURL           reduce using rule 104 (condicion -> condicionL .)
    RPAREN          reduce using rule 104 (condicion -> condicionL .)


state 19

    (105) condicion -> condicionR .

    SEMICOLON       reduce using rule 105 (condicion -> condicionR .)
    LINEBREAK       reduce using rule 105 (condicion -> condicionR .)
    $end            reduce using rule 105 (condicion -> condicionR .)
    RCURL           reduce using rule 105 (condicion -> condicionR .)
    RPAREN          reduce using rule 105 (condicion -> condicionR .)


state 20

    (106) condicion -> condicionN .

    SEMICOLON       reduce using rule 106 (condicion -> condicionN .)
    LINEBREAK       reduce using rule 106 (condicion -> condicionN .)
    $end            reduce using rule 106 (condicion -> condicionN .)
    RCURL           reduce using rule 106 (condicion -> condicionN .)
    RPAREN          reduce using rule 106 (condicion -> condicionN .)


state 21

    (94) funcion -> FUN . ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> FUN . ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> FUN . ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> FUN . ID LPAREN RPAREN LCURL RCURL

    ID              shift and go to state 72


state 22

    (108) condicionL -> ID . opL ID
    (109) condicionL -> ID . opL BOOLEAN
    (127) condicionR -> ID . opR ID
    (128) condicionR -> ID . opR INT
    (129) condicionR -> ID . opR FLOAT
    (130) condicionR -> ID . opR LONG
    (131) condicionR -> ID . opR STRING_1
    (132) condicionR -> ID . opR CHAR
    (49) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (50) asignacionSimple -> ID . EQUAL valor
    (149) stack_actuar -> ID . DOT stack_funciones
    (168) lsimplem -> ID . DOT Lmetod
    (169) lcomp -> ID . DOT Cmetod
    (92) factor -> ID .
    (33) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (36) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (135) opL -> . CONJ
    (136) opL -> . DISJ
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    DOTS            shift and go to state 75
    EQUAL           shift and go to state 76
    DOT             shift and go to state 77
    PLUS            reduce using rule 92 (factor -> ID .)
    MINUS           reduce using rule 92 (factor -> ID .)
    TIMES           reduce using rule 92 (factor -> ID .)
    DIVIDE          reduce using rule 92 (factor -> ID .)
    MOD             reduce using rule 92 (factor -> ID .)
    INCREMENTONE    reduce using rule 92 (factor -> ID .)
    DECREMENTONE    reduce using rule 92 (factor -> ID .)
    SEMICOLON       reduce using rule 92 (factor -> ID .)
    LINEBREAK       reduce using rule 92 (factor -> ID .)
    $end            reduce using rule 92 (factor -> ID .)
    RCURL           reduce using rule 92 (factor -> ID .)
    CONJ            shift and go to state 78
    DISJ            shift and go to state 79
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opL                            shift and go to state 73
    opR                            shift and go to state 74

state 23

    (45) asignacion -> keywordVariables . asignacionSimple
    (146) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (167) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 90

    asignacionSimple               shift and go to state 89

state 24

    (46) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 46 (asignacion -> asignacionSimple .)
    LINEBREAK       reduce using rule 46 (asignacion -> asignacionSimple .)
    $end            reduce using rule 46 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 46 (asignacion -> asignacionSimple .)


state 25

    (17) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 17 (estructurasDatos -> queue .)
    LINEBREAK       reduce using rule 17 (estructurasDatos -> queue .)
    $end            reduce using rule 17 (estructurasDatos -> queue .)
    RCURL           reduce using rule 17 (estructurasDatos -> queue .)


state 26

    (18) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 18 (estructurasDatos -> queue_operations .)
    LINEBREAK       reduce using rule 18 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 18 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 18 (estructurasDatos -> queue_operations .)


state 27

    (19) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 19 (estructurasDatos -> stack .)
    LINEBREAK       reduce using rule 19 (estructurasDatos -> stack .)
    $end            reduce using rule 19 (estructurasDatos -> stack .)
    RCURL           reduce using rule 19 (estructurasDatos -> stack .)


state 28

    (20) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    LINEBREAK       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 20 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 20 (estructurasDatos -> stack_actuar .)


state 29

    (21) estructurasDatos -> instance_linkedlist .

    SEMICOLON       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    LINEBREAK       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 21 (estructurasDatos -> instance_linkedlist .)


state 30

    (22) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    LINEBREAK       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)


state 31

    (23) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 23 (estructurasDatos -> lista .)
    LINEBREAK       reduce using rule 23 (estructurasDatos -> lista .)
    $end            reduce using rule 23 (estructurasDatos -> lista .)
    RCURL           reduce using rule 23 (estructurasDatos -> lista .)


state 32

    (24) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 24 (estructurasDatos -> lsimplem .)
    LINEBREAK       reduce using rule 24 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 24 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 24 (estructurasDatos -> lsimplem .)


state 33

    (25) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 25 (estructurasDatos -> lcomp .)
    LINEBREAK       reduce using rule 25 (estructurasDatos -> lcomp .)
    $end            reduce using rule 25 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 25 (estructurasDatos -> lcomp .)


state 34

    (85) term -> factor .

    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)
    TIMES           reduce using rule 85 (term -> factor .)
    DIVIDE          reduce using rule 85 (term -> factor .)
    MOD             reduce using rule 85 (term -> factor .)
    INCREMENTONE    reduce using rule 85 (term -> factor .)
    DECREMENTONE    reduce using rule 85 (term -> factor .)
    SEMICOLON       reduce using rule 85 (term -> factor .)
    LINEBREAK       reduce using rule 85 (term -> factor .)
    $end            reduce using rule 85 (term -> factor .)
    RPAREN          reduce using rule 85 (term -> factor .)
    RCURL           reduce using rule 85 (term -> factor .)


state 35

    (41) for -> FOR . LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 91


state 36

    (101) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL else

    LPAREN          shift and go to state 92


state 37

    (166) while -> WHILE . LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 93


state 38

    (111) condicionR -> INT . opR INT
    (112) condicionR -> INT . opR FLOAT
    (113) condicionR -> INT . opR LONG
    (114) condicionR -> INT . opR ID
    (87) factor -> INT .
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    PLUS            reduce using rule 87 (factor -> INT .)
    MINUS           reduce using rule 87 (factor -> INT .)
    TIMES           reduce using rule 87 (factor -> INT .)
    DIVIDE          reduce using rule 87 (factor -> INT .)
    MOD             reduce using rule 87 (factor -> INT .)
    INCREMENTONE    reduce using rule 87 (factor -> INT .)
    DECREMENTONE    reduce using rule 87 (factor -> INT .)
    SEMICOLON       reduce using rule 87 (factor -> INT .)
    LINEBREAK       reduce using rule 87 (factor -> INT .)
    $end            reduce using rule 87 (factor -> INT .)
    RCURL           reduce using rule 87 (factor -> INT .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 94

state 39

    (107) condicionL -> BOOLEAN . opL BOOLEAN
    (110) condicionL -> BOOLEAN . opL ID
    (91) factor -> BOOLEAN .
    (135) opL -> . CONJ
    (136) opL -> . DISJ

    PLUS            reduce using rule 91 (factor -> BOOLEAN .)
    MINUS           reduce using rule 91 (factor -> BOOLEAN .)
    TIMES           reduce using rule 91 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 91 (factor -> BOOLEAN .)
    MOD             reduce using rule 91 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 91 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 91 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 91 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 91 (factor -> BOOLEAN .)
    $end            reduce using rule 91 (factor -> BOOLEAN .)
    RCURL           reduce using rule 91 (factor -> BOOLEAN .)
    CONJ            shift and go to state 78
    DISJ            shift and go to state 79

    opL                            shift and go to state 95

state 40

    (115) condicionR -> FLOAT . opR FLOAT
    (116) condicionR -> FLOAT . opR INT
    (117) condicionR -> FLOAT . opR LONG
    (118) condicionR -> FLOAT . opR ID
    (88) factor -> FLOAT .
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    PLUS            reduce using rule 88 (factor -> FLOAT .)
    MINUS           reduce using rule 88 (factor -> FLOAT .)
    TIMES           reduce using rule 88 (factor -> FLOAT .)
    DIVIDE          reduce using rule 88 (factor -> FLOAT .)
    MOD             reduce using rule 88 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 88 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 88 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 88 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 88 (factor -> FLOAT .)
    $end            reduce using rule 88 (factor -> FLOAT .)
    RCURL           reduce using rule 88 (factor -> FLOAT .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 96

state 41

    (119) condicionR -> LONG . opR LONG
    (120) condicionR -> LONG . opR INT
    (121) condicionR -> LONG . opR FLOAT
    (122) condicionR -> LONG . opR ID
    (89) factor -> LONG .
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    PLUS            reduce using rule 89 (factor -> LONG .)
    MINUS           reduce using rule 89 (factor -> LONG .)
    TIMES           reduce using rule 89 (factor -> LONG .)
    DIVIDE          reduce using rule 89 (factor -> LONG .)
    MOD             reduce using rule 89 (factor -> LONG .)
    INCREMENTONE    reduce using rule 89 (factor -> LONG .)
    DECREMENTONE    reduce using rule 89 (factor -> LONG .)
    SEMICOLON       reduce using rule 89 (factor -> LONG .)
    LINEBREAK       reduce using rule 89 (factor -> LONG .)
    $end            reduce using rule 89 (factor -> LONG .)
    RCURL           reduce using rule 89 (factor -> LONG .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 97

state 42

    (123) condicionR -> STRING_1 . opR STRING_1
    (124) condicionR -> STRING_1 . opR ID
    (93) factor -> STRING_1 .
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    PLUS            reduce using rule 93 (factor -> STRING_1 .)
    MINUS           reduce using rule 93 (factor -> STRING_1 .)
    TIMES           reduce using rule 93 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 93 (factor -> STRING_1 .)
    MOD             reduce using rule 93 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 93 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 93 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 93 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 93 (factor -> STRING_1 .)
    $end            reduce using rule 93 (factor -> STRING_1 .)
    RCURL           reduce using rule 93 (factor -> STRING_1 .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 98

state 43

    (125) condicionR -> CHAR . opR CHAR
    (126) condicionR -> CHAR . opR ID
    (90) factor -> CHAR .
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    PLUS            reduce using rule 90 (factor -> CHAR .)
    MINUS           reduce using rule 90 (factor -> CHAR .)
    TIMES           reduce using rule 90 (factor -> CHAR .)
    DIVIDE          reduce using rule 90 (factor -> CHAR .)
    MOD             reduce using rule 90 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 90 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 90 (factor -> CHAR .)
    SEMICOLON       reduce using rule 90 (factor -> CHAR .)
    LINEBREAK       reduce using rule 90 (factor -> CHAR .)
    $end            reduce using rule 90 (factor -> CHAR .)
    RCURL           reduce using rule 90 (factor -> CHAR .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 99

state 44

    (133) condicionN -> EXCL_WS . BOOLEAN
    (134) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 100
    ID              shift and go to state 101


state 45

    (47) keywordVariables -> VAR .

    ID              reduce using rule 47 (keywordVariables -> VAR .)


state 46

    (48) keywordVariables -> VAL .
    (40) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 102

  ! ID              [ reduce using rule 48 (keywordVariables -> VAL .) ]


state 47

    (148) instance_linkedlist -> LINKEDL . LPAREN RPAREN

    LPAREN          shift and go to state 103


state 48

    (29) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 29 (queue_operations -> queue_add .)
    LINEBREAK       reduce using rule 29 (queue_operations -> queue_add .)
    $end            reduce using rule 29 (queue_operations -> queue_add .)
    RCURL           reduce using rule 29 (queue_operations -> queue_add .)


state 49

    (30) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 30 (queue_operations -> queue_peek .)
    LINEBREAK       reduce using rule 30 (queue_operations -> queue_peek .)
    $end            reduce using rule 30 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 30 (queue_operations -> queue_peek .)


state 50

    (31) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 31 (queue_operations -> queue_remove .)
    LINEBREAK       reduce using rule 31 (queue_operations -> queue_remove .)
    $end            reduce using rule 31 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 31 (queue_operations -> queue_remove .)


state 51

    (32) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 32 (queue_operations -> queue_poll .)
    LINEBREAK       reduce using rule 32 (queue_operations -> queue_poll .)
    $end            reduce using rule 32 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 32 (queue_operations -> queue_poll .)


state 52

    (147) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 104


state 53

    (2) line -> blocks SEMICOLON .
    (6) line -> blocks SEMICOLON . LINEBREAK
    (7) line -> blocks SEMICOLON . LINEBREAK line
    (8) line -> blocks SEMICOLON . LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 2 (line -> blocks SEMICOLON .)
    RCURL           reduce using rule 2 (line -> blocks SEMICOLON .)
    LINEBREAK       shift and go to state 105

  ! LINEBREAK       [ reduce using rule 2 (line -> blocks SEMICOLON .) ]


state 54

    (3) line -> blocks LINEBREAK .
    (4) line -> blocks LINEBREAK . line
    (5) line -> blocks LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 3 (line -> blocks LINEBREAK .)
    RCURL           reduce using rule 3 (line -> blocks LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 3 (line -> blocks LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 106
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 55

    (77) expression -> expression PLUS . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 107
    factor                         shift and go to state 34

state 56

    (78) expression -> expression MINUS . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 108
    factor                         shift and go to state 34

state 57

    (79) expression -> expression TIMES . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 109
    factor                         shift and go to state 34

state 58

    (80) expression -> expression DIVIDE . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 110
    factor                         shift and go to state 34

state 59

    (81) expression -> expression MOD . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 111
    factor                         shift and go to state 34

state 60

    (82) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 82 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 82 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 82 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 82 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 82 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 82 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 82 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 82 (expression -> expression INCREMENTONE .)
    LINEBREAK       reduce using rule 82 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 82 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 82 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 82 (expression -> expression INCREMENTONE .)


state 61

    (83) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 83 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 83 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 83 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 83 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 83 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 83 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 83 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 83 (expression -> expression DECREMENTONE .)
    LINEBREAK       reduce using rule 83 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 83 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 83 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 83 (expression -> expression DECREMENTONE .)


state 62

    (37) impresion -> PRINT LPAREN . expression RPAREN
    (39) impresion -> PRINT LPAREN . error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    error           shift and go to state 113
    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 112
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 63

    (86) term -> LPAREN expression . RPAREN
    (77) expression -> expression . PLUS term
    (78) expression -> expression . MINUS term
    (79) expression -> expression . TIMES term
    (80) expression -> expression . DIVIDE term
    (81) expression -> expression . MOD term
    (82) expression -> expression . INCREMENTONE
    (83) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 114
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 64

    (87) factor -> INT .

    RPAREN          reduce using rule 87 (factor -> INT .)
    PLUS            reduce using rule 87 (factor -> INT .)
    MINUS           reduce using rule 87 (factor -> INT .)
    TIMES           reduce using rule 87 (factor -> INT .)
    DIVIDE          reduce using rule 87 (factor -> INT .)
    MOD             reduce using rule 87 (factor -> INT .)
    INCREMENTONE    reduce using rule 87 (factor -> INT .)
    DECREMENTONE    reduce using rule 87 (factor -> INT .)
    SEMICOLON       reduce using rule 87 (factor -> INT .)
    LINEBREAK       reduce using rule 87 (factor -> INT .)
    $end            reduce using rule 87 (factor -> INT .)
    RCURL           reduce using rule 87 (factor -> INT .)


state 65

    (88) factor -> FLOAT .

    RPAREN          reduce using rule 88 (factor -> FLOAT .)
    PLUS            reduce using rule 88 (factor -> FLOAT .)
    MINUS           reduce using rule 88 (factor -> FLOAT .)
    TIMES           reduce using rule 88 (factor -> FLOAT .)
    DIVIDE          reduce using rule 88 (factor -> FLOAT .)
    MOD             reduce using rule 88 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 88 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 88 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 88 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 88 (factor -> FLOAT .)
    $end            reduce using rule 88 (factor -> FLOAT .)
    RCURL           reduce using rule 88 (factor -> FLOAT .)


state 66

    (89) factor -> LONG .

    RPAREN          reduce using rule 89 (factor -> LONG .)
    PLUS            reduce using rule 89 (factor -> LONG .)
    MINUS           reduce using rule 89 (factor -> LONG .)
    TIMES           reduce using rule 89 (factor -> LONG .)
    DIVIDE          reduce using rule 89 (factor -> LONG .)
    MOD             reduce using rule 89 (factor -> LONG .)
    INCREMENTONE    reduce using rule 89 (factor -> LONG .)
    DECREMENTONE    reduce using rule 89 (factor -> LONG .)
    SEMICOLON       reduce using rule 89 (factor -> LONG .)
    LINEBREAK       reduce using rule 89 (factor -> LONG .)
    $end            reduce using rule 89 (factor -> LONG .)
    RCURL           reduce using rule 89 (factor -> LONG .)


state 67

    (90) factor -> CHAR .

    RPAREN          reduce using rule 90 (factor -> CHAR .)
    PLUS            reduce using rule 90 (factor -> CHAR .)
    MINUS           reduce using rule 90 (factor -> CHAR .)
    TIMES           reduce using rule 90 (factor -> CHAR .)
    DIVIDE          reduce using rule 90 (factor -> CHAR .)
    MOD             reduce using rule 90 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 90 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 90 (factor -> CHAR .)
    SEMICOLON       reduce using rule 90 (factor -> CHAR .)
    LINEBREAK       reduce using rule 90 (factor -> CHAR .)
    $end            reduce using rule 90 (factor -> CHAR .)
    RCURL           reduce using rule 90 (factor -> CHAR .)


state 68

    (91) factor -> BOOLEAN .

    RPAREN          reduce using rule 91 (factor -> BOOLEAN .)
    PLUS            reduce using rule 91 (factor -> BOOLEAN .)
    MINUS           reduce using rule 91 (factor -> BOOLEAN .)
    TIMES           reduce using rule 91 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 91 (factor -> BOOLEAN .)
    MOD             reduce using rule 91 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 91 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 91 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 91 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 91 (factor -> BOOLEAN .)
    $end            reduce using rule 91 (factor -> BOOLEAN .)
    RCURL           reduce using rule 91 (factor -> BOOLEAN .)


state 69

    (92) factor -> ID .

    RPAREN          reduce using rule 92 (factor -> ID .)
    PLUS            reduce using rule 92 (factor -> ID .)
    MINUS           reduce using rule 92 (factor -> ID .)
    TIMES           reduce using rule 92 (factor -> ID .)
    DIVIDE          reduce using rule 92 (factor -> ID .)
    MOD             reduce using rule 92 (factor -> ID .)
    INCREMENTONE    reduce using rule 92 (factor -> ID .)
    DECREMENTONE    reduce using rule 92 (factor -> ID .)
    SEMICOLON       reduce using rule 92 (factor -> ID .)
    LINEBREAK       reduce using rule 92 (factor -> ID .)
    $end            reduce using rule 92 (factor -> ID .)
    RCURL           reduce using rule 92 (factor -> ID .)


state 70

    (93) factor -> STRING_1 .

    RPAREN          reduce using rule 93 (factor -> STRING_1 .)
    PLUS            reduce using rule 93 (factor -> STRING_1 .)
    MINUS           reduce using rule 93 (factor -> STRING_1 .)
    TIMES           reduce using rule 93 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 93 (factor -> STRING_1 .)
    MOD             reduce using rule 93 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 93 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 93 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 93 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 93 (factor -> STRING_1 .)
    $end            reduce using rule 93 (factor -> STRING_1 .)
    RCURL           reduce using rule 93 (factor -> STRING_1 .)


state 71

    (38) impresion -> PRINTLN LPAREN . expression RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 115
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 72

    (94) funcion -> FUN ID . LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> FUN ID . LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> FUN ID . LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> FUN ID . LPAREN RPAREN LCURL RCURL

    LPAREN          shift and go to state 116


state 73

    (108) condicionL -> ID opL . ID
    (109) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 117
    BOOLEAN         shift and go to state 118


state 74

    (127) condicionR -> ID opR . ID
    (128) condicionR -> ID opR . INT
    (129) condicionR -> ID opR . FLOAT
    (130) condicionR -> ID opR . LONG
    (131) condicionR -> ID opR . STRING_1
    (132) condicionR -> ID opR . CHAR

    ID              shift and go to state 119
    INT             shift and go to state 120
    FLOAT           shift and go to state 121
    LONG            shift and go to state 122
    STRING_1        shift and go to state 123
    CHAR            shift and go to state 124


state 75

    (49) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (51) tipoDatoEspecifico -> . tipoEntero
    (52) tipoDatoEspecifico -> . tipoLong
    (53) tipoDatoEspecifico -> . tipoFloat
    (54) tipoDatoEspecifico -> . tipoBoolean
    (55) tipoDatoEspecifico -> . tipoChar
    (56) tipoDatoEspecifico -> . tipoString
    (57) tipoEntero -> . TINT EQUAL INT
    (58) tipoEntero -> . TINT EQUAL error
    (59) tipoLong -> . TLONG EQUAL LONG
    (60) tipoLong -> . TLONG EQUAL error
    (61) tipoFloat -> . TFLOAT EQUAL FLOAT
    (62) tipoFloat -> . TFLOAT EQUAL error
    (63) tipoBoolean -> . TBOOLEAN EQUAL BOOLEAN
    (64) tipoBoolean -> . TBOOLEAN EQUAL error
    (65) tipoChar -> . TCHAR EQUAL CHAR
    (66) tipoChar -> . TCHAR EQUAL error
    (67) tipoString -> . TSTRING EQUAL STRING_1
    (68) tipoString -> . TSTRING EQUAL error

    TINT            shift and go to state 132
    TLONG           shift and go to state 133
    TFLOAT          shift and go to state 134
    TBOOLEAN        shift and go to state 135
    TCHAR           shift and go to state 136
    TSTRING         shift and go to state 137

    tipoDatoEspecifico             shift and go to state 125
    tipoEntero                     shift and go to state 126
    tipoLong                       shift and go to state 127
    tipoFloat                      shift and go to state 128
    tipoBoolean                    shift and go to state 129
    tipoChar                       shift and go to state 130
    tipoString                     shift and go to state 131

state 76

    (50) asignacionSimple -> ID EQUAL . valor
    (76) valor -> . expression
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    valor                          shift and go to state 138
    expression                     shift and go to state 139
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 77

    (149) stack_actuar -> ID DOT . stack_funciones
    (168) lsimplem -> ID DOT . Lmetod
    (169) lcomp -> ID DOT . Cmetod
    (33) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (34) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (36) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (35) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (150) stack_funciones -> . stack_isEmpty
    (151) stack_funciones -> . stack_push
    (152) stack_funciones -> . stack_pop
    (153) stack_funciones -> . stack_peek
    (154) stack_funciones -> . stack_size
    (160) Lmetod -> . FIRST LPAREN RPAREN
    (161) Lmetod -> . LAST LPAREN RPAREN
    (162) Lmetod -> . REMOVEL LPAREN RPAREN
    (163) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (164) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (165) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (155) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (157) stack_push -> . PUSH LPAREN factor RPAREN
    (156) stack_pop -> . POP LPAREN RPAREN
    (158) stack_peek -> . PEEK LPAREN RPAREN
    (159) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 143
    PEEK            shift and go to state 144
    REMOVE          shift and go to state 145
    POLL            shift and go to state 146
    FIRST           shift and go to state 152
    LAST            shift and go to state 153
    REMOVEL         shift and go to state 154
    APPEND          shift and go to state 155
    REMOVEN         shift and go to state 156
    REMOVEI         shift and go to state 157
    ISEMPTY         shift and go to state 158
    PUSH            shift and go to state 159
    POP             shift and go to state 160
    SIZE            shift and go to state 161

    stack_funciones                shift and go to state 140
    Lmetod                         shift and go to state 141
    Cmetod                         shift and go to state 142
    stack_isEmpty                  shift and go to state 147
    stack_push                     shift and go to state 148
    stack_pop                      shift and go to state 149
    stack_peek                     shift and go to state 150
    stack_size                     shift and go to state 151

state 78

    (135) opL -> CONJ .

    ID              reduce using rule 135 (opL -> CONJ .)
    BOOLEAN         reduce using rule 135 (opL -> CONJ .)


state 79

    (136) opL -> DISJ .

    ID              reduce using rule 136 (opL -> DISJ .)
    BOOLEAN         reduce using rule 136 (opL -> DISJ .)


state 80

    (137) opR -> LANGLE .

    ID              reduce using rule 137 (opR -> LANGLE .)
    INT             reduce using rule 137 (opR -> LANGLE .)
    FLOAT           reduce using rule 137 (opR -> LANGLE .)
    LONG            reduce using rule 137 (opR -> LANGLE .)
    STRING_1        reduce using rule 137 (opR -> LANGLE .)
    CHAR            reduce using rule 137 (opR -> LANGLE .)


state 81

    (138) opR -> RANGLE .

    ID              reduce using rule 138 (opR -> RANGLE .)
    INT             reduce using rule 138 (opR -> RANGLE .)
    FLOAT           reduce using rule 138 (opR -> RANGLE .)
    LONG            reduce using rule 138 (opR -> RANGLE .)
    STRING_1        reduce using rule 138 (opR -> RANGLE .)
    CHAR            reduce using rule 138 (opR -> RANGLE .)


state 82

    (139) opR -> LE .

    ID              reduce using rule 139 (opR -> LE .)
    INT             reduce using rule 139 (opR -> LE .)
    FLOAT           reduce using rule 139 (opR -> LE .)
    LONG            reduce using rule 139 (opR -> LE .)
    STRING_1        reduce using rule 139 (opR -> LE .)
    CHAR            reduce using rule 139 (opR -> LE .)


state 83

    (140) opR -> GE .

    ID              reduce using rule 140 (opR -> GE .)
    INT             reduce using rule 140 (opR -> GE .)
    FLOAT           reduce using rule 140 (opR -> GE .)
    LONG            reduce using rule 140 (opR -> GE .)
    STRING_1        reduce using rule 140 (opR -> GE .)
    CHAR            reduce using rule 140 (opR -> GE .)


state 84

    (141) opR -> EXCL_EQ .

    ID              reduce using rule 141 (opR -> EXCL_EQ .)
    INT             reduce using rule 141 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 141 (opR -> EXCL_EQ .)
    LONG            reduce using rule 141 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 141 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 141 (opR -> EXCL_EQ .)


state 85

    (142) opR -> EXCL_EQEQ .

    ID              reduce using rule 142 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 142 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 142 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 142 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 142 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 142 (opR -> EXCL_EQEQ .)


state 86

    (143) opR -> AS_SAFE .

    ID              reduce using rule 143 (opR -> AS_SAFE .)
    INT             reduce using rule 143 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 143 (opR -> AS_SAFE .)
    LONG            reduce using rule 143 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 143 (opR -> AS_SAFE .)
    CHAR            reduce using rule 143 (opR -> AS_SAFE .)


state 87

    (144) opR -> EQEQ .

    ID              reduce using rule 144 (opR -> EQEQ .)
    INT             reduce using rule 144 (opR -> EQEQ .)
    FLOAT           reduce using rule 144 (opR -> EQEQ .)
    LONG            reduce using rule 144 (opR -> EQEQ .)
    STRING_1        reduce using rule 144 (opR -> EQEQ .)
    CHAR            reduce using rule 144 (opR -> EQEQ .)


state 88

    (145) opR -> EQEQEQ .

    ID              reduce using rule 145 (opR -> EQEQEQ .)
    INT             reduce using rule 145 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 145 (opR -> EQEQEQ .)
    LONG            reduce using rule 145 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 145 (opR -> EQEQEQ .)
    CHAR            reduce using rule 145 (opR -> EQEQEQ .)


state 89

    (45) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)
    LINEBREAK       reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)


state 90

    (146) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (167) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (49) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (50) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 162
    EQUAL           shift and go to state 76


state 91

    (41) for -> FOR LPAREN . ID IN iterable RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 163


state 92

    (101) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL else
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 165
    ID              shift and go to state 166
    INT             shift and go to state 167
    FLOAT           shift and go to state 168
    LONG            shift and go to state 169
    STRING_1        shift and go to state 170
    CHAR            shift and go to state 171
    EXCL_WS         shift and go to state 44

    condicion                      shift and go to state 164
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20

state 93

    (166) while -> WHILE LPAREN . ID opR INT RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 172


state 94

    (111) condicionR -> INT opR . INT
    (112) condicionR -> INT opR . FLOAT
    (113) condicionR -> INT opR . LONG
    (114) condicionR -> INT opR . ID

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    LONG            shift and go to state 175
    ID              shift and go to state 176


state 95

    (107) condicionL -> BOOLEAN opL . BOOLEAN
    (110) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 177
    ID              shift and go to state 178


state 96

    (115) condicionR -> FLOAT opR . FLOAT
    (116) condicionR -> FLOAT opR . INT
    (117) condicionR -> FLOAT opR . LONG
    (118) condicionR -> FLOAT opR . ID

    FLOAT           shift and go to state 179
    INT             shift and go to state 180
    LONG            shift and go to state 181
    ID              shift and go to state 182


state 97

    (119) condicionR -> LONG opR . LONG
    (120) condicionR -> LONG opR . INT
    (121) condicionR -> LONG opR . FLOAT
    (122) condicionR -> LONG opR . ID

    LONG            shift and go to state 183
    INT             shift and go to state 184
    FLOAT           shift and go to state 185
    ID              shift and go to state 186


state 98

    (123) condicionR -> STRING_1 opR . STRING_1
    (124) condicionR -> STRING_1 opR . ID

    STRING_1        shift and go to state 187
    ID              shift and go to state 188


state 99

    (125) condicionR -> CHAR opR . CHAR
    (126) condicionR -> CHAR opR . ID

    CHAR            shift and go to state 189
    ID              shift and go to state 190


state 100

    (133) condicionN -> EXCL_WS BOOLEAN .

    SEMICOLON       reduce using rule 133 (condicionN -> EXCL_WS BOOLEAN .)
    LINEBREAK       reduce using rule 133 (condicionN -> EXCL_WS BOOLEAN .)
    $end            reduce using rule 133 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 133 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 133 (condicionN -> EXCL_WS BOOLEAN .)


state 101

    (134) condicionN -> EXCL_WS ID .

    SEMICOLON       reduce using rule 134 (condicionN -> EXCL_WS ID .)
    LINEBREAK       reduce using rule 134 (condicionN -> EXCL_WS ID .)
    $end            reduce using rule 134 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 134 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 134 (condicionN -> EXCL_WS ID .)


state 102

    (40) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 191


state 103

    (148) instance_linkedlist -> LINKEDL LPAREN . RPAREN

    RPAREN          shift and go to state 192


state 104

    (147) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (69) tipoDato -> . TINT
    (70) tipoDato -> . TLONG
    (71) tipoDato -> . TFLOAT
    (72) tipoDato -> . TDOUBLE
    (73) tipoDato -> . TBOOLEAN
    (74) tipoDato -> . TCHAR
    (75) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 193

state 105

    (6) line -> blocks SEMICOLON LINEBREAK .
    (7) line -> blocks SEMICOLON LINEBREAK . line
    (8) line -> blocks SEMICOLON LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    RCURL           reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 201
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 106

    (4) line -> blocks LINEBREAK line .
    (5) line -> blocks LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 4 (line -> blocks LINEBREAK line .)
    RCURL           reduce using rule 4 (line -> blocks LINEBREAK line .)
    LINEBREAK       shift and go to state 202

  ! LINEBREAK       [ reduce using rule 4 (line -> blocks LINEBREAK line .) ]


state 107

    (77) expression -> expression PLUS term .

    PLUS            reduce using rule 77 (expression -> expression PLUS term .)
    MINUS           reduce using rule 77 (expression -> expression PLUS term .)
    TIMES           reduce using rule 77 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 77 (expression -> expression PLUS term .)
    MOD             reduce using rule 77 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 77 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 77 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 77 (expression -> expression PLUS term .)
    LINEBREAK       reduce using rule 77 (expression -> expression PLUS term .)
    $end            reduce using rule 77 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 77 (expression -> expression PLUS term .)
    RCURL           reduce using rule 77 (expression -> expression PLUS term .)


state 108

    (78) expression -> expression MINUS term .

    PLUS            reduce using rule 78 (expression -> expression MINUS term .)
    MINUS           reduce using rule 78 (expression -> expression MINUS term .)
    TIMES           reduce using rule 78 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 78 (expression -> expression MINUS term .)
    MOD             reduce using rule 78 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 78 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 78 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 78 (expression -> expression MINUS term .)
    LINEBREAK       reduce using rule 78 (expression -> expression MINUS term .)
    $end            reduce using rule 78 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 78 (expression -> expression MINUS term .)
    RCURL           reduce using rule 78 (expression -> expression MINUS term .)


state 109

    (79) expression -> expression TIMES term .

    PLUS            reduce using rule 79 (expression -> expression TIMES term .)
    MINUS           reduce using rule 79 (expression -> expression TIMES term .)
    TIMES           reduce using rule 79 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 79 (expression -> expression TIMES term .)
    MOD             reduce using rule 79 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 79 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 79 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 79 (expression -> expression TIMES term .)
    LINEBREAK       reduce using rule 79 (expression -> expression TIMES term .)
    $end            reduce using rule 79 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 79 (expression -> expression TIMES term .)
    RCURL           reduce using rule 79 (expression -> expression TIMES term .)


state 110

    (80) expression -> expression DIVIDE term .

    PLUS            reduce using rule 80 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 80 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 80 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 80 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 80 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 80 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 80 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 80 (expression -> expression DIVIDE term .)
    LINEBREAK       reduce using rule 80 (expression -> expression DIVIDE term .)
    $end            reduce using rule 80 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 80 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 80 (expression -> expression DIVIDE term .)


state 111

    (81) expression -> expression MOD term .

    PLUS            reduce using rule 81 (expression -> expression MOD term .)
    MINUS           reduce using rule 81 (expression -> expression MOD term .)
    TIMES           reduce using rule 81 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 81 (expression -> expression MOD term .)
    MOD             reduce using rule 81 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 81 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 81 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 81 (expression -> expression MOD term .)
    LINEBREAK       reduce using rule 81 (expression -> expression MOD term .)
    $end            reduce using rule 81 (expression -> expression MOD term .)
    RPAREN          reduce using rule 81 (expression -> expression MOD term .)
    RCURL           reduce using rule 81 (expression -> expression MOD term .)


state 112

    (37) impresion -> PRINT LPAREN expression . RPAREN
    (77) expression -> expression . PLUS term
    (78) expression -> expression . MINUS term
    (79) expression -> expression . TIMES term
    (80) expression -> expression . DIVIDE term
    (81) expression -> expression . MOD term
    (82) expression -> expression . INCREMENTONE
    (83) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 203
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 113

    (39) impresion -> PRINT LPAREN error . RPAREN

    RPAREN          shift and go to state 204


state 114

    (86) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 86 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 86 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 86 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 86 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 86 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 86 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 86 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 86 (term -> LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 86 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 86 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 86 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 86 (term -> LPAREN expression RPAREN .)


state 115

    (38) impresion -> PRINTLN LPAREN expression . RPAREN
    (77) expression -> expression . PLUS term
    (78) expression -> expression . MINUS term
    (79) expression -> expression . TIMES term
    (80) expression -> expression . DIVIDE term
    (81) expression -> expression . MOD term
    (82) expression -> expression . INCREMENTONE
    (83) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 205
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 116

    (94) funcion -> FUN ID LPAREN . RPAREN LCURL lineorBreak RCURL
    (95) funcion -> FUN ID LPAREN . ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> FUN ID LPAREN . ID RPAREN LCURL RCURL
    (97) funcion -> FUN ID LPAREN . RPAREN LCURL RCURL

    RPAREN          shift and go to state 207
    ID              shift and go to state 206


state 117

    (108) condicionL -> ID opL ID .

    SEMICOLON       reduce using rule 108 (condicionL -> ID opL ID .)
    LINEBREAK       reduce using rule 108 (condicionL -> ID opL ID .)
    $end            reduce using rule 108 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 108 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 108 (condicionL -> ID opL ID .)


state 118

    (109) condicionL -> ID opL BOOLEAN .

    SEMICOLON       reduce using rule 109 (condicionL -> ID opL BOOLEAN .)
    LINEBREAK       reduce using rule 109 (condicionL -> ID opL BOOLEAN .)
    $end            reduce using rule 109 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 109 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 109 (condicionL -> ID opL BOOLEAN .)


state 119

    (127) condicionR -> ID opR ID .

    SEMICOLON       reduce using rule 127 (condicionR -> ID opR ID .)
    LINEBREAK       reduce using rule 127 (condicionR -> ID opR ID .)
    $end            reduce using rule 127 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 127 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 127 (condicionR -> ID opR ID .)


state 120

    (128) condicionR -> ID opR INT .

    SEMICOLON       reduce using rule 128 (condicionR -> ID opR INT .)
    LINEBREAK       reduce using rule 128 (condicionR -> ID opR INT .)
    $end            reduce using rule 128 (condicionR -> ID opR INT .)
    RCURL           reduce using rule 128 (condicionR -> ID opR INT .)
    RPAREN          reduce using rule 128 (condicionR -> ID opR INT .)


state 121

    (129) condicionR -> ID opR FLOAT .

    SEMICOLON       reduce using rule 129 (condicionR -> ID opR FLOAT .)
    LINEBREAK       reduce using rule 129 (condicionR -> ID opR FLOAT .)
    $end            reduce using rule 129 (condicionR -> ID opR FLOAT .)
    RCURL           reduce using rule 129 (condicionR -> ID opR FLOAT .)
    RPAREN          reduce using rule 129 (condicionR -> ID opR FLOAT .)


state 122

    (130) condicionR -> ID opR LONG .

    SEMICOLON       reduce using rule 130 (condicionR -> ID opR LONG .)
    LINEBREAK       reduce using rule 130 (condicionR -> ID opR LONG .)
    $end            reduce using rule 130 (condicionR -> ID opR LONG .)
    RCURL           reduce using rule 130 (condicionR -> ID opR LONG .)
    RPAREN          reduce using rule 130 (condicionR -> ID opR LONG .)


state 123

    (131) condicionR -> ID opR STRING_1 .

    SEMICOLON       reduce using rule 131 (condicionR -> ID opR STRING_1 .)
    LINEBREAK       reduce using rule 131 (condicionR -> ID opR STRING_1 .)
    $end            reduce using rule 131 (condicionR -> ID opR STRING_1 .)
    RCURL           reduce using rule 131 (condicionR -> ID opR STRING_1 .)
    RPAREN          reduce using rule 131 (condicionR -> ID opR STRING_1 .)


state 124

    (132) condicionR -> ID opR CHAR .

    SEMICOLON       reduce using rule 132 (condicionR -> ID opR CHAR .)
    LINEBREAK       reduce using rule 132 (condicionR -> ID opR CHAR .)
    $end            reduce using rule 132 (condicionR -> ID opR CHAR .)
    RCURL           reduce using rule 132 (condicionR -> ID opR CHAR .)
    RPAREN          reduce using rule 132 (condicionR -> ID opR CHAR .)


state 125

    (49) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    SEMICOLON       reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LINEBREAK       reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 126

    (51) tipoDatoEspecifico -> tipoEntero .

    SEMICOLON       reduce using rule 51 (tipoDatoEspecifico -> tipoEntero .)
    LINEBREAK       reduce using rule 51 (tipoDatoEspecifico -> tipoEntero .)
    $end            reduce using rule 51 (tipoDatoEspecifico -> tipoEntero .)
    RCURL           reduce using rule 51 (tipoDatoEspecifico -> tipoEntero .)


state 127

    (52) tipoDatoEspecifico -> tipoLong .

    SEMICOLON       reduce using rule 52 (tipoDatoEspecifico -> tipoLong .)
    LINEBREAK       reduce using rule 52 (tipoDatoEspecifico -> tipoLong .)
    $end            reduce using rule 52 (tipoDatoEspecifico -> tipoLong .)
    RCURL           reduce using rule 52 (tipoDatoEspecifico -> tipoLong .)


state 128

    (53) tipoDatoEspecifico -> tipoFloat .

    SEMICOLON       reduce using rule 53 (tipoDatoEspecifico -> tipoFloat .)
    LINEBREAK       reduce using rule 53 (tipoDatoEspecifico -> tipoFloat .)
    $end            reduce using rule 53 (tipoDatoEspecifico -> tipoFloat .)
    RCURL           reduce using rule 53 (tipoDatoEspecifico -> tipoFloat .)


state 129

    (54) tipoDatoEspecifico -> tipoBoolean .

    SEMICOLON       reduce using rule 54 (tipoDatoEspecifico -> tipoBoolean .)
    LINEBREAK       reduce using rule 54 (tipoDatoEspecifico -> tipoBoolean .)
    $end            reduce using rule 54 (tipoDatoEspecifico -> tipoBoolean .)
    RCURL           reduce using rule 54 (tipoDatoEspecifico -> tipoBoolean .)


state 130

    (55) tipoDatoEspecifico -> tipoChar .

    SEMICOLON       reduce using rule 55 (tipoDatoEspecifico -> tipoChar .)
    LINEBREAK       reduce using rule 55 (tipoDatoEspecifico -> tipoChar .)
    $end            reduce using rule 55 (tipoDatoEspecifico -> tipoChar .)
    RCURL           reduce using rule 55 (tipoDatoEspecifico -> tipoChar .)


state 131

    (56) tipoDatoEspecifico -> tipoString .

    SEMICOLON       reduce using rule 56 (tipoDatoEspecifico -> tipoString .)
    LINEBREAK       reduce using rule 56 (tipoDatoEspecifico -> tipoString .)
    $end            reduce using rule 56 (tipoDatoEspecifico -> tipoString .)
    RCURL           reduce using rule 56 (tipoDatoEspecifico -> tipoString .)


state 132

    (57) tipoEntero -> TINT . EQUAL INT
    (58) tipoEntero -> TINT . EQUAL error

    EQUAL           shift and go to state 208


state 133

    (59) tipoLong -> TLONG . EQUAL LONG
    (60) tipoLong -> TLONG . EQUAL error

    EQUAL           shift and go to state 209


state 134

    (61) tipoFloat -> TFLOAT . EQUAL FLOAT
    (62) tipoFloat -> TFLOAT . EQUAL error

    EQUAL           shift and go to state 210


state 135

    (63) tipoBoolean -> TBOOLEAN . EQUAL BOOLEAN
    (64) tipoBoolean -> TBOOLEAN . EQUAL error

    EQUAL           shift and go to state 211


state 136

    (65) tipoChar -> TCHAR . EQUAL CHAR
    (66) tipoChar -> TCHAR . EQUAL error

    EQUAL           shift and go to state 212


state 137

    (67) tipoString -> TSTRING . EQUAL STRING_1
    (68) tipoString -> TSTRING . EQUAL error

    EQUAL           shift and go to state 213


state 138

    (50) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)
    LINEBREAK       reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)


state 139

    (76) valor -> expression .
    (77) expression -> expression . PLUS term
    (78) expression -> expression . MINUS term
    (79) expression -> expression . TIMES term
    (80) expression -> expression . DIVIDE term
    (81) expression -> expression . MOD term
    (82) expression -> expression . INCREMENTONE
    (83) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 76 (valor -> expression .)
    LINEBREAK       reduce using rule 76 (valor -> expression .)
    $end            reduce using rule 76 (valor -> expression .)
    RCURL           reduce using rule 76 (valor -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 140

    (149) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 149 (stack_actuar -> ID DOT stack_funciones .)
    LINEBREAK       reduce using rule 149 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 149 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 149 (stack_actuar -> ID DOT stack_funciones .)


state 141

    (168) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 168 (lsimplem -> ID DOT Lmetod .)
    LINEBREAK       reduce using rule 168 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 168 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 168 (lsimplem -> ID DOT Lmetod .)


state 142

    (169) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 169 (lcomp -> ID DOT Cmetod .)
    LINEBREAK       reduce using rule 169 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 169 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 169 (lcomp -> ID DOT Cmetod .)


state 143

    (33) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 214


state 144

    (34) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (158) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 215


state 145

    (36) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 216


state 146

    (35) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 217


state 147

    (150) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 150 (stack_funciones -> stack_isEmpty .)
    LINEBREAK       reduce using rule 150 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 150 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 150 (stack_funciones -> stack_isEmpty .)


state 148

    (151) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 151 (stack_funciones -> stack_push .)
    LINEBREAK       reduce using rule 151 (stack_funciones -> stack_push .)
    $end            reduce using rule 151 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 151 (stack_funciones -> stack_push .)


state 149

    (152) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 152 (stack_funciones -> stack_pop .)
    LINEBREAK       reduce using rule 152 (stack_funciones -> stack_pop .)
    $end            reduce using rule 152 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 152 (stack_funciones -> stack_pop .)


state 150

    (153) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 153 (stack_funciones -> stack_peek .)
    LINEBREAK       reduce using rule 153 (stack_funciones -> stack_peek .)
    $end            reduce using rule 153 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 153 (stack_funciones -> stack_peek .)


state 151

    (154) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 154 (stack_funciones -> stack_size .)
    LINEBREAK       reduce using rule 154 (stack_funciones -> stack_size .)
    $end            reduce using rule 154 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 154 (stack_funciones -> stack_size .)


state 152

    (160) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 218


state 153

    (161) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 219


state 154

    (162) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 220


state 155

    (163) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 221


state 156

    (164) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 222


state 157

    (165) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 223


state 158

    (155) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 224


state 159

    (157) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 225


state 160

    (156) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 226


state 161

    (159) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 227


state 162

    (146) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (167) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (49) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (51) tipoDatoEspecifico -> . tipoEntero
    (52) tipoDatoEspecifico -> . tipoLong
    (53) tipoDatoEspecifico -> . tipoFloat
    (54) tipoDatoEspecifico -> . tipoBoolean
    (55) tipoDatoEspecifico -> . tipoChar
    (56) tipoDatoEspecifico -> . tipoString
    (57) tipoEntero -> . TINT EQUAL INT
    (58) tipoEntero -> . TINT EQUAL error
    (59) tipoLong -> . TLONG EQUAL LONG
    (60) tipoLong -> . TLONG EQUAL error
    (61) tipoFloat -> . TFLOAT EQUAL FLOAT
    (62) tipoFloat -> . TFLOAT EQUAL error
    (63) tipoBoolean -> . TBOOLEAN EQUAL BOOLEAN
    (64) tipoBoolean -> . TBOOLEAN EQUAL error
    (65) tipoChar -> . TCHAR EQUAL CHAR
    (66) tipoChar -> . TCHAR EQUAL error
    (67) tipoString -> . TSTRING EQUAL STRING_1
    (68) tipoString -> . TSTRING EQUAL error

    LINKEDL         shift and go to state 229
    STACK           shift and go to state 52
    TINT            shift and go to state 132
    TLONG           shift and go to state 133
    TFLOAT          shift and go to state 134
    TBOOLEAN        shift and go to state 135
    TCHAR           shift and go to state 136
    TSTRING         shift and go to state 137

    def_estruct_tipoDato           shift and go to state 228
    tipoDatoEspecifico             shift and go to state 125
    tipoEntero                     shift and go to state 126
    tipoLong                       shift and go to state 127
    tipoFloat                      shift and go to state 128
    tipoBoolean                    shift and go to state 129
    tipoChar                       shift and go to state 130
    tipoString                     shift and go to state 131

state 163

    (41) for -> FOR LPAREN ID . IN iterable RPAREN LCURL lineorBreak RCURL

    IN              shift and go to state 230


state 164

    (101) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL
    (102) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL else

    RPAREN          shift and go to state 231


state 165

    (107) condicionL -> BOOLEAN . opL BOOLEAN
    (110) condicionL -> BOOLEAN . opL ID
    (135) opL -> . CONJ
    (136) opL -> . DISJ

    CONJ            shift and go to state 78
    DISJ            shift and go to state 79

    opL                            shift and go to state 95

state 166

    (108) condicionL -> ID . opL ID
    (109) condicionL -> ID . opL BOOLEAN
    (127) condicionR -> ID . opR ID
    (128) condicionR -> ID . opR INT
    (129) condicionR -> ID . opR FLOAT
    (130) condicionR -> ID . opR LONG
    (131) condicionR -> ID . opR STRING_1
    (132) condicionR -> ID . opR CHAR
    (135) opL -> . CONJ
    (136) opL -> . DISJ
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    CONJ            shift and go to state 78
    DISJ            shift and go to state 79
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opL                            shift and go to state 73
    opR                            shift and go to state 74

state 167

    (111) condicionR -> INT . opR INT
    (112) condicionR -> INT . opR FLOAT
    (113) condicionR -> INT . opR LONG
    (114) condicionR -> INT . opR ID
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 94

state 168

    (115) condicionR -> FLOAT . opR FLOAT
    (116) condicionR -> FLOAT . opR INT
    (117) condicionR -> FLOAT . opR LONG
    (118) condicionR -> FLOAT . opR ID
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 96

state 169

    (119) condicionR -> LONG . opR LONG
    (120) condicionR -> LONG . opR INT
    (121) condicionR -> LONG . opR FLOAT
    (122) condicionR -> LONG . opR ID
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 97

state 170

    (123) condicionR -> STRING_1 . opR STRING_1
    (124) condicionR -> STRING_1 . opR ID
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 98

state 171

    (125) condicionR -> CHAR . opR CHAR
    (126) condicionR -> CHAR . opR ID
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 99

state 172

    (166) while -> WHILE LPAREN ID . opR INT RPAREN LCURL lineorBreak RCURL
    (137) opR -> . LANGLE
    (138) opR -> . RANGLE
    (139) opR -> . LE
    (140) opR -> . GE
    (141) opR -> . EXCL_EQ
    (142) opR -> . EXCL_EQEQ
    (143) opR -> . AS_SAFE
    (144) opR -> . EQEQ
    (145) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 232

state 173

    (111) condicionR -> INT opR INT .

    SEMICOLON       reduce using rule 111 (condicionR -> INT opR INT .)
    LINEBREAK       reduce using rule 111 (condicionR -> INT opR INT .)
    $end            reduce using rule 111 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 111 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 111 (condicionR -> INT opR INT .)


state 174

    (112) condicionR -> INT opR FLOAT .

    SEMICOLON       reduce using rule 112 (condicionR -> INT opR FLOAT .)
    LINEBREAK       reduce using rule 112 (condicionR -> INT opR FLOAT .)
    $end            reduce using rule 112 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 112 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 112 (condicionR -> INT opR FLOAT .)


state 175

    (113) condicionR -> INT opR LONG .

    SEMICOLON       reduce using rule 113 (condicionR -> INT opR LONG .)
    LINEBREAK       reduce using rule 113 (condicionR -> INT opR LONG .)
    $end            reduce using rule 113 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 113 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 113 (condicionR -> INT opR LONG .)


state 176

    (114) condicionR -> INT opR ID .

    SEMICOLON       reduce using rule 114 (condicionR -> INT opR ID .)
    LINEBREAK       reduce using rule 114 (condicionR -> INT opR ID .)
    $end            reduce using rule 114 (condicionR -> INT opR ID .)
    RCURL           reduce using rule 114 (condicionR -> INT opR ID .)
    RPAREN          reduce using rule 114 (condicionR -> INT opR ID .)


state 177

    (107) condicionL -> BOOLEAN opL BOOLEAN .

    SEMICOLON       reduce using rule 107 (condicionL -> BOOLEAN opL BOOLEAN .)
    LINEBREAK       reduce using rule 107 (condicionL -> BOOLEAN opL BOOLEAN .)
    $end            reduce using rule 107 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 107 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 107 (condicionL -> BOOLEAN opL BOOLEAN .)


state 178

    (110) condicionL -> BOOLEAN opL ID .

    SEMICOLON       reduce using rule 110 (condicionL -> BOOLEAN opL ID .)
    LINEBREAK       reduce using rule 110 (condicionL -> BOOLEAN opL ID .)
    $end            reduce using rule 110 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 110 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 110 (condicionL -> BOOLEAN opL ID .)


state 179

    (115) condicionR -> FLOAT opR FLOAT .

    SEMICOLON       reduce using rule 115 (condicionR -> FLOAT opR FLOAT .)
    LINEBREAK       reduce using rule 115 (condicionR -> FLOAT opR FLOAT .)
    $end            reduce using rule 115 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 115 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 115 (condicionR -> FLOAT opR FLOAT .)


state 180

    (116) condicionR -> FLOAT opR INT .

    SEMICOLON       reduce using rule 116 (condicionR -> FLOAT opR INT .)
    LINEBREAK       reduce using rule 116 (condicionR -> FLOAT opR INT .)
    $end            reduce using rule 116 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 116 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 116 (condicionR -> FLOAT opR INT .)


state 181

    (117) condicionR -> FLOAT opR LONG .

    SEMICOLON       reduce using rule 117 (condicionR -> FLOAT opR LONG .)
    LINEBREAK       reduce using rule 117 (condicionR -> FLOAT opR LONG .)
    $end            reduce using rule 117 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 117 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 117 (condicionR -> FLOAT opR LONG .)


state 182

    (118) condicionR -> FLOAT opR ID .

    SEMICOLON       reduce using rule 118 (condicionR -> FLOAT opR ID .)
    LINEBREAK       reduce using rule 118 (condicionR -> FLOAT opR ID .)
    $end            reduce using rule 118 (condicionR -> FLOAT opR ID .)
    RCURL           reduce using rule 118 (condicionR -> FLOAT opR ID .)
    RPAREN          reduce using rule 118 (condicionR -> FLOAT opR ID .)


state 183

    (119) condicionR -> LONG opR LONG .

    SEMICOLON       reduce using rule 119 (condicionR -> LONG opR LONG .)
    LINEBREAK       reduce using rule 119 (condicionR -> LONG opR LONG .)
    $end            reduce using rule 119 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 119 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 119 (condicionR -> LONG opR LONG .)


state 184

    (120) condicionR -> LONG opR INT .

    SEMICOLON       reduce using rule 120 (condicionR -> LONG opR INT .)
    LINEBREAK       reduce using rule 120 (condicionR -> LONG opR INT .)
    $end            reduce using rule 120 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 120 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 120 (condicionR -> LONG opR INT .)


state 185

    (121) condicionR -> LONG opR FLOAT .

    SEMICOLON       reduce using rule 121 (condicionR -> LONG opR FLOAT .)
    LINEBREAK       reduce using rule 121 (condicionR -> LONG opR FLOAT .)
    $end            reduce using rule 121 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 121 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 121 (condicionR -> LONG opR FLOAT .)


state 186

    (122) condicionR -> LONG opR ID .

    SEMICOLON       reduce using rule 122 (condicionR -> LONG opR ID .)
    LINEBREAK       reduce using rule 122 (condicionR -> LONG opR ID .)
    $end            reduce using rule 122 (condicionR -> LONG opR ID .)
    RCURL           reduce using rule 122 (condicionR -> LONG opR ID .)
    RPAREN          reduce using rule 122 (condicionR -> LONG opR ID .)


state 187

    (123) condicionR -> STRING_1 opR STRING_1 .

    SEMICOLON       reduce using rule 123 (condicionR -> STRING_1 opR STRING_1 .)
    LINEBREAK       reduce using rule 123 (condicionR -> STRING_1 opR STRING_1 .)
    $end            reduce using rule 123 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 123 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 123 (condicionR -> STRING_1 opR STRING_1 .)


state 188

    (124) condicionR -> STRING_1 opR ID .

    SEMICOLON       reduce using rule 124 (condicionR -> STRING_1 opR ID .)
    LINEBREAK       reduce using rule 124 (condicionR -> STRING_1 opR ID .)
    $end            reduce using rule 124 (condicionR -> STRING_1 opR ID .)
    RCURL           reduce using rule 124 (condicionR -> STRING_1 opR ID .)
    RPAREN          reduce using rule 124 (condicionR -> STRING_1 opR ID .)


state 189

    (125) condicionR -> CHAR opR CHAR .

    SEMICOLON       reduce using rule 125 (condicionR -> CHAR opR CHAR .)
    LINEBREAK       reduce using rule 125 (condicionR -> CHAR opR CHAR .)
    $end            reduce using rule 125 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 125 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 125 (condicionR -> CHAR opR CHAR .)


state 190

    (126) condicionR -> CHAR opR ID .

    SEMICOLON       reduce using rule 126 (condicionR -> CHAR opR ID .)
    LINEBREAK       reduce using rule 126 (condicionR -> CHAR opR ID .)
    $end            reduce using rule 126 (condicionR -> CHAR opR ID .)
    RCURL           reduce using rule 126 (condicionR -> CHAR opR ID .)
    RPAREN          reduce using rule 126 (condicionR -> CHAR opR ID .)


state 191

    (40) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 233


state 192

    (148) instance_linkedlist -> LINKEDL LPAREN RPAREN .

    SEMICOLON       reduce using rule 148 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 148 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    $end            reduce using rule 148 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    RCURL           reduce using rule 148 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)


state 193

    (147) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 234


state 194

    (69) tipoDato -> TINT .

    RANGLE          reduce using rule 69 (tipoDato -> TINT .)


state 195

    (70) tipoDato -> TLONG .

    RANGLE          reduce using rule 70 (tipoDato -> TLONG .)


state 196

    (71) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 71 (tipoDato -> TFLOAT .)


state 197

    (72) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 72 (tipoDato -> TDOUBLE .)


state 198

    (73) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 73 (tipoDato -> TBOOLEAN .)


state 199

    (74) tipoDato -> TCHAR .

    RANGLE          reduce using rule 74 (tipoDato -> TCHAR .)


state 200

    (75) tipoDato -> TSTRING .

    RANGLE          reduce using rule 75 (tipoDato -> TSTRING .)


state 201

    (7) line -> blocks SEMICOLON LINEBREAK line .
    (8) line -> blocks SEMICOLON LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    RCURL           reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    LINEBREAK       shift and go to state 235

  ! LINEBREAK       [ reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .) ]


state 202

    (5) line -> blocks LINEBREAK line LINEBREAK .

    $end            reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)


state 203

    (37) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)


state 204

    (39) impresion -> PRINT LPAREN error RPAREN .

    SEMICOLON       reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)
    LINEBREAK       reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)
    $end            reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)
    RCURL           reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)


state 205

    (38) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 206

    (95) funcion -> FUN ID LPAREN ID . RPAREN LCURL lineorBreak RCURL
    (96) funcion -> FUN ID LPAREN ID . RPAREN LCURL RCURL

    RPAREN          shift and go to state 236


state 207

    (94) funcion -> FUN ID LPAREN RPAREN . LCURL lineorBreak RCURL
    (97) funcion -> FUN ID LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 237


state 208

    (57) tipoEntero -> TINT EQUAL . INT
    (58) tipoEntero -> TINT EQUAL . error

    INT             shift and go to state 238
    error           shift and go to state 239


state 209

    (59) tipoLong -> TLONG EQUAL . LONG
    (60) tipoLong -> TLONG EQUAL . error

    LONG            shift and go to state 240
    error           shift and go to state 241


state 210

    (61) tipoFloat -> TFLOAT EQUAL . FLOAT
    (62) tipoFloat -> TFLOAT EQUAL . error

    FLOAT           shift and go to state 242
    error           shift and go to state 243


state 211

    (63) tipoBoolean -> TBOOLEAN EQUAL . BOOLEAN
    (64) tipoBoolean -> TBOOLEAN EQUAL . error

    BOOLEAN         shift and go to state 244
    error           shift and go to state 245


state 212

    (65) tipoChar -> TCHAR EQUAL . CHAR
    (66) tipoChar -> TCHAR EQUAL . error

    CHAR            shift and go to state 246
    error           shift and go to state 247


state 213

    (67) tipoString -> TSTRING EQUAL . STRING_1
    (68) tipoString -> TSTRING EQUAL . error

    STRING_1        shift and go to state 248
    error           shift and go to state 249


state 214

    (33) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 250

state 215

    (34) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (158) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 251


state 216

    (36) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 252


state 217

    (35) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 253


state 218

    (160) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 254


state 219

    (161) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 255


state 220

    (162) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 256


state 221

    (163) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 257


state 222

    (164) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 258


state 223

    (165) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 259


state 224

    (155) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 260


state 225

    (157) stack_push -> PUSH LPAREN . factor RPAREN
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 261

state 226

    (156) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 262


state 227

    (159) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 263


state 228

    (146) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 264


state 229

    (167) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 265


state 230

    (41) for -> FOR LPAREN ID IN . iterable RPAREN LCURL lineorBreak RCURL
    (42) iterable -> . ID
    (43) iterable -> . INT THREEDOTS INT
    (44) iterable -> . ID DOT INDICES

    ID              shift and go to state 266
    INT             shift and go to state 268

    iterable                       shift and go to state 267

state 231

    (101) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL
    (102) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL else

    LCURL           shift and go to state 269


state 232

    (166) while -> WHILE LPAREN ID opR . INT RPAREN LCURL lineorBreak RCURL

    INT             shift and go to state 270


state 233

    (40) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 271


state 234

    (147) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 147 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LINEBREAK       reduce using rule 147 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 147 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 147 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 147 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 235

    (8) line -> blocks SEMICOLON LINEBREAK line LINEBREAK .

    $end            reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)


state 236

    (95) funcion -> FUN ID LPAREN ID RPAREN . LCURL lineorBreak RCURL
    (96) funcion -> FUN ID LPAREN ID RPAREN . LCURL RCURL

    LCURL           shift and go to state 272


state 237

    (94) funcion -> FUN ID LPAREN RPAREN LCURL . lineorBreak RCURL
    (97) funcion -> FUN ID LPAREN RPAREN LCURL . RCURL
    (98) lineorBreak -> . line
    (99) lineorBreak -> . LINEBREAK line LINEBREAK
    (100) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 274
    LINEBREAK       shift and go to state 276
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 273
    line                           shift and go to state 275
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 238

    (57) tipoEntero -> TINT EQUAL INT .

    SEMICOLON       reduce using rule 57 (tipoEntero -> TINT EQUAL INT .)
    LINEBREAK       reduce using rule 57 (tipoEntero -> TINT EQUAL INT .)
    $end            reduce using rule 57 (tipoEntero -> TINT EQUAL INT .)
    RCURL           reduce using rule 57 (tipoEntero -> TINT EQUAL INT .)


state 239

    (58) tipoEntero -> TINT EQUAL error .

    SEMICOLON       reduce using rule 58 (tipoEntero -> TINT EQUAL error .)
    LINEBREAK       reduce using rule 58 (tipoEntero -> TINT EQUAL error .)
    $end            reduce using rule 58 (tipoEntero -> TINT EQUAL error .)
    RCURL           reduce using rule 58 (tipoEntero -> TINT EQUAL error .)


state 240

    (59) tipoLong -> TLONG EQUAL LONG .

    SEMICOLON       reduce using rule 59 (tipoLong -> TLONG EQUAL LONG .)
    LINEBREAK       reduce using rule 59 (tipoLong -> TLONG EQUAL LONG .)
    $end            reduce using rule 59 (tipoLong -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 59 (tipoLong -> TLONG EQUAL LONG .)


state 241

    (60) tipoLong -> TLONG EQUAL error .

    SEMICOLON       reduce using rule 60 (tipoLong -> TLONG EQUAL error .)
    LINEBREAK       reduce using rule 60 (tipoLong -> TLONG EQUAL error .)
    $end            reduce using rule 60 (tipoLong -> TLONG EQUAL error .)
    RCURL           reduce using rule 60 (tipoLong -> TLONG EQUAL error .)


state 242

    (61) tipoFloat -> TFLOAT EQUAL FLOAT .

    SEMICOLON       reduce using rule 61 (tipoFloat -> TFLOAT EQUAL FLOAT .)
    LINEBREAK       reduce using rule 61 (tipoFloat -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 61 (tipoFloat -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 61 (tipoFloat -> TFLOAT EQUAL FLOAT .)


state 243

    (62) tipoFloat -> TFLOAT EQUAL error .

    SEMICOLON       reduce using rule 62 (tipoFloat -> TFLOAT EQUAL error .)
    LINEBREAK       reduce using rule 62 (tipoFloat -> TFLOAT EQUAL error .)
    $end            reduce using rule 62 (tipoFloat -> TFLOAT EQUAL error .)
    RCURL           reduce using rule 62 (tipoFloat -> TFLOAT EQUAL error .)


state 244

    (63) tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .

    SEMICOLON       reduce using rule 63 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)
    LINEBREAK       reduce using rule 63 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 63 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 63 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)


state 245

    (64) tipoBoolean -> TBOOLEAN EQUAL error .

    SEMICOLON       reduce using rule 64 (tipoBoolean -> TBOOLEAN EQUAL error .)
    LINEBREAK       reduce using rule 64 (tipoBoolean -> TBOOLEAN EQUAL error .)
    $end            reduce using rule 64 (tipoBoolean -> TBOOLEAN EQUAL error .)
    RCURL           reduce using rule 64 (tipoBoolean -> TBOOLEAN EQUAL error .)


state 246

    (65) tipoChar -> TCHAR EQUAL CHAR .

    SEMICOLON       reduce using rule 65 (tipoChar -> TCHAR EQUAL CHAR .)
    LINEBREAK       reduce using rule 65 (tipoChar -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 65 (tipoChar -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 65 (tipoChar -> TCHAR EQUAL CHAR .)


state 247

    (66) tipoChar -> TCHAR EQUAL error .

    SEMICOLON       reduce using rule 66 (tipoChar -> TCHAR EQUAL error .)
    LINEBREAK       reduce using rule 66 (tipoChar -> TCHAR EQUAL error .)
    $end            reduce using rule 66 (tipoChar -> TCHAR EQUAL error .)
    RCURL           reduce using rule 66 (tipoChar -> TCHAR EQUAL error .)


state 248

    (67) tipoString -> TSTRING EQUAL STRING_1 .

    SEMICOLON       reduce using rule 67 (tipoString -> TSTRING EQUAL STRING_1 .)
    LINEBREAK       reduce using rule 67 (tipoString -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 67 (tipoString -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 67 (tipoString -> TSTRING EQUAL STRING_1 .)


state 249

    (68) tipoString -> TSTRING EQUAL error .

    SEMICOLON       reduce using rule 68 (tipoString -> TSTRING EQUAL error .)
    LINEBREAK       reduce using rule 68 (tipoString -> TSTRING EQUAL error .)
    $end            reduce using rule 68 (tipoString -> TSTRING EQUAL error .)
    RCURL           reduce using rule 68 (tipoString -> TSTRING EQUAL error .)


state 250

    (33) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 277


state 251

    (34) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (158) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LINEBREAK resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINEBREAK       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 158 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LINEBREAK       [ reduce using rule 158 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 158 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 158 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 252

    (36) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 253

    (35) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 254

    (160) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 160 (Lmetod -> FIRST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 160 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 160 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 160 (Lmetod -> FIRST LPAREN RPAREN .)


state 255

    (161) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 161 (Lmetod -> LAST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 161 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 161 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 161 (Lmetod -> LAST LPAREN RPAREN .)


state 256

    (162) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 162 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 162 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 162 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 162 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 257

    (163) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 278


state 258

    (164) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 279


state 259

    (165) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 280


state 260

    (155) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 155 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LINEBREAK       reduce using rule 155 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 155 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 155 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 261

    (157) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 281


state 262

    (156) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 156 (stack_pop -> POP LPAREN RPAREN .)
    LINEBREAK       reduce using rule 156 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 156 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 156 (stack_pop -> POP LPAREN RPAREN .)


state 263

    (159) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 159 (stack_size -> SIZE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 159 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 159 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 159 (stack_size -> SIZE LPAREN RPAREN .)


state 264

    (146) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN

    LINKEDL         shift and go to state 47

    instance_linkedlist            shift and go to state 282

state 265

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 283


state 266

    (42) iterable -> ID .
    (44) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 42 (iterable -> ID .)
    DOT             shift and go to state 284


state 267

    (41) for -> FOR LPAREN ID IN iterable . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 285


state 268

    (43) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 286


state 269

    (101) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL
    (102) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL else
    (98) lineorBreak -> . line
    (99) lineorBreak -> . LINEBREAK line LINEBREAK
    (100) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 276
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    condicion                      shift and go to state 7
    lineorBreak                    shift and go to state 287
    line                           shift and go to state 275
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 270

    (166) while -> WHILE LPAREN ID opR INT . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 288


state 271

    (40) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (69) tipoDato -> . TINT
    (70) tipoDato -> . TLONG
    (71) tipoDato -> . TFLOAT
    (72) tipoDato -> . TDOUBLE
    (73) tipoDato -> . TBOOLEAN
    (74) tipoDato -> . TCHAR
    (75) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 289

state 272

    (95) funcion -> FUN ID LPAREN ID RPAREN LCURL . lineorBreak RCURL
    (96) funcion -> FUN ID LPAREN ID RPAREN LCURL . RCURL
    (98) lineorBreak -> . line
    (99) lineorBreak -> . LINEBREAK line LINEBREAK
    (100) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 291
    LINEBREAK       shift and go to state 276
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 290
    line                           shift and go to state 275
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 273

    (94) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 292


state 274

    (97) funcion -> FUN ID LPAREN RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 97 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 97 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    $end            reduce using rule 97 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    RCURL           reduce using rule 97 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)


state 275

    (98) lineorBreak -> line .

    RCURL           reduce using rule 98 (lineorBreak -> line .)


state 276

    (99) lineorBreak -> LINEBREAK . line LINEBREAK
    (100) lineorBreak -> LINEBREAK . line
    (9) line -> LINEBREAK .
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 277

    (33) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 278

    (163) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 163 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 163 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 163 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 163 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 279

    (164) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 164 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 164 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 164 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 164 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 280

    (165) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 165 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LINEBREAK       reduce using rule 165 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 165 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 165 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 281

    (157) stack_push -> PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 157 (stack_push -> PUSH LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 157 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 157 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 157 (stack_push -> PUSH LPAREN factor RPAREN .)


state 282

    (146) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    SEMICOLON       reduce using rule 146 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LINEBREAK       reduce using rule 146 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 146 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 146 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 283

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 294


state 284

    (44) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 295


state 285

    (41) for -> FOR LPAREN ID IN iterable RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 296


state 286

    (43) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 297


state 287

    (101) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL
    (102) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL else

    RCURL           shift and go to state 298


state 288

    (166) while -> WHILE LPAREN ID opR INT RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 299


state 289

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 300


state 290

    (95) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 301


state 291

    (96) funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 96 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 96 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    $end            reduce using rule 96 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    RCURL           reduce using rule 96 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)


state 292

    (94) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 94 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 94 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 94 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 94 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)


state 293

    (99) lineorBreak -> LINEBREAK line . LINEBREAK
    (100) lineorBreak -> LINEBREAK line .

    LINEBREAK       shift and go to state 302
    RCURL           reduce using rule 100 (lineorBreak -> LINEBREAK line .)


state 294

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 303


state 295

    (44) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 44 (iterable -> ID DOT INDICES .)


state 296

    (41) for -> FOR LPAREN ID IN iterable RPAREN LCURL . lineorBreak RCURL
    (98) lineorBreak -> . line
    (99) lineorBreak -> . LINEBREAK line LINEBREAK
    (100) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 276
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 304
    line                           shift and go to state 275
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 297

    (43) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 43 (iterable -> INT THREEDOTS INT .)


state 298

    (101) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .
    (102) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL . else
    (103) else -> . ELSE LCURL lineorBreak RCURL

    SEMICOLON       reduce using rule 101 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 101 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 101 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 101 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    ELSE            shift and go to state 306

    else                           shift and go to state 305

state 299

    (166) while -> WHILE LPAREN ID opR INT RPAREN LCURL . lineorBreak RCURL
    (98) lineorBreak -> . line
    (99) lineorBreak -> . LINEBREAK line LINEBREAK
    (100) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 276
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 307
    line                           shift and go to state 275
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 300

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 308


state 301

    (95) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 95 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 95 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 95 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 95 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)


state 302

    (99) lineorBreak -> LINEBREAK line LINEBREAK .

    RCURL           reduce using rule 99 (lineorBreak -> LINEBREAK line LINEBREAK .)


state 303

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 309


state 304

    (41) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 310


state 305

    (102) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .

    SEMICOLON       reduce using rule 102 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    LINEBREAK       reduce using rule 102 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    $end            reduce using rule 102 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    RCURL           reduce using rule 102 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)


state 306

    (103) else -> ELSE . LCURL lineorBreak RCURL

    LCURL           shift and go to state 311


state 307

    (166) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 312


state 308

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 313


state 309

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 314


state 310

    (41) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)


state 311

    (103) else -> ELSE LCURL . lineorBreak RCURL
    (98) lineorBreak -> . line
    (99) lineorBreak -> . LINEBREAK line LINEBREAK
    (100) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (77) expression -> . expression PLUS term
    (78) expression -> . expression MINUS term
    (79) expression -> . expression TIMES term
    (80) expression -> . expression DIVIDE term
    (81) expression -> . expression MOD term
    (82) expression -> . expression INCREMENTONE
    (83) expression -> . expression DECREMENTONE
    (84) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (104) condicion -> . condicionL
    (105) condicion -> . condicionR
    (106) condicion -> . condicionN
    (94) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (95) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (96) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (97) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (85) term -> . factor
    (86) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (101) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (102) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (166) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (107) condicionL -> . BOOLEAN opL BOOLEAN
    (108) condicionL -> . ID opL ID
    (109) condicionL -> . ID opL BOOLEAN
    (110) condicionL -> . BOOLEAN opL ID
    (111) condicionR -> . INT opR INT
    (112) condicionR -> . INT opR FLOAT
    (113) condicionR -> . INT opR LONG
    (114) condicionR -> . INT opR ID
    (115) condicionR -> . FLOAT opR FLOAT
    (116) condicionR -> . FLOAT opR INT
    (117) condicionR -> . FLOAT opR LONG
    (118) condicionR -> . FLOAT opR ID
    (119) condicionR -> . LONG opR LONG
    (120) condicionR -> . LONG opR INT
    (121) condicionR -> . LONG opR FLOAT
    (122) condicionR -> . LONG opR ID
    (123) condicionR -> . STRING_1 opR STRING_1
    (124) condicionR -> . STRING_1 opR ID
    (125) condicionR -> . CHAR opR CHAR
    (126) condicionR -> . CHAR opR ID
    (127) condicionR -> . ID opR ID
    (128) condicionR -> . ID opR INT
    (129) condicionR -> . ID opR FLOAT
    (130) condicionR -> . ID opR LONG
    (131) condicionR -> . ID opR STRING_1
    (132) condicionR -> . ID opR CHAR
    (133) condicionN -> . EXCL_WS BOOLEAN
    (134) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (146) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (149) stack_actuar -> . ID DOT stack_funciones
    (148) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (147) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (167) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (168) lsimplem -> . ID DOT Lmetod
    (169) lcomp -> . ID DOT Cmetod
    (87) factor -> . INT
    (88) factor -> . FLOAT
    (89) factor -> . LONG
    (90) factor -> . CHAR
    (91) factor -> . BOOLEAN
    (92) factor -> . ID
    (93) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 276
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 315
    line                           shift and go to state 275
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 312

    (166) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 166 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 166 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 166 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 166 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)


state 313

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 316


state 314

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 317


state 315

    (103) else -> ELSE LCURL lineorBreak . RCURL

    RCURL           shift and go to state 318


state 316

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (69) tipoDato -> . TINT
    (70) tipoDato -> . TLONG
    (71) tipoDato -> . TFLOAT
    (72) tipoDato -> . TDOUBLE
    (73) tipoDato -> . TBOOLEAN
    (74) tipoDato -> . TCHAR
    (75) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 319

state 317

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 320


state 318

    (103) else -> ELSE LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 103 (else -> ELSE LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 103 (else -> ELSE LCURL lineorBreak RCURL .)
    $end            reduce using rule 103 (else -> ELSE LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 103 (else -> ELSE LCURL lineorBreak RCURL .)


state 319

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 321


state 320

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 322


state 321

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 323


state 322

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 324


state 323

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 325


state 324

    (167) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 167 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 167 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 167 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 167 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 325

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINEBREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 53 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 54 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 105 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 106 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 201 resolved as shift
WARNING: reduce/reduce conflict in state 251 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 251
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    FUN
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LINEBREAK
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> lineas
Rule 2     line -> expression
Rule 3     line -> estructurasControl
Rule 4     line -> condicion
Rule 5     blocks -> impresion
Rule 6     blocks -> asignacion
Rule 7     blocks -> estructurasDatos
Rule 8     lineas -> blocks
Rule 9     lineas -> blocks SEMICOLON
Rule 10    estructurasDatos -> queue
Rule 11    estructurasDatos -> queue_operations
Rule 12    estructurasDatos -> stack
Rule 13    estructurasDatos -> stack_actuar
Rule 14    estructurasDatos -> instance_arraylist
Rule 15    estructurasDatos -> def_estruct_tipoDato
Rule 16    estructurasDatos -> lista
Rule 17    estructurasDatos -> lsimplem
Rule 18    estructurasDatos -> lcomp
Rule 19    estructurasDatos -> <empty>
Rule 20    estructurasControl -> for
Rule 21    estructurasControl -> if
Rule 22    estructurasControl -> while
Rule 23    queue_operations -> queue_add
Rule 24    queue_operations -> queue_peek
Rule 25    queue_operations -> queue_remove
Rule 26    queue_operations -> queue_poll
Rule 27    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 28    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 29    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 30    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 31    impresion -> PRINT LPAREN expression RPAREN
Rule 32    impresion -> PRINTLN LPAREN expression RPAREN
Rule 33    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 34    for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
Rule 35    iterable -> ID
Rule 36    iterable -> INT THREEDOTS INT
Rule 37    iterable -> ID DOT INDICES
Rule 38    morelines -> line
Rule 39    morelines -> line morelines
Rule 40    asignacion -> keywordVariables asignacionSimple
Rule 41    asignacion -> asignacionSimple
Rule 42    keywordVariables -> VAR
Rule 43    keywordVariables -> VAL
Rule 44    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 45    asignacionSimple -> ID EQUAL valor
Rule 46    tipoDatoEspecifico -> TINT EQUAL INT
Rule 47    tipoDatoEspecifico -> TLONG EQUAL LONG
Rule 48    tipoDatoEspecifico -> TFLOAT EQUAL FLOAT
Rule 49    tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN
Rule 50    tipoDatoEspecifico -> TCHAR EQUAL CHAR
Rule 51    tipoDatoEspecifico -> TSTRING EQUAL STRING_1
Rule 52    tipoDato -> TINT
Rule 53    tipoDato -> TLONG
Rule 54    tipoDato -> TFLOAT
Rule 55    tipoDato -> TDOUBLE
Rule 56    tipoDato -> TBOOLEAN
Rule 57    tipoDato -> TCHAR
Rule 58    tipoDato -> TSTRING
Rule 59    valor -> expression
Rule 60    expression -> expression PLUS term
Rule 61    expression -> expression MINUS term
Rule 62    expression -> expression TIMES term
Rule 63    expression -> expression DIVIDE term
Rule 64    expression -> expression MOD term
Rule 65    expression -> expression INCREMENTONE
Rule 66    expression -> expression DECREMENTONE
Rule 67    expression -> term
Rule 68    term -> factor
Rule 69    term -> LPAREN expression RPAREN
Rule 70    factor -> INT
Rule 71    factor -> FLOAT
Rule 72    factor -> LONG
Rule 73    factor -> CHAR
Rule 74    factor -> BOOLEAN
Rule 75    factor -> ID
Rule 76    factor -> STRING_1
Rule 77    if -> IF LPAREN condicion RPAREN LCURL morelines RCURL
Rule 78    if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else
Rule 79    else -> ELSE LCURL line RCURL
Rule 80    condicion -> condicionL
Rule 81    condicion -> condicionR
Rule 82    condicion -> condicionN
Rule 83    condicionL -> term opL term
Rule 84    condicionR -> term opR term
Rule 85    condicionN -> EXCL_WS term
Rule 86    opL -> CONJ
Rule 87    opL -> DISJ
Rule 88    opR -> LANGLE
Rule 89    opR -> RANGLE
Rule 90    opR -> LE
Rule 91    opR -> GE
Rule 92    opR -> EXCL_EQ
Rule 93    opR -> EXCL_EQEQ
Rule 94    opR -> AS_SAFE
Rule 95    opR -> EQEQ
Rule 96    opR -> EQEQEQ
Rule 97    stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
Rule 98    def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 99    instance_arraylist -> ARRAYLIST LPAREN RPAREN
Rule 100   stack_actuar -> ID DOT stack_funciones
Rule 101   stack_funciones -> stack_isEmpty
Rule 102   stack_funciones -> stack_push
Rule 103   stack_funciones -> stack_pop
Rule 104   stack_funciones -> stack_peek
Rule 105   stack_funciones -> stack_size
Rule 106   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 107   stack_pop -> POP LPAREN RPAREN
Rule 108   stack_push -> PUSH LPAREN ID RPAREN
Rule 109   stack_peek -> PEEK LPAREN RPAREN
Rule 110   stack_size -> SIZE LPAREN RPAREN
Rule 111   Lmetod -> FIRST LPAREN RPAREN
Rule 112   Lmetod -> LAST LPAREN RPAREN
Rule 113   Lmetod -> REMOVEL LPAREN RPAREN
Rule 114   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 115   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 116   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 117   while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
Rule 118   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 119   lsimplem -> ID DOT Lmetod
Rule 120   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 27
ANNOTATION           : 
APPEND               : 114
ARRAYLIST            : 99
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 94
AT_NO_WS             : 
BOOLEAN              : 49 74
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 50 73
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 86
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 66
DISJ                 : 87
DIVIDE               : 63
DIVIDEIN             : 
DO                   : 
DOT                  : 27 28 29 30 37 100 119 120
DOTS                 : 33 44 97 118
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 79
ENUM                 : 
EQEQ                 : 95
EQEQEQ               : 96
EQUAL                : 33 45 46 47 48 49 50 51 97 118
EXCL_EQ              : 92
EXCL_EQEQ            : 93
EXCL_NO_WS           : 
EXCL_WS              : 85
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 111
FLOAT                : 48 71
FOR                  : 34
FUN                  : 
GE                   : 91
GET                  : 
HASH                 : 
ID                   : 27 28 29 30 33 34 35 37 44 45 75 97 100 108 117 118 119 120
IF                   : 77 78
IMPORT               : 
IN                   : 34
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 65
INCREMENTTIMES       : 
INDICES              : 37
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 36 36 46 70 117
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 106
LANGLE               : 33 33 88 98 118 118
LAST                 : 112
LATEINIT             : 
LCURL                : 34 77 78 79 117
LE                   : 90
LINEBREAK            : 
LINKEDL              : 33 118 118
LISTOF               : 
LONG                 : 47 72
LPAREN               : 27 28 29 30 31 32 33 34 69 77 78 99 106 107 108 109 110 111 112 113 114 115 116 117 118
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 61
MOD                  : 64
MODIN                : 
NOINLINE             : 
OBJECT               : 114 115 118 118
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 28 109
PLUS                 : 60
POLL                 : 29
POP                  : 107
PRINT                : 31
PRINTLN              : 32
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 108
QUEST_WS             : 
QUEUE                : 33
RANGE                : 
RANGLE               : 33 33 89 98 118 118
RCURL                : 34 77 78 79 117
RECEIVER             : 
REIFIED              : 
REMOVE               : 30
REMOVEI              : 116
REMOVEL              : 113
REMOVEN              : 115
RETURN               : 
RPAREN               : 27 28 29 30 31 32 33 34 69 77 78 99 106 107 108 109 110 111 112 113 114 115 116 117 118
RSQUARE              : 
SEALED               : 
SEMICOLON            : 9
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 110
STACK                : 98
STRING_1             : 51 76
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 49 56
TCHAR                : 50 57
TDOUBLE              : 55
TEMPLATE             : 
TFLOAT               : 48 54
THIS                 : 
THREEDOTS            : 36
THROW                : 
TIMES                : 62
TINT                 : 46 52 116
TLONG                : 47 53
TRY                  : 
TSTRING              : 51 58
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 33 43
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 42
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 117
error                : 

Nonterminals, with rules where they appear

Cmetod               : 120
Lmetod               : 119
asignacion           : 6
asignacionSimple     : 40 41
blocks               : 8 9
condicion            : 4 77 78
condicionL           : 80
condicionN           : 82
condicionR           : 81
def_estruct_tipoDato : 15 97
else                 : 78
estructurasControl   : 3
estructurasDatos     : 7
expression           : 2 31 32 59 60 61 62 63 64 65 66 69
factor               : 27 68
for                  : 20
if                   : 21
impresion            : 5
instance_arraylist   : 14 97
iterable             : 34
keywordVariables     : 40 97 118
lcomp                : 18
line                 : 38 39 79 0
lineas               : 1
lista                : 16
lsimplem             : 17
morelines            : 34 39 77 78 117
opL                  : 83
opR                  : 84 117
queue                : 10
queue_add            : 23
queue_operations     : 11
queue_peek           : 24
queue_poll           : 26
queue_remove         : 25
stack                : 12
stack_actuar         : 13
stack_funciones      : 100
stack_isEmpty        : 101
stack_peek           : 104
stack_pop            : 103
stack_push           : 102
stack_size           : 105
term                 : 60 61 62 63 64 67 83 83 84 84 85
tipoDato             : 33 33 98
tipoDatoEspecifico   : 44
valor                : 45
while                : 22

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (20) estructurasControl -> . for
    (21) estructurasControl -> . if
    (22) estructurasControl -> . while
    (80) condicion -> . condicionL
    (81) condicion -> . condicionR
    (82) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (34) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (78) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (117) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (83) condicionL -> . term opL term
    (84) condicionR -> . term opR term
    (85) condicionN -> . EXCL_WS term
    (31) impresion -> . PRINT LPAREN expression RPAREN
    (32) impresion -> . PRINTLN LPAREN expression RPAREN
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_arraylist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (19) estructurasDatos -> .
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (33) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (23) queue_operations -> . queue_add
    (24) queue_operations -> . queue_peek
    (25) queue_operations -> . queue_remove
    (26) queue_operations -> . queue_poll
    (97) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (100) stack_actuar -> . ID DOT stack_funciones
    (99) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (98) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (118) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (119) lsimplem -> . ID DOT Lmetod
    (120) lcomp -> . ID DOT Cmetod
    (27) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (28) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (30) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (29) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    EXCL_WS         shift and go to state 24
    PRINT           shift and go to state 25
    PRINTLN         shift and go to state 26
    SEMICOLON       reduce using rule 19 (estructurasDatos -> .)
    $end            reduce using rule 19 (estructurasDatos -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 20
    STRING_1        shift and go to state 42
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    ARRAYLIST       shift and go to state 49
    STACK           shift and go to state 50

    line                           shift and go to state 1
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 27
    asignacionSimple               shift and go to state 28
    queue                          shift and go to state 29
    queue_operations               shift and go to state 30
    stack                          shift and go to state 31
    stack_actuar                   shift and go to state 32
    instance_arraylist             shift and go to state 33
    def_estruct_tipoDato           shift and go to state 34
    lista                          shift and go to state 35
    lsimplem                       shift and go to state 36
    lcomp                          shift and go to state 37
    queue_add                      shift and go to state 45
    queue_peek                     shift and go to state 46
    queue_remove                   shift and go to state 47
    queue_poll                     shift and go to state 48

state 1

    (0) S' -> line .



state 2

    (1) line -> lineas .

    $end            reduce using rule 1 (line -> lineas .)
    LPAREN          reduce using rule 1 (line -> lineas .)
    FOR             reduce using rule 1 (line -> lineas .)
    IF              reduce using rule 1 (line -> lineas .)
    WHILE           reduce using rule 1 (line -> lineas .)
    EXCL_WS         reduce using rule 1 (line -> lineas .)
    PRINT           reduce using rule 1 (line -> lineas .)
    PRINTLN         reduce using rule 1 (line -> lineas .)
    INT             reduce using rule 1 (line -> lineas .)
    FLOAT           reduce using rule 1 (line -> lineas .)
    LONG            reduce using rule 1 (line -> lineas .)
    CHAR            reduce using rule 1 (line -> lineas .)
    BOOLEAN         reduce using rule 1 (line -> lineas .)
    ID              reduce using rule 1 (line -> lineas .)
    STRING_1        reduce using rule 1 (line -> lineas .)
    VAR             reduce using rule 1 (line -> lineas .)
    VAL             reduce using rule 1 (line -> lineas .)
    ARRAYLIST       reduce using rule 1 (line -> lineas .)
    STACK           reduce using rule 1 (line -> lineas .)
    SEMICOLON       reduce using rule 1 (line -> lineas .)
    RCURL           reduce using rule 1 (line -> lineas .)


state 3

    (2) line -> expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    $end            reduce using rule 2 (line -> expression .)
    LPAREN          reduce using rule 2 (line -> expression .)
    FOR             reduce using rule 2 (line -> expression .)
    IF              reduce using rule 2 (line -> expression .)
    WHILE           reduce using rule 2 (line -> expression .)
    EXCL_WS         reduce using rule 2 (line -> expression .)
    PRINT           reduce using rule 2 (line -> expression .)
    PRINTLN         reduce using rule 2 (line -> expression .)
    INT             reduce using rule 2 (line -> expression .)
    FLOAT           reduce using rule 2 (line -> expression .)
    LONG            reduce using rule 2 (line -> expression .)
    CHAR            reduce using rule 2 (line -> expression .)
    BOOLEAN         reduce using rule 2 (line -> expression .)
    ID              reduce using rule 2 (line -> expression .)
    STRING_1        reduce using rule 2 (line -> expression .)
    VAR             reduce using rule 2 (line -> expression .)
    VAL             reduce using rule 2 (line -> expression .)
    ARRAYLIST       reduce using rule 2 (line -> expression .)
    STACK           reduce using rule 2 (line -> expression .)
    SEMICOLON       reduce using rule 2 (line -> expression .)
    RCURL           reduce using rule 2 (line -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 4

    (3) line -> estructurasControl .

    $end            reduce using rule 3 (line -> estructurasControl .)
    LPAREN          reduce using rule 3 (line -> estructurasControl .)
    FOR             reduce using rule 3 (line -> estructurasControl .)
    IF              reduce using rule 3 (line -> estructurasControl .)
    WHILE           reduce using rule 3 (line -> estructurasControl .)
    EXCL_WS         reduce using rule 3 (line -> estructurasControl .)
    PRINT           reduce using rule 3 (line -> estructurasControl .)
    PRINTLN         reduce using rule 3 (line -> estructurasControl .)
    INT             reduce using rule 3 (line -> estructurasControl .)
    FLOAT           reduce using rule 3 (line -> estructurasControl .)
    LONG            reduce using rule 3 (line -> estructurasControl .)
    CHAR            reduce using rule 3 (line -> estructurasControl .)
    BOOLEAN         reduce using rule 3 (line -> estructurasControl .)
    ID              reduce using rule 3 (line -> estructurasControl .)
    STRING_1        reduce using rule 3 (line -> estructurasControl .)
    VAR             reduce using rule 3 (line -> estructurasControl .)
    VAL             reduce using rule 3 (line -> estructurasControl .)
    ARRAYLIST       reduce using rule 3 (line -> estructurasControl .)
    STACK           reduce using rule 3 (line -> estructurasControl .)
    SEMICOLON       reduce using rule 3 (line -> estructurasControl .)
    RCURL           reduce using rule 3 (line -> estructurasControl .)


state 5

    (4) line -> condicion .

    $end            reduce using rule 4 (line -> condicion .)
    LPAREN          reduce using rule 4 (line -> condicion .)
    FOR             reduce using rule 4 (line -> condicion .)
    IF              reduce using rule 4 (line -> condicion .)
    WHILE           reduce using rule 4 (line -> condicion .)
    EXCL_WS         reduce using rule 4 (line -> condicion .)
    PRINT           reduce using rule 4 (line -> condicion .)
    PRINTLN         reduce using rule 4 (line -> condicion .)
    INT             reduce using rule 4 (line -> condicion .)
    FLOAT           reduce using rule 4 (line -> condicion .)
    LONG            reduce using rule 4 (line -> condicion .)
    CHAR            reduce using rule 4 (line -> condicion .)
    BOOLEAN         reduce using rule 4 (line -> condicion .)
    ID              reduce using rule 4 (line -> condicion .)
    STRING_1        reduce using rule 4 (line -> condicion .)
    VAR             reduce using rule 4 (line -> condicion .)
    VAL             reduce using rule 4 (line -> condicion .)
    ARRAYLIST       reduce using rule 4 (line -> condicion .)
    STACK           reduce using rule 4 (line -> condicion .)
    SEMICOLON       reduce using rule 4 (line -> condicion .)
    RCURL           reduce using rule 4 (line -> condicion .)


state 6

    (8) lineas -> blocks .
    (9) lineas -> blocks . SEMICOLON

  ! shift/reduce conflict for SEMICOLON resolved as shift
    $end            reduce using rule 8 (lineas -> blocks .)
    LPAREN          reduce using rule 8 (lineas -> blocks .)
    FOR             reduce using rule 8 (lineas -> blocks .)
    IF              reduce using rule 8 (lineas -> blocks .)
    WHILE           reduce using rule 8 (lineas -> blocks .)
    EXCL_WS         reduce using rule 8 (lineas -> blocks .)
    PRINT           reduce using rule 8 (lineas -> blocks .)
    PRINTLN         reduce using rule 8 (lineas -> blocks .)
    INT             reduce using rule 8 (lineas -> blocks .)
    FLOAT           reduce using rule 8 (lineas -> blocks .)
    LONG            reduce using rule 8 (lineas -> blocks .)
    CHAR            reduce using rule 8 (lineas -> blocks .)
    BOOLEAN         reduce using rule 8 (lineas -> blocks .)
    ID              reduce using rule 8 (lineas -> blocks .)
    STRING_1        reduce using rule 8 (lineas -> blocks .)
    VAR             reduce using rule 8 (lineas -> blocks .)
    VAL             reduce using rule 8 (lineas -> blocks .)
    ARRAYLIST       reduce using rule 8 (lineas -> blocks .)
    STACK           reduce using rule 8 (lineas -> blocks .)
    RCURL           reduce using rule 8 (lineas -> blocks .)
    SEMICOLON       shift and go to state 58

  ! SEMICOLON       [ reduce using rule 8 (lineas -> blocks .) ]


state 7

    (67) expression -> term .
    (83) condicionL -> term . opL term
    (84) condicionR -> term . opR term
    (86) opL -> . CONJ
    (87) opL -> . DISJ
    (88) opR -> . LANGLE
    (89) opR -> . RANGLE
    (90) opR -> . LE
    (91) opR -> . GE
    (92) opR -> . EXCL_EQ
    (93) opR -> . EXCL_EQEQ
    (94) opR -> . AS_SAFE
    (95) opR -> . EQEQ
    (96) opR -> . EQEQEQ

    PLUS            reduce using rule 67 (expression -> term .)
    MINUS           reduce using rule 67 (expression -> term .)
    TIMES           reduce using rule 67 (expression -> term .)
    DIVIDE          reduce using rule 67 (expression -> term .)
    MOD             reduce using rule 67 (expression -> term .)
    INCREMENTONE    reduce using rule 67 (expression -> term .)
    DECREMENTONE    reduce using rule 67 (expression -> term .)
    $end            reduce using rule 67 (expression -> term .)
    LPAREN          reduce using rule 67 (expression -> term .)
    FOR             reduce using rule 67 (expression -> term .)
    IF              reduce using rule 67 (expression -> term .)
    WHILE           reduce using rule 67 (expression -> term .)
    EXCL_WS         reduce using rule 67 (expression -> term .)
    PRINT           reduce using rule 67 (expression -> term .)
    PRINTLN         reduce using rule 67 (expression -> term .)
    INT             reduce using rule 67 (expression -> term .)
    FLOAT           reduce using rule 67 (expression -> term .)
    LONG            reduce using rule 67 (expression -> term .)
    CHAR            reduce using rule 67 (expression -> term .)
    BOOLEAN         reduce using rule 67 (expression -> term .)
    ID              reduce using rule 67 (expression -> term .)
    STRING_1        reduce using rule 67 (expression -> term .)
    VAR             reduce using rule 67 (expression -> term .)
    VAL             reduce using rule 67 (expression -> term .)
    ARRAYLIST       reduce using rule 67 (expression -> term .)
    STACK           reduce using rule 67 (expression -> term .)
    SEMICOLON       reduce using rule 67 (expression -> term .)
    RCURL           reduce using rule 67 (expression -> term .)
    CONJ            shift and go to state 61
    DISJ            shift and go to state 62
    LANGLE          shift and go to state 63
    RANGLE          shift and go to state 64
    LE              shift and go to state 65
    GE              shift and go to state 66
    EXCL_EQ         shift and go to state 67
    EXCL_EQEQ       shift and go to state 68
    AS_SAFE         shift and go to state 69
    EQEQ            shift and go to state 70
    EQEQEQ          shift and go to state 71

    opL                            shift and go to state 59
    opR                            shift and go to state 60

state 8

    (20) estructurasControl -> for .

    $end            reduce using rule 20 (estructurasControl -> for .)
    LPAREN          reduce using rule 20 (estructurasControl -> for .)
    FOR             reduce using rule 20 (estructurasControl -> for .)
    IF              reduce using rule 20 (estructurasControl -> for .)
    WHILE           reduce using rule 20 (estructurasControl -> for .)
    EXCL_WS         reduce using rule 20 (estructurasControl -> for .)
    PRINT           reduce using rule 20 (estructurasControl -> for .)
    PRINTLN         reduce using rule 20 (estructurasControl -> for .)
    INT             reduce using rule 20 (estructurasControl -> for .)
    FLOAT           reduce using rule 20 (estructurasControl -> for .)
    LONG            reduce using rule 20 (estructurasControl -> for .)
    CHAR            reduce using rule 20 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 20 (estructurasControl -> for .)
    ID              reduce using rule 20 (estructurasControl -> for .)
    STRING_1        reduce using rule 20 (estructurasControl -> for .)
    VAR             reduce using rule 20 (estructurasControl -> for .)
    VAL             reduce using rule 20 (estructurasControl -> for .)
    ARRAYLIST       reduce using rule 20 (estructurasControl -> for .)
    STACK           reduce using rule 20 (estructurasControl -> for .)
    SEMICOLON       reduce using rule 20 (estructurasControl -> for .)
    RCURL           reduce using rule 20 (estructurasControl -> for .)


state 9

    (21) estructurasControl -> if .

    $end            reduce using rule 21 (estructurasControl -> if .)
    LPAREN          reduce using rule 21 (estructurasControl -> if .)
    FOR             reduce using rule 21 (estructurasControl -> if .)
    IF              reduce using rule 21 (estructurasControl -> if .)
    WHILE           reduce using rule 21 (estructurasControl -> if .)
    EXCL_WS         reduce using rule 21 (estructurasControl -> if .)
    PRINT           reduce using rule 21 (estructurasControl -> if .)
    PRINTLN         reduce using rule 21 (estructurasControl -> if .)
    INT             reduce using rule 21 (estructurasControl -> if .)
    FLOAT           reduce using rule 21 (estructurasControl -> if .)
    LONG            reduce using rule 21 (estructurasControl -> if .)
    CHAR            reduce using rule 21 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 21 (estructurasControl -> if .)
    ID              reduce using rule 21 (estructurasControl -> if .)
    STRING_1        reduce using rule 21 (estructurasControl -> if .)
    VAR             reduce using rule 21 (estructurasControl -> if .)
    VAL             reduce using rule 21 (estructurasControl -> if .)
    ARRAYLIST       reduce using rule 21 (estructurasControl -> if .)
    STACK           reduce using rule 21 (estructurasControl -> if .)
    SEMICOLON       reduce using rule 21 (estructurasControl -> if .)
    RCURL           reduce using rule 21 (estructurasControl -> if .)


state 10

    (22) estructurasControl -> while .

    $end            reduce using rule 22 (estructurasControl -> while .)
    LPAREN          reduce using rule 22 (estructurasControl -> while .)
    FOR             reduce using rule 22 (estructurasControl -> while .)
    IF              reduce using rule 22 (estructurasControl -> while .)
    WHILE           reduce using rule 22 (estructurasControl -> while .)
    EXCL_WS         reduce using rule 22 (estructurasControl -> while .)
    PRINT           reduce using rule 22 (estructurasControl -> while .)
    PRINTLN         reduce using rule 22 (estructurasControl -> while .)
    INT             reduce using rule 22 (estructurasControl -> while .)
    FLOAT           reduce using rule 22 (estructurasControl -> while .)
    LONG            reduce using rule 22 (estructurasControl -> while .)
    CHAR            reduce using rule 22 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 22 (estructurasControl -> while .)
    ID              reduce using rule 22 (estructurasControl -> while .)
    STRING_1        reduce using rule 22 (estructurasControl -> while .)
    VAR             reduce using rule 22 (estructurasControl -> while .)
    VAL             reduce using rule 22 (estructurasControl -> while .)
    ARRAYLIST       reduce using rule 22 (estructurasControl -> while .)
    STACK           reduce using rule 22 (estructurasControl -> while .)
    SEMICOLON       reduce using rule 22 (estructurasControl -> while .)
    RCURL           reduce using rule 22 (estructurasControl -> while .)


state 11

    (80) condicion -> condicionL .

    $end            reduce using rule 80 (condicion -> condicionL .)
    RPAREN          reduce using rule 80 (condicion -> condicionL .)
    LPAREN          reduce using rule 80 (condicion -> condicionL .)
    FOR             reduce using rule 80 (condicion -> condicionL .)
    IF              reduce using rule 80 (condicion -> condicionL .)
    WHILE           reduce using rule 80 (condicion -> condicionL .)
    EXCL_WS         reduce using rule 80 (condicion -> condicionL .)
    PRINT           reduce using rule 80 (condicion -> condicionL .)
    PRINTLN         reduce using rule 80 (condicion -> condicionL .)
    INT             reduce using rule 80 (condicion -> condicionL .)
    FLOAT           reduce using rule 80 (condicion -> condicionL .)
    LONG            reduce using rule 80 (condicion -> condicionL .)
    CHAR            reduce using rule 80 (condicion -> condicionL .)
    BOOLEAN         reduce using rule 80 (condicion -> condicionL .)
    ID              reduce using rule 80 (condicion -> condicionL .)
    STRING_1        reduce using rule 80 (condicion -> condicionL .)
    VAR             reduce using rule 80 (condicion -> condicionL .)
    VAL             reduce using rule 80 (condicion -> condicionL .)
    ARRAYLIST       reduce using rule 80 (condicion -> condicionL .)
    STACK           reduce using rule 80 (condicion -> condicionL .)
    SEMICOLON       reduce using rule 80 (condicion -> condicionL .)
    RCURL           reduce using rule 80 (condicion -> condicionL .)


state 12

    (81) condicion -> condicionR .

    $end            reduce using rule 81 (condicion -> condicionR .)
    RPAREN          reduce using rule 81 (condicion -> condicionR .)
    LPAREN          reduce using rule 81 (condicion -> condicionR .)
    FOR             reduce using rule 81 (condicion -> condicionR .)
    IF              reduce using rule 81 (condicion -> condicionR .)
    WHILE           reduce using rule 81 (condicion -> condicionR .)
    EXCL_WS         reduce using rule 81 (condicion -> condicionR .)
    PRINT           reduce using rule 81 (condicion -> condicionR .)
    PRINTLN         reduce using rule 81 (condicion -> condicionR .)
    INT             reduce using rule 81 (condicion -> condicionR .)
    FLOAT           reduce using rule 81 (condicion -> condicionR .)
    LONG            reduce using rule 81 (condicion -> condicionR .)
    CHAR            reduce using rule 81 (condicion -> condicionR .)
    BOOLEAN         reduce using rule 81 (condicion -> condicionR .)
    ID              reduce using rule 81 (condicion -> condicionR .)
    STRING_1        reduce using rule 81 (condicion -> condicionR .)
    VAR             reduce using rule 81 (condicion -> condicionR .)
    VAL             reduce using rule 81 (condicion -> condicionR .)
    ARRAYLIST       reduce using rule 81 (condicion -> condicionR .)
    STACK           reduce using rule 81 (condicion -> condicionR .)
    SEMICOLON       reduce using rule 81 (condicion -> condicionR .)
    RCURL           reduce using rule 81 (condicion -> condicionR .)


state 13

    (82) condicion -> condicionN .

    $end            reduce using rule 82 (condicion -> condicionN .)
    RPAREN          reduce using rule 82 (condicion -> condicionN .)
    LPAREN          reduce using rule 82 (condicion -> condicionN .)
    FOR             reduce using rule 82 (condicion -> condicionN .)
    IF              reduce using rule 82 (condicion -> condicionN .)
    WHILE           reduce using rule 82 (condicion -> condicionN .)
    EXCL_WS         reduce using rule 82 (condicion -> condicionN .)
    PRINT           reduce using rule 82 (condicion -> condicionN .)
    PRINTLN         reduce using rule 82 (condicion -> condicionN .)
    INT             reduce using rule 82 (condicion -> condicionN .)
    FLOAT           reduce using rule 82 (condicion -> condicionN .)
    LONG            reduce using rule 82 (condicion -> condicionN .)
    CHAR            reduce using rule 82 (condicion -> condicionN .)
    BOOLEAN         reduce using rule 82 (condicion -> condicionN .)
    ID              reduce using rule 82 (condicion -> condicionN .)
    STRING_1        reduce using rule 82 (condicion -> condicionN .)
    VAR             reduce using rule 82 (condicion -> condicionN .)
    VAL             reduce using rule 82 (condicion -> condicionN .)
    ARRAYLIST       reduce using rule 82 (condicion -> condicionN .)
    STACK           reduce using rule 82 (condicion -> condicionN .)
    SEMICOLON       reduce using rule 82 (condicion -> condicionN .)
    RCURL           reduce using rule 82 (condicion -> condicionN .)


state 14

    (5) blocks -> impresion .

    SEMICOLON       reduce using rule 5 (blocks -> impresion .)
    $end            reduce using rule 5 (blocks -> impresion .)
    LPAREN          reduce using rule 5 (blocks -> impresion .)
    FOR             reduce using rule 5 (blocks -> impresion .)
    IF              reduce using rule 5 (blocks -> impresion .)
    WHILE           reduce using rule 5 (blocks -> impresion .)
    EXCL_WS         reduce using rule 5 (blocks -> impresion .)
    PRINT           reduce using rule 5 (blocks -> impresion .)
    PRINTLN         reduce using rule 5 (blocks -> impresion .)
    INT             reduce using rule 5 (blocks -> impresion .)
    FLOAT           reduce using rule 5 (blocks -> impresion .)
    LONG            reduce using rule 5 (blocks -> impresion .)
    CHAR            reduce using rule 5 (blocks -> impresion .)
    BOOLEAN         reduce using rule 5 (blocks -> impresion .)
    ID              reduce using rule 5 (blocks -> impresion .)
    STRING_1        reduce using rule 5 (blocks -> impresion .)
    VAR             reduce using rule 5 (blocks -> impresion .)
    VAL             reduce using rule 5 (blocks -> impresion .)
    ARRAYLIST       reduce using rule 5 (blocks -> impresion .)
    STACK           reduce using rule 5 (blocks -> impresion .)
    RCURL           reduce using rule 5 (blocks -> impresion .)


state 15

    (6) blocks -> asignacion .

    SEMICOLON       reduce using rule 6 (blocks -> asignacion .)
    $end            reduce using rule 6 (blocks -> asignacion .)
    LPAREN          reduce using rule 6 (blocks -> asignacion .)
    FOR             reduce using rule 6 (blocks -> asignacion .)
    IF              reduce using rule 6 (blocks -> asignacion .)
    WHILE           reduce using rule 6 (blocks -> asignacion .)
    EXCL_WS         reduce using rule 6 (blocks -> asignacion .)
    PRINT           reduce using rule 6 (blocks -> asignacion .)
    PRINTLN         reduce using rule 6 (blocks -> asignacion .)
    INT             reduce using rule 6 (blocks -> asignacion .)
    FLOAT           reduce using rule 6 (blocks -> asignacion .)
    LONG            reduce using rule 6 (blocks -> asignacion .)
    CHAR            reduce using rule 6 (blocks -> asignacion .)
    BOOLEAN         reduce using rule 6 (blocks -> asignacion .)
    ID              reduce using rule 6 (blocks -> asignacion .)
    STRING_1        reduce using rule 6 (blocks -> asignacion .)
    VAR             reduce using rule 6 (blocks -> asignacion .)
    VAL             reduce using rule 6 (blocks -> asignacion .)
    ARRAYLIST       reduce using rule 6 (blocks -> asignacion .)
    STACK           reduce using rule 6 (blocks -> asignacion .)
    RCURL           reduce using rule 6 (blocks -> asignacion .)


state 16

    (7) blocks -> estructurasDatos .

    SEMICOLON       reduce using rule 7 (blocks -> estructurasDatos .)
    $end            reduce using rule 7 (blocks -> estructurasDatos .)
    LPAREN          reduce using rule 7 (blocks -> estructurasDatos .)
    FOR             reduce using rule 7 (blocks -> estructurasDatos .)
    IF              reduce using rule 7 (blocks -> estructurasDatos .)
    WHILE           reduce using rule 7 (blocks -> estructurasDatos .)
    EXCL_WS         reduce using rule 7 (blocks -> estructurasDatos .)
    PRINT           reduce using rule 7 (blocks -> estructurasDatos .)
    PRINTLN         reduce using rule 7 (blocks -> estructurasDatos .)
    INT             reduce using rule 7 (blocks -> estructurasDatos .)
    FLOAT           reduce using rule 7 (blocks -> estructurasDatos .)
    LONG            reduce using rule 7 (blocks -> estructurasDatos .)
    CHAR            reduce using rule 7 (blocks -> estructurasDatos .)
    BOOLEAN         reduce using rule 7 (blocks -> estructurasDatos .)
    ID              reduce using rule 7 (blocks -> estructurasDatos .)
    STRING_1        reduce using rule 7 (blocks -> estructurasDatos .)
    VAR             reduce using rule 7 (blocks -> estructurasDatos .)
    VAL             reduce using rule 7 (blocks -> estructurasDatos .)
    ARRAYLIST       reduce using rule 7 (blocks -> estructurasDatos .)
    STACK           reduce using rule 7 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 7 (blocks -> estructurasDatos .)


state 17

    (68) term -> factor .

    CONJ            reduce using rule 68 (term -> factor .)
    DISJ            reduce using rule 68 (term -> factor .)
    LANGLE          reduce using rule 68 (term -> factor .)
    RANGLE          reduce using rule 68 (term -> factor .)
    LE              reduce using rule 68 (term -> factor .)
    GE              reduce using rule 68 (term -> factor .)
    EXCL_EQ         reduce using rule 68 (term -> factor .)
    EXCL_EQEQ       reduce using rule 68 (term -> factor .)
    AS_SAFE         reduce using rule 68 (term -> factor .)
    EQEQ            reduce using rule 68 (term -> factor .)
    EQEQEQ          reduce using rule 68 (term -> factor .)
    PLUS            reduce using rule 68 (term -> factor .)
    MINUS           reduce using rule 68 (term -> factor .)
    TIMES           reduce using rule 68 (term -> factor .)
    DIVIDE          reduce using rule 68 (term -> factor .)
    MOD             reduce using rule 68 (term -> factor .)
    INCREMENTONE    reduce using rule 68 (term -> factor .)
    DECREMENTONE    reduce using rule 68 (term -> factor .)
    $end            reduce using rule 68 (term -> factor .)
    RPAREN          reduce using rule 68 (term -> factor .)
    LPAREN          reduce using rule 68 (term -> factor .)
    FOR             reduce using rule 68 (term -> factor .)
    IF              reduce using rule 68 (term -> factor .)
    WHILE           reduce using rule 68 (term -> factor .)
    EXCL_WS         reduce using rule 68 (term -> factor .)
    PRINT           reduce using rule 68 (term -> factor .)
    PRINTLN         reduce using rule 68 (term -> factor .)
    INT             reduce using rule 68 (term -> factor .)
    FLOAT           reduce using rule 68 (term -> factor .)
    LONG            reduce using rule 68 (term -> factor .)
    CHAR            reduce using rule 68 (term -> factor .)
    BOOLEAN         reduce using rule 68 (term -> factor .)
    ID              reduce using rule 68 (term -> factor .)
    STRING_1        reduce using rule 68 (term -> factor .)
    VAR             reduce using rule 68 (term -> factor .)
    VAL             reduce using rule 68 (term -> factor .)
    ARRAYLIST       reduce using rule 68 (term -> factor .)
    STACK           reduce using rule 68 (term -> factor .)
    SEMICOLON       reduce using rule 68 (term -> factor .)
    RCURL           reduce using rule 68 (term -> factor .)


state 18

    (69) term -> LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    expression                     shift and go to state 72
    term                           shift and go to state 73
    factor                         shift and go to state 17

state 19

    (34) for -> FOR . LPAREN ID IN iterable RPAREN LCURL morelines RCURL

    LPAREN          shift and go to state 75


state 20

    (75) factor -> ID .
    (44) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (45) asignacionSimple -> ID . EQUAL valor
    (100) stack_actuar -> ID . DOT stack_funciones
    (119) lsimplem -> ID . DOT Lmetod
    (120) lcomp -> ID . DOT Cmetod
    (27) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (28) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (30) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (29) queue_poll -> ID . DOT POLL LPAREN RPAREN

    CONJ            reduce using rule 75 (factor -> ID .)
    DISJ            reduce using rule 75 (factor -> ID .)
    LANGLE          reduce using rule 75 (factor -> ID .)
    RANGLE          reduce using rule 75 (factor -> ID .)
    LE              reduce using rule 75 (factor -> ID .)
    GE              reduce using rule 75 (factor -> ID .)
    EXCL_EQ         reduce using rule 75 (factor -> ID .)
    EXCL_EQEQ       reduce using rule 75 (factor -> ID .)
    AS_SAFE         reduce using rule 75 (factor -> ID .)
    EQEQ            reduce using rule 75 (factor -> ID .)
    EQEQEQ          reduce using rule 75 (factor -> ID .)
    PLUS            reduce using rule 75 (factor -> ID .)
    MINUS           reduce using rule 75 (factor -> ID .)
    TIMES           reduce using rule 75 (factor -> ID .)
    DIVIDE          reduce using rule 75 (factor -> ID .)
    MOD             reduce using rule 75 (factor -> ID .)
    INCREMENTONE    reduce using rule 75 (factor -> ID .)
    DECREMENTONE    reduce using rule 75 (factor -> ID .)
    $end            reduce using rule 75 (factor -> ID .)
    LPAREN          reduce using rule 75 (factor -> ID .)
    FOR             reduce using rule 75 (factor -> ID .)
    IF              reduce using rule 75 (factor -> ID .)
    WHILE           reduce using rule 75 (factor -> ID .)
    EXCL_WS         reduce using rule 75 (factor -> ID .)
    PRINT           reduce using rule 75 (factor -> ID .)
    PRINTLN         reduce using rule 75 (factor -> ID .)
    INT             reduce using rule 75 (factor -> ID .)
    FLOAT           reduce using rule 75 (factor -> ID .)
    LONG            reduce using rule 75 (factor -> ID .)
    CHAR            reduce using rule 75 (factor -> ID .)
    BOOLEAN         reduce using rule 75 (factor -> ID .)
    ID              reduce using rule 75 (factor -> ID .)
    STRING_1        reduce using rule 75 (factor -> ID .)
    VAR             reduce using rule 75 (factor -> ID .)
    VAL             reduce using rule 75 (factor -> ID .)
    ARRAYLIST       reduce using rule 75 (factor -> ID .)
    STACK           reduce using rule 75 (factor -> ID .)
    SEMICOLON       reduce using rule 75 (factor -> ID .)
    RCURL           reduce using rule 75 (factor -> ID .)
    DOTS            shift and go to state 76
    EQUAL           shift and go to state 77
    DOT             shift and go to state 78


state 21

    (77) if -> IF . LPAREN condicion RPAREN LCURL morelines RCURL
    (78) if -> IF . LPAREN condicion RPAREN LCURL morelines RCURL else

    LPAREN          shift and go to state 79


state 22

    (117) while -> WHILE . LPAREN ID opR INT RPAREN LCURL morelines RCURL

    LPAREN          shift and go to state 80


state 23

    (70) factor -> INT .

    CONJ            reduce using rule 70 (factor -> INT .)
    DISJ            reduce using rule 70 (factor -> INT .)
    LANGLE          reduce using rule 70 (factor -> INT .)
    RANGLE          reduce using rule 70 (factor -> INT .)
    LE              reduce using rule 70 (factor -> INT .)
    GE              reduce using rule 70 (factor -> INT .)
    EXCL_EQ         reduce using rule 70 (factor -> INT .)
    EXCL_EQEQ       reduce using rule 70 (factor -> INT .)
    AS_SAFE         reduce using rule 70 (factor -> INT .)
    EQEQ            reduce using rule 70 (factor -> INT .)
    EQEQEQ          reduce using rule 70 (factor -> INT .)
    PLUS            reduce using rule 70 (factor -> INT .)
    MINUS           reduce using rule 70 (factor -> INT .)
    TIMES           reduce using rule 70 (factor -> INT .)
    DIVIDE          reduce using rule 70 (factor -> INT .)
    MOD             reduce using rule 70 (factor -> INT .)
    INCREMENTONE    reduce using rule 70 (factor -> INT .)
    DECREMENTONE    reduce using rule 70 (factor -> INT .)
    $end            reduce using rule 70 (factor -> INT .)
    RPAREN          reduce using rule 70 (factor -> INT .)
    LPAREN          reduce using rule 70 (factor -> INT .)
    FOR             reduce using rule 70 (factor -> INT .)
    IF              reduce using rule 70 (factor -> INT .)
    WHILE           reduce using rule 70 (factor -> INT .)
    EXCL_WS         reduce using rule 70 (factor -> INT .)
    PRINT           reduce using rule 70 (factor -> INT .)
    PRINTLN         reduce using rule 70 (factor -> INT .)
    INT             reduce using rule 70 (factor -> INT .)
    FLOAT           reduce using rule 70 (factor -> INT .)
    LONG            reduce using rule 70 (factor -> INT .)
    CHAR            reduce using rule 70 (factor -> INT .)
    BOOLEAN         reduce using rule 70 (factor -> INT .)
    ID              reduce using rule 70 (factor -> INT .)
    STRING_1        reduce using rule 70 (factor -> INT .)
    VAR             reduce using rule 70 (factor -> INT .)
    VAL             reduce using rule 70 (factor -> INT .)
    ARRAYLIST       reduce using rule 70 (factor -> INT .)
    STACK           reduce using rule 70 (factor -> INT .)
    SEMICOLON       reduce using rule 70 (factor -> INT .)
    RCURL           reduce using rule 70 (factor -> INT .)


state 24

    (85) condicionN -> EXCL_WS . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 81
    factor                         shift and go to state 17

state 25

    (31) impresion -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 82


state 26

    (32) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 83


state 27

    (40) asignacion -> keywordVariables . asignacionSimple
    (97) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (118) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 85

    asignacionSimple               shift and go to state 84

state 28

    (41) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 41 (asignacion -> asignacionSimple .)
    $end            reduce using rule 41 (asignacion -> asignacionSimple .)
    LPAREN          reduce using rule 41 (asignacion -> asignacionSimple .)
    FOR             reduce using rule 41 (asignacion -> asignacionSimple .)
    IF              reduce using rule 41 (asignacion -> asignacionSimple .)
    WHILE           reduce using rule 41 (asignacion -> asignacionSimple .)
    EXCL_WS         reduce using rule 41 (asignacion -> asignacionSimple .)
    PRINT           reduce using rule 41 (asignacion -> asignacionSimple .)
    PRINTLN         reduce using rule 41 (asignacion -> asignacionSimple .)
    INT             reduce using rule 41 (asignacion -> asignacionSimple .)
    FLOAT           reduce using rule 41 (asignacion -> asignacionSimple .)
    LONG            reduce using rule 41 (asignacion -> asignacionSimple .)
    CHAR            reduce using rule 41 (asignacion -> asignacionSimple .)
    BOOLEAN         reduce using rule 41 (asignacion -> asignacionSimple .)
    ID              reduce using rule 41 (asignacion -> asignacionSimple .)
    STRING_1        reduce using rule 41 (asignacion -> asignacionSimple .)
    VAR             reduce using rule 41 (asignacion -> asignacionSimple .)
    VAL             reduce using rule 41 (asignacion -> asignacionSimple .)
    ARRAYLIST       reduce using rule 41 (asignacion -> asignacionSimple .)
    STACK           reduce using rule 41 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 41 (asignacion -> asignacionSimple .)


state 29

    (10) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 10 (estructurasDatos -> queue .)
    $end            reduce using rule 10 (estructurasDatos -> queue .)
    LPAREN          reduce using rule 10 (estructurasDatos -> queue .)
    FOR             reduce using rule 10 (estructurasDatos -> queue .)
    IF              reduce using rule 10 (estructurasDatos -> queue .)
    WHILE           reduce using rule 10 (estructurasDatos -> queue .)
    EXCL_WS         reduce using rule 10 (estructurasDatos -> queue .)
    PRINT           reduce using rule 10 (estructurasDatos -> queue .)
    PRINTLN         reduce using rule 10 (estructurasDatos -> queue .)
    INT             reduce using rule 10 (estructurasDatos -> queue .)
    FLOAT           reduce using rule 10 (estructurasDatos -> queue .)
    LONG            reduce using rule 10 (estructurasDatos -> queue .)
    CHAR            reduce using rule 10 (estructurasDatos -> queue .)
    BOOLEAN         reduce using rule 10 (estructurasDatos -> queue .)
    ID              reduce using rule 10 (estructurasDatos -> queue .)
    STRING_1        reduce using rule 10 (estructurasDatos -> queue .)
    VAR             reduce using rule 10 (estructurasDatos -> queue .)
    VAL             reduce using rule 10 (estructurasDatos -> queue .)
    ARRAYLIST       reduce using rule 10 (estructurasDatos -> queue .)
    STACK           reduce using rule 10 (estructurasDatos -> queue .)
    RCURL           reduce using rule 10 (estructurasDatos -> queue .)


state 30

    (11) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 11 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 11 (estructurasDatos -> queue_operations .)
    LPAREN          reduce using rule 11 (estructurasDatos -> queue_operations .)
    FOR             reduce using rule 11 (estructurasDatos -> queue_operations .)
    IF              reduce using rule 11 (estructurasDatos -> queue_operations .)
    WHILE           reduce using rule 11 (estructurasDatos -> queue_operations .)
    EXCL_WS         reduce using rule 11 (estructurasDatos -> queue_operations .)
    PRINT           reduce using rule 11 (estructurasDatos -> queue_operations .)
    PRINTLN         reduce using rule 11 (estructurasDatos -> queue_operations .)
    INT             reduce using rule 11 (estructurasDatos -> queue_operations .)
    FLOAT           reduce using rule 11 (estructurasDatos -> queue_operations .)
    LONG            reduce using rule 11 (estructurasDatos -> queue_operations .)
    CHAR            reduce using rule 11 (estructurasDatos -> queue_operations .)
    BOOLEAN         reduce using rule 11 (estructurasDatos -> queue_operations .)
    ID              reduce using rule 11 (estructurasDatos -> queue_operations .)
    STRING_1        reduce using rule 11 (estructurasDatos -> queue_operations .)
    VAR             reduce using rule 11 (estructurasDatos -> queue_operations .)
    VAL             reduce using rule 11 (estructurasDatos -> queue_operations .)
    ARRAYLIST       reduce using rule 11 (estructurasDatos -> queue_operations .)
    STACK           reduce using rule 11 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 11 (estructurasDatos -> queue_operations .)


state 31

    (12) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 12 (estructurasDatos -> stack .)
    $end            reduce using rule 12 (estructurasDatos -> stack .)
    LPAREN          reduce using rule 12 (estructurasDatos -> stack .)
    FOR             reduce using rule 12 (estructurasDatos -> stack .)
    IF              reduce using rule 12 (estructurasDatos -> stack .)
    WHILE           reduce using rule 12 (estructurasDatos -> stack .)
    EXCL_WS         reduce using rule 12 (estructurasDatos -> stack .)
    PRINT           reduce using rule 12 (estructurasDatos -> stack .)
    PRINTLN         reduce using rule 12 (estructurasDatos -> stack .)
    INT             reduce using rule 12 (estructurasDatos -> stack .)
    FLOAT           reduce using rule 12 (estructurasDatos -> stack .)
    LONG            reduce using rule 12 (estructurasDatos -> stack .)
    CHAR            reduce using rule 12 (estructurasDatos -> stack .)
    BOOLEAN         reduce using rule 12 (estructurasDatos -> stack .)
    ID              reduce using rule 12 (estructurasDatos -> stack .)
    STRING_1        reduce using rule 12 (estructurasDatos -> stack .)
    VAR             reduce using rule 12 (estructurasDatos -> stack .)
    VAL             reduce using rule 12 (estructurasDatos -> stack .)
    ARRAYLIST       reduce using rule 12 (estructurasDatos -> stack .)
    STACK           reduce using rule 12 (estructurasDatos -> stack .)
    RCURL           reduce using rule 12 (estructurasDatos -> stack .)


state 32

    (13) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 13 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 13 (estructurasDatos -> stack_actuar .)
    LPAREN          reduce using rule 13 (estructurasDatos -> stack_actuar .)
    FOR             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    IF              reduce using rule 13 (estructurasDatos -> stack_actuar .)
    WHILE           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    EXCL_WS         reduce using rule 13 (estructurasDatos -> stack_actuar .)
    PRINT           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    PRINTLN         reduce using rule 13 (estructurasDatos -> stack_actuar .)
    INT             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    FLOAT           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    LONG            reduce using rule 13 (estructurasDatos -> stack_actuar .)
    CHAR            reduce using rule 13 (estructurasDatos -> stack_actuar .)
    BOOLEAN         reduce using rule 13 (estructurasDatos -> stack_actuar .)
    ID              reduce using rule 13 (estructurasDatos -> stack_actuar .)
    STRING_1        reduce using rule 13 (estructurasDatos -> stack_actuar .)
    VAR             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    VAL             reduce using rule 13 (estructurasDatos -> stack_actuar .)
    ARRAYLIST       reduce using rule 13 (estructurasDatos -> stack_actuar .)
    STACK           reduce using rule 13 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 13 (estructurasDatos -> stack_actuar .)


state 33

    (14) estructurasDatos -> instance_arraylist .

    SEMICOLON       reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    $end            reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    LPAREN          reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    FOR             reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    IF              reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    WHILE           reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    EXCL_WS         reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    PRINT           reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    PRINTLN         reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    INT             reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    FLOAT           reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    LONG            reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    CHAR            reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    BOOLEAN         reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    ID              reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    STRING_1        reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    VAR             reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    VAL             reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    ARRAYLIST       reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    STACK           reduce using rule 14 (estructurasDatos -> instance_arraylist .)
    RCURL           reduce using rule 14 (estructurasDatos -> instance_arraylist .)


state 34

    (15) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    LPAREN          reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    FOR             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    IF              reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    WHILE           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    EXCL_WS         reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    PRINT           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    PRINTLN         reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    INT             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    FLOAT           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    LONG            reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    CHAR            reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    BOOLEAN         reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    ID              reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    STRING_1        reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    VAR             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    VAL             reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    ARRAYLIST       reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    STACK           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 15 (estructurasDatos -> def_estruct_tipoDato .)


state 35

    (16) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 16 (estructurasDatos -> lista .)
    $end            reduce using rule 16 (estructurasDatos -> lista .)
    LPAREN          reduce using rule 16 (estructurasDatos -> lista .)
    FOR             reduce using rule 16 (estructurasDatos -> lista .)
    IF              reduce using rule 16 (estructurasDatos -> lista .)
    WHILE           reduce using rule 16 (estructurasDatos -> lista .)
    EXCL_WS         reduce using rule 16 (estructurasDatos -> lista .)
    PRINT           reduce using rule 16 (estructurasDatos -> lista .)
    PRINTLN         reduce using rule 16 (estructurasDatos -> lista .)
    INT             reduce using rule 16 (estructurasDatos -> lista .)
    FLOAT           reduce using rule 16 (estructurasDatos -> lista .)
    LONG            reduce using rule 16 (estructurasDatos -> lista .)
    CHAR            reduce using rule 16 (estructurasDatos -> lista .)
    BOOLEAN         reduce using rule 16 (estructurasDatos -> lista .)
    ID              reduce using rule 16 (estructurasDatos -> lista .)
    STRING_1        reduce using rule 16 (estructurasDatos -> lista .)
    VAR             reduce using rule 16 (estructurasDatos -> lista .)
    VAL             reduce using rule 16 (estructurasDatos -> lista .)
    ARRAYLIST       reduce using rule 16 (estructurasDatos -> lista .)
    STACK           reduce using rule 16 (estructurasDatos -> lista .)
    RCURL           reduce using rule 16 (estructurasDatos -> lista .)


state 36

    (17) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 17 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 17 (estructurasDatos -> lsimplem .)
    LPAREN          reduce using rule 17 (estructurasDatos -> lsimplem .)
    FOR             reduce using rule 17 (estructurasDatos -> lsimplem .)
    IF              reduce using rule 17 (estructurasDatos -> lsimplem .)
    WHILE           reduce using rule 17 (estructurasDatos -> lsimplem .)
    EXCL_WS         reduce using rule 17 (estructurasDatos -> lsimplem .)
    PRINT           reduce using rule 17 (estructurasDatos -> lsimplem .)
    PRINTLN         reduce using rule 17 (estructurasDatos -> lsimplem .)
    INT             reduce using rule 17 (estructurasDatos -> lsimplem .)
    FLOAT           reduce using rule 17 (estructurasDatos -> lsimplem .)
    LONG            reduce using rule 17 (estructurasDatos -> lsimplem .)
    CHAR            reduce using rule 17 (estructurasDatos -> lsimplem .)
    BOOLEAN         reduce using rule 17 (estructurasDatos -> lsimplem .)
    ID              reduce using rule 17 (estructurasDatos -> lsimplem .)
    STRING_1        reduce using rule 17 (estructurasDatos -> lsimplem .)
    VAR             reduce using rule 17 (estructurasDatos -> lsimplem .)
    VAL             reduce using rule 17 (estructurasDatos -> lsimplem .)
    ARRAYLIST       reduce using rule 17 (estructurasDatos -> lsimplem .)
    STACK           reduce using rule 17 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 17 (estructurasDatos -> lsimplem .)


state 37

    (18) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 18 (estructurasDatos -> lcomp .)
    $end            reduce using rule 18 (estructurasDatos -> lcomp .)
    LPAREN          reduce using rule 18 (estructurasDatos -> lcomp .)
    FOR             reduce using rule 18 (estructurasDatos -> lcomp .)
    IF              reduce using rule 18 (estructurasDatos -> lcomp .)
    WHILE           reduce using rule 18 (estructurasDatos -> lcomp .)
    EXCL_WS         reduce using rule 18 (estructurasDatos -> lcomp .)
    PRINT           reduce using rule 18 (estructurasDatos -> lcomp .)
    PRINTLN         reduce using rule 18 (estructurasDatos -> lcomp .)
    INT             reduce using rule 18 (estructurasDatos -> lcomp .)
    FLOAT           reduce using rule 18 (estructurasDatos -> lcomp .)
    LONG            reduce using rule 18 (estructurasDatos -> lcomp .)
    CHAR            reduce using rule 18 (estructurasDatos -> lcomp .)
    BOOLEAN         reduce using rule 18 (estructurasDatos -> lcomp .)
    ID              reduce using rule 18 (estructurasDatos -> lcomp .)
    STRING_1        reduce using rule 18 (estructurasDatos -> lcomp .)
    VAR             reduce using rule 18 (estructurasDatos -> lcomp .)
    VAL             reduce using rule 18 (estructurasDatos -> lcomp .)
    ARRAYLIST       reduce using rule 18 (estructurasDatos -> lcomp .)
    STACK           reduce using rule 18 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 18 (estructurasDatos -> lcomp .)


state 38

    (71) factor -> FLOAT .

    CONJ            reduce using rule 71 (factor -> FLOAT .)
    DISJ            reduce using rule 71 (factor -> FLOAT .)
    LANGLE          reduce using rule 71 (factor -> FLOAT .)
    RANGLE          reduce using rule 71 (factor -> FLOAT .)
    LE              reduce using rule 71 (factor -> FLOAT .)
    GE              reduce using rule 71 (factor -> FLOAT .)
    EXCL_EQ         reduce using rule 71 (factor -> FLOAT .)
    EXCL_EQEQ       reduce using rule 71 (factor -> FLOAT .)
    AS_SAFE         reduce using rule 71 (factor -> FLOAT .)
    EQEQ            reduce using rule 71 (factor -> FLOAT .)
    EQEQEQ          reduce using rule 71 (factor -> FLOAT .)
    PLUS            reduce using rule 71 (factor -> FLOAT .)
    MINUS           reduce using rule 71 (factor -> FLOAT .)
    TIMES           reduce using rule 71 (factor -> FLOAT .)
    DIVIDE          reduce using rule 71 (factor -> FLOAT .)
    MOD             reduce using rule 71 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    $end            reduce using rule 71 (factor -> FLOAT .)
    RPAREN          reduce using rule 71 (factor -> FLOAT .)
    LPAREN          reduce using rule 71 (factor -> FLOAT .)
    FOR             reduce using rule 71 (factor -> FLOAT .)
    IF              reduce using rule 71 (factor -> FLOAT .)
    WHILE           reduce using rule 71 (factor -> FLOAT .)
    EXCL_WS         reduce using rule 71 (factor -> FLOAT .)
    PRINT           reduce using rule 71 (factor -> FLOAT .)
    PRINTLN         reduce using rule 71 (factor -> FLOAT .)
    INT             reduce using rule 71 (factor -> FLOAT .)
    FLOAT           reduce using rule 71 (factor -> FLOAT .)
    LONG            reduce using rule 71 (factor -> FLOAT .)
    CHAR            reduce using rule 71 (factor -> FLOAT .)
    BOOLEAN         reduce using rule 71 (factor -> FLOAT .)
    ID              reduce using rule 71 (factor -> FLOAT .)
    STRING_1        reduce using rule 71 (factor -> FLOAT .)
    VAR             reduce using rule 71 (factor -> FLOAT .)
    VAL             reduce using rule 71 (factor -> FLOAT .)
    ARRAYLIST       reduce using rule 71 (factor -> FLOAT .)
    STACK           reduce using rule 71 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 71 (factor -> FLOAT .)
    RCURL           reduce using rule 71 (factor -> FLOAT .)


state 39

    (72) factor -> LONG .

    CONJ            reduce using rule 72 (factor -> LONG .)
    DISJ            reduce using rule 72 (factor -> LONG .)
    LANGLE          reduce using rule 72 (factor -> LONG .)
    RANGLE          reduce using rule 72 (factor -> LONG .)
    LE              reduce using rule 72 (factor -> LONG .)
    GE              reduce using rule 72 (factor -> LONG .)
    EXCL_EQ         reduce using rule 72 (factor -> LONG .)
    EXCL_EQEQ       reduce using rule 72 (factor -> LONG .)
    AS_SAFE         reduce using rule 72 (factor -> LONG .)
    EQEQ            reduce using rule 72 (factor -> LONG .)
    EQEQEQ          reduce using rule 72 (factor -> LONG .)
    PLUS            reduce using rule 72 (factor -> LONG .)
    MINUS           reduce using rule 72 (factor -> LONG .)
    TIMES           reduce using rule 72 (factor -> LONG .)
    DIVIDE          reduce using rule 72 (factor -> LONG .)
    MOD             reduce using rule 72 (factor -> LONG .)
    INCREMENTONE    reduce using rule 72 (factor -> LONG .)
    DECREMENTONE    reduce using rule 72 (factor -> LONG .)
    $end            reduce using rule 72 (factor -> LONG .)
    RPAREN          reduce using rule 72 (factor -> LONG .)
    LPAREN          reduce using rule 72 (factor -> LONG .)
    FOR             reduce using rule 72 (factor -> LONG .)
    IF              reduce using rule 72 (factor -> LONG .)
    WHILE           reduce using rule 72 (factor -> LONG .)
    EXCL_WS         reduce using rule 72 (factor -> LONG .)
    PRINT           reduce using rule 72 (factor -> LONG .)
    PRINTLN         reduce using rule 72 (factor -> LONG .)
    INT             reduce using rule 72 (factor -> LONG .)
    FLOAT           reduce using rule 72 (factor -> LONG .)
    LONG            reduce using rule 72 (factor -> LONG .)
    CHAR            reduce using rule 72 (factor -> LONG .)
    BOOLEAN         reduce using rule 72 (factor -> LONG .)
    ID              reduce using rule 72 (factor -> LONG .)
    STRING_1        reduce using rule 72 (factor -> LONG .)
    VAR             reduce using rule 72 (factor -> LONG .)
    VAL             reduce using rule 72 (factor -> LONG .)
    ARRAYLIST       reduce using rule 72 (factor -> LONG .)
    STACK           reduce using rule 72 (factor -> LONG .)
    SEMICOLON       reduce using rule 72 (factor -> LONG .)
    RCURL           reduce using rule 72 (factor -> LONG .)


state 40

    (73) factor -> CHAR .

    CONJ            reduce using rule 73 (factor -> CHAR .)
    DISJ            reduce using rule 73 (factor -> CHAR .)
    LANGLE          reduce using rule 73 (factor -> CHAR .)
    RANGLE          reduce using rule 73 (factor -> CHAR .)
    LE              reduce using rule 73 (factor -> CHAR .)
    GE              reduce using rule 73 (factor -> CHAR .)
    EXCL_EQ         reduce using rule 73 (factor -> CHAR .)
    EXCL_EQEQ       reduce using rule 73 (factor -> CHAR .)
    AS_SAFE         reduce using rule 73 (factor -> CHAR .)
    EQEQ            reduce using rule 73 (factor -> CHAR .)
    EQEQEQ          reduce using rule 73 (factor -> CHAR .)
    PLUS            reduce using rule 73 (factor -> CHAR .)
    MINUS           reduce using rule 73 (factor -> CHAR .)
    TIMES           reduce using rule 73 (factor -> CHAR .)
    DIVIDE          reduce using rule 73 (factor -> CHAR .)
    MOD             reduce using rule 73 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 73 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 73 (factor -> CHAR .)
    $end            reduce using rule 73 (factor -> CHAR .)
    RPAREN          reduce using rule 73 (factor -> CHAR .)
    LPAREN          reduce using rule 73 (factor -> CHAR .)
    FOR             reduce using rule 73 (factor -> CHAR .)
    IF              reduce using rule 73 (factor -> CHAR .)
    WHILE           reduce using rule 73 (factor -> CHAR .)
    EXCL_WS         reduce using rule 73 (factor -> CHAR .)
    PRINT           reduce using rule 73 (factor -> CHAR .)
    PRINTLN         reduce using rule 73 (factor -> CHAR .)
    INT             reduce using rule 73 (factor -> CHAR .)
    FLOAT           reduce using rule 73 (factor -> CHAR .)
    LONG            reduce using rule 73 (factor -> CHAR .)
    CHAR            reduce using rule 73 (factor -> CHAR .)
    BOOLEAN         reduce using rule 73 (factor -> CHAR .)
    ID              reduce using rule 73 (factor -> CHAR .)
    STRING_1        reduce using rule 73 (factor -> CHAR .)
    VAR             reduce using rule 73 (factor -> CHAR .)
    VAL             reduce using rule 73 (factor -> CHAR .)
    ARRAYLIST       reduce using rule 73 (factor -> CHAR .)
    STACK           reduce using rule 73 (factor -> CHAR .)
    SEMICOLON       reduce using rule 73 (factor -> CHAR .)
    RCURL           reduce using rule 73 (factor -> CHAR .)


state 41

    (74) factor -> BOOLEAN .

    CONJ            reduce using rule 74 (factor -> BOOLEAN .)
    DISJ            reduce using rule 74 (factor -> BOOLEAN .)
    LANGLE          reduce using rule 74 (factor -> BOOLEAN .)
    RANGLE          reduce using rule 74 (factor -> BOOLEAN .)
    LE              reduce using rule 74 (factor -> BOOLEAN .)
    GE              reduce using rule 74 (factor -> BOOLEAN .)
    EXCL_EQ         reduce using rule 74 (factor -> BOOLEAN .)
    EXCL_EQEQ       reduce using rule 74 (factor -> BOOLEAN .)
    AS_SAFE         reduce using rule 74 (factor -> BOOLEAN .)
    EQEQ            reduce using rule 74 (factor -> BOOLEAN .)
    EQEQEQ          reduce using rule 74 (factor -> BOOLEAN .)
    PLUS            reduce using rule 74 (factor -> BOOLEAN .)
    MINUS           reduce using rule 74 (factor -> BOOLEAN .)
    TIMES           reduce using rule 74 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 74 (factor -> BOOLEAN .)
    MOD             reduce using rule 74 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    $end            reduce using rule 74 (factor -> BOOLEAN .)
    RPAREN          reduce using rule 74 (factor -> BOOLEAN .)
    LPAREN          reduce using rule 74 (factor -> BOOLEAN .)
    FOR             reduce using rule 74 (factor -> BOOLEAN .)
    IF              reduce using rule 74 (factor -> BOOLEAN .)
    WHILE           reduce using rule 74 (factor -> BOOLEAN .)
    EXCL_WS         reduce using rule 74 (factor -> BOOLEAN .)
    PRINT           reduce using rule 74 (factor -> BOOLEAN .)
    PRINTLN         reduce using rule 74 (factor -> BOOLEAN .)
    INT             reduce using rule 74 (factor -> BOOLEAN .)
    FLOAT           reduce using rule 74 (factor -> BOOLEAN .)
    LONG            reduce using rule 74 (factor -> BOOLEAN .)
    CHAR            reduce using rule 74 (factor -> BOOLEAN .)
    BOOLEAN         reduce using rule 74 (factor -> BOOLEAN .)
    ID              reduce using rule 74 (factor -> BOOLEAN .)
    STRING_1        reduce using rule 74 (factor -> BOOLEAN .)
    VAR             reduce using rule 74 (factor -> BOOLEAN .)
    VAL             reduce using rule 74 (factor -> BOOLEAN .)
    ARRAYLIST       reduce using rule 74 (factor -> BOOLEAN .)
    STACK           reduce using rule 74 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 74 (factor -> BOOLEAN .)
    RCURL           reduce using rule 74 (factor -> BOOLEAN .)


state 42

    (76) factor -> STRING_1 .

    CONJ            reduce using rule 76 (factor -> STRING_1 .)
    DISJ            reduce using rule 76 (factor -> STRING_1 .)
    LANGLE          reduce using rule 76 (factor -> STRING_1 .)
    RANGLE          reduce using rule 76 (factor -> STRING_1 .)
    LE              reduce using rule 76 (factor -> STRING_1 .)
    GE              reduce using rule 76 (factor -> STRING_1 .)
    EXCL_EQ         reduce using rule 76 (factor -> STRING_1 .)
    EXCL_EQEQ       reduce using rule 76 (factor -> STRING_1 .)
    AS_SAFE         reduce using rule 76 (factor -> STRING_1 .)
    EQEQ            reduce using rule 76 (factor -> STRING_1 .)
    EQEQEQ          reduce using rule 76 (factor -> STRING_1 .)
    PLUS            reduce using rule 76 (factor -> STRING_1 .)
    MINUS           reduce using rule 76 (factor -> STRING_1 .)
    TIMES           reduce using rule 76 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 76 (factor -> STRING_1 .)
    MOD             reduce using rule 76 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    $end            reduce using rule 76 (factor -> STRING_1 .)
    RPAREN          reduce using rule 76 (factor -> STRING_1 .)
    LPAREN          reduce using rule 76 (factor -> STRING_1 .)
    FOR             reduce using rule 76 (factor -> STRING_1 .)
    IF              reduce using rule 76 (factor -> STRING_1 .)
    WHILE           reduce using rule 76 (factor -> STRING_1 .)
    EXCL_WS         reduce using rule 76 (factor -> STRING_1 .)
    PRINT           reduce using rule 76 (factor -> STRING_1 .)
    PRINTLN         reduce using rule 76 (factor -> STRING_1 .)
    INT             reduce using rule 76 (factor -> STRING_1 .)
    FLOAT           reduce using rule 76 (factor -> STRING_1 .)
    LONG            reduce using rule 76 (factor -> STRING_1 .)
    CHAR            reduce using rule 76 (factor -> STRING_1 .)
    BOOLEAN         reduce using rule 76 (factor -> STRING_1 .)
    ID              reduce using rule 76 (factor -> STRING_1 .)
    STRING_1        reduce using rule 76 (factor -> STRING_1 .)
    VAR             reduce using rule 76 (factor -> STRING_1 .)
    VAL             reduce using rule 76 (factor -> STRING_1 .)
    ARRAYLIST       reduce using rule 76 (factor -> STRING_1 .)
    STACK           reduce using rule 76 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 76 (factor -> STRING_1 .)
    RCURL           reduce using rule 76 (factor -> STRING_1 .)


state 43

    (42) keywordVariables -> VAR .

    ID              reduce using rule 42 (keywordVariables -> VAR .)


state 44

    (43) keywordVariables -> VAL .
    (33) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 86

  ! ID              [ reduce using rule 43 (keywordVariables -> VAL .) ]


state 45

    (23) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 23 (queue_operations -> queue_add .)
    $end            reduce using rule 23 (queue_operations -> queue_add .)
    LPAREN          reduce using rule 23 (queue_operations -> queue_add .)
    FOR             reduce using rule 23 (queue_operations -> queue_add .)
    IF              reduce using rule 23 (queue_operations -> queue_add .)
    WHILE           reduce using rule 23 (queue_operations -> queue_add .)
    EXCL_WS         reduce using rule 23 (queue_operations -> queue_add .)
    PRINT           reduce using rule 23 (queue_operations -> queue_add .)
    PRINTLN         reduce using rule 23 (queue_operations -> queue_add .)
    INT             reduce using rule 23 (queue_operations -> queue_add .)
    FLOAT           reduce using rule 23 (queue_operations -> queue_add .)
    LONG            reduce using rule 23 (queue_operations -> queue_add .)
    CHAR            reduce using rule 23 (queue_operations -> queue_add .)
    BOOLEAN         reduce using rule 23 (queue_operations -> queue_add .)
    ID              reduce using rule 23 (queue_operations -> queue_add .)
    STRING_1        reduce using rule 23 (queue_operations -> queue_add .)
    VAR             reduce using rule 23 (queue_operations -> queue_add .)
    VAL             reduce using rule 23 (queue_operations -> queue_add .)
    ARRAYLIST       reduce using rule 23 (queue_operations -> queue_add .)
    STACK           reduce using rule 23 (queue_operations -> queue_add .)
    RCURL           reduce using rule 23 (queue_operations -> queue_add .)


state 46

    (24) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 24 (queue_operations -> queue_peek .)
    $end            reduce using rule 24 (queue_operations -> queue_peek .)
    LPAREN          reduce using rule 24 (queue_operations -> queue_peek .)
    FOR             reduce using rule 24 (queue_operations -> queue_peek .)
    IF              reduce using rule 24 (queue_operations -> queue_peek .)
    WHILE           reduce using rule 24 (queue_operations -> queue_peek .)
    EXCL_WS         reduce using rule 24 (queue_operations -> queue_peek .)
    PRINT           reduce using rule 24 (queue_operations -> queue_peek .)
    PRINTLN         reduce using rule 24 (queue_operations -> queue_peek .)
    INT             reduce using rule 24 (queue_operations -> queue_peek .)
    FLOAT           reduce using rule 24 (queue_operations -> queue_peek .)
    LONG            reduce using rule 24 (queue_operations -> queue_peek .)
    CHAR            reduce using rule 24 (queue_operations -> queue_peek .)
    BOOLEAN         reduce using rule 24 (queue_operations -> queue_peek .)
    ID              reduce using rule 24 (queue_operations -> queue_peek .)
    STRING_1        reduce using rule 24 (queue_operations -> queue_peek .)
    VAR             reduce using rule 24 (queue_operations -> queue_peek .)
    VAL             reduce using rule 24 (queue_operations -> queue_peek .)
    ARRAYLIST       reduce using rule 24 (queue_operations -> queue_peek .)
    STACK           reduce using rule 24 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 24 (queue_operations -> queue_peek .)


state 47

    (25) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 25 (queue_operations -> queue_remove .)
    $end            reduce using rule 25 (queue_operations -> queue_remove .)
    LPAREN          reduce using rule 25 (queue_operations -> queue_remove .)
    FOR             reduce using rule 25 (queue_operations -> queue_remove .)
    IF              reduce using rule 25 (queue_operations -> queue_remove .)
    WHILE           reduce using rule 25 (queue_operations -> queue_remove .)
    EXCL_WS         reduce using rule 25 (queue_operations -> queue_remove .)
    PRINT           reduce using rule 25 (queue_operations -> queue_remove .)
    PRINTLN         reduce using rule 25 (queue_operations -> queue_remove .)
    INT             reduce using rule 25 (queue_operations -> queue_remove .)
    FLOAT           reduce using rule 25 (queue_operations -> queue_remove .)
    LONG            reduce using rule 25 (queue_operations -> queue_remove .)
    CHAR            reduce using rule 25 (queue_operations -> queue_remove .)
    BOOLEAN         reduce using rule 25 (queue_operations -> queue_remove .)
    ID              reduce using rule 25 (queue_operations -> queue_remove .)
    STRING_1        reduce using rule 25 (queue_operations -> queue_remove .)
    VAR             reduce using rule 25 (queue_operations -> queue_remove .)
    VAL             reduce using rule 25 (queue_operations -> queue_remove .)
    ARRAYLIST       reduce using rule 25 (queue_operations -> queue_remove .)
    STACK           reduce using rule 25 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 25 (queue_operations -> queue_remove .)


state 48

    (26) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 26 (queue_operations -> queue_poll .)
    $end            reduce using rule 26 (queue_operations -> queue_poll .)
    LPAREN          reduce using rule 26 (queue_operations -> queue_poll .)
    FOR             reduce using rule 26 (queue_operations -> queue_poll .)
    IF              reduce using rule 26 (queue_operations -> queue_poll .)
    WHILE           reduce using rule 26 (queue_operations -> queue_poll .)
    EXCL_WS         reduce using rule 26 (queue_operations -> queue_poll .)
    PRINT           reduce using rule 26 (queue_operations -> queue_poll .)
    PRINTLN         reduce using rule 26 (queue_operations -> queue_poll .)
    INT             reduce using rule 26 (queue_operations -> queue_poll .)
    FLOAT           reduce using rule 26 (queue_operations -> queue_poll .)
    LONG            reduce using rule 26 (queue_operations -> queue_poll .)
    CHAR            reduce using rule 26 (queue_operations -> queue_poll .)
    BOOLEAN         reduce using rule 26 (queue_operations -> queue_poll .)
    ID              reduce using rule 26 (queue_operations -> queue_poll .)
    STRING_1        reduce using rule 26 (queue_operations -> queue_poll .)
    VAR             reduce using rule 26 (queue_operations -> queue_poll .)
    VAL             reduce using rule 26 (queue_operations -> queue_poll .)
    ARRAYLIST       reduce using rule 26 (queue_operations -> queue_poll .)
    STACK           reduce using rule 26 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 26 (queue_operations -> queue_poll .)


state 49

    (99) instance_arraylist -> ARRAYLIST . LPAREN RPAREN

    LPAREN          shift and go to state 87


state 50

    (98) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 88


state 51

    (60) expression -> expression PLUS . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 89
    factor                         shift and go to state 17

state 52

    (61) expression -> expression MINUS . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 90
    factor                         shift and go to state 17

state 53

    (62) expression -> expression TIMES . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 91
    factor                         shift and go to state 17

state 54

    (63) expression -> expression DIVIDE . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 92
    factor                         shift and go to state 17

state 55

    (64) expression -> expression MOD . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 93
    factor                         shift and go to state 17

state 56

    (65) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 65 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 65 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 65 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 65 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 65 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 65 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 65 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 65 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 65 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 65 (expression -> expression INCREMENTONE .)
    LPAREN          reduce using rule 65 (expression -> expression INCREMENTONE .)
    FOR             reduce using rule 65 (expression -> expression INCREMENTONE .)
    IF              reduce using rule 65 (expression -> expression INCREMENTONE .)
    WHILE           reduce using rule 65 (expression -> expression INCREMENTONE .)
    EXCL_WS         reduce using rule 65 (expression -> expression INCREMENTONE .)
    PRINT           reduce using rule 65 (expression -> expression INCREMENTONE .)
    PRINTLN         reduce using rule 65 (expression -> expression INCREMENTONE .)
    INT             reduce using rule 65 (expression -> expression INCREMENTONE .)
    FLOAT           reduce using rule 65 (expression -> expression INCREMENTONE .)
    LONG            reduce using rule 65 (expression -> expression INCREMENTONE .)
    CHAR            reduce using rule 65 (expression -> expression INCREMENTONE .)
    BOOLEAN         reduce using rule 65 (expression -> expression INCREMENTONE .)
    ID              reduce using rule 65 (expression -> expression INCREMENTONE .)
    STRING_1        reduce using rule 65 (expression -> expression INCREMENTONE .)
    VAR             reduce using rule 65 (expression -> expression INCREMENTONE .)
    VAL             reduce using rule 65 (expression -> expression INCREMENTONE .)
    ARRAYLIST       reduce using rule 65 (expression -> expression INCREMENTONE .)
    STACK           reduce using rule 65 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 65 (expression -> expression INCREMENTONE .)


state 57

    (66) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 66 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 66 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 66 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 66 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 66 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 66 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 66 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 66 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 66 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 66 (expression -> expression DECREMENTONE .)
    LPAREN          reduce using rule 66 (expression -> expression DECREMENTONE .)
    FOR             reduce using rule 66 (expression -> expression DECREMENTONE .)
    IF              reduce using rule 66 (expression -> expression DECREMENTONE .)
    WHILE           reduce using rule 66 (expression -> expression DECREMENTONE .)
    EXCL_WS         reduce using rule 66 (expression -> expression DECREMENTONE .)
    PRINT           reduce using rule 66 (expression -> expression DECREMENTONE .)
    PRINTLN         reduce using rule 66 (expression -> expression DECREMENTONE .)
    INT             reduce using rule 66 (expression -> expression DECREMENTONE .)
    FLOAT           reduce using rule 66 (expression -> expression DECREMENTONE .)
    LONG            reduce using rule 66 (expression -> expression DECREMENTONE .)
    CHAR            reduce using rule 66 (expression -> expression DECREMENTONE .)
    BOOLEAN         reduce using rule 66 (expression -> expression DECREMENTONE .)
    ID              reduce using rule 66 (expression -> expression DECREMENTONE .)
    STRING_1        reduce using rule 66 (expression -> expression DECREMENTONE .)
    VAR             reduce using rule 66 (expression -> expression DECREMENTONE .)
    VAL             reduce using rule 66 (expression -> expression DECREMENTONE .)
    ARRAYLIST       reduce using rule 66 (expression -> expression DECREMENTONE .)
    STACK           reduce using rule 66 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 66 (expression -> expression DECREMENTONE .)


state 58

    (9) lineas -> blocks SEMICOLON .

    $end            reduce using rule 9 (lineas -> blocks SEMICOLON .)
    LPAREN          reduce using rule 9 (lineas -> blocks SEMICOLON .)
    FOR             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    IF              reduce using rule 9 (lineas -> blocks SEMICOLON .)
    WHILE           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    EXCL_WS         reduce using rule 9 (lineas -> blocks SEMICOLON .)
    PRINT           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    PRINTLN         reduce using rule 9 (lineas -> blocks SEMICOLON .)
    INT             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    FLOAT           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    LONG            reduce using rule 9 (lineas -> blocks SEMICOLON .)
    CHAR            reduce using rule 9 (lineas -> blocks SEMICOLON .)
    BOOLEAN         reduce using rule 9 (lineas -> blocks SEMICOLON .)
    ID              reduce using rule 9 (lineas -> blocks SEMICOLON .)
    STRING_1        reduce using rule 9 (lineas -> blocks SEMICOLON .)
    VAR             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    VAL             reduce using rule 9 (lineas -> blocks SEMICOLON .)
    ARRAYLIST       reduce using rule 9 (lineas -> blocks SEMICOLON .)
    STACK           reduce using rule 9 (lineas -> blocks SEMICOLON .)
    SEMICOLON       reduce using rule 9 (lineas -> blocks SEMICOLON .)
    RCURL           reduce using rule 9 (lineas -> blocks SEMICOLON .)


state 59

    (83) condicionL -> term opL . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 94
    factor                         shift and go to state 17

state 60

    (84) condicionR -> term opR . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    term                           shift and go to state 95
    factor                         shift and go to state 17

state 61

    (86) opL -> CONJ .

    LPAREN          reduce using rule 86 (opL -> CONJ .)
    INT             reduce using rule 86 (opL -> CONJ .)
    FLOAT           reduce using rule 86 (opL -> CONJ .)
    LONG            reduce using rule 86 (opL -> CONJ .)
    CHAR            reduce using rule 86 (opL -> CONJ .)
    BOOLEAN         reduce using rule 86 (opL -> CONJ .)
    ID              reduce using rule 86 (opL -> CONJ .)
    STRING_1        reduce using rule 86 (opL -> CONJ .)


state 62

    (87) opL -> DISJ .

    LPAREN          reduce using rule 87 (opL -> DISJ .)
    INT             reduce using rule 87 (opL -> DISJ .)
    FLOAT           reduce using rule 87 (opL -> DISJ .)
    LONG            reduce using rule 87 (opL -> DISJ .)
    CHAR            reduce using rule 87 (opL -> DISJ .)
    BOOLEAN         reduce using rule 87 (opL -> DISJ .)
    ID              reduce using rule 87 (opL -> DISJ .)
    STRING_1        reduce using rule 87 (opL -> DISJ .)


state 63

    (88) opR -> LANGLE .

    LPAREN          reduce using rule 88 (opR -> LANGLE .)
    INT             reduce using rule 88 (opR -> LANGLE .)
    FLOAT           reduce using rule 88 (opR -> LANGLE .)
    LONG            reduce using rule 88 (opR -> LANGLE .)
    CHAR            reduce using rule 88 (opR -> LANGLE .)
    BOOLEAN         reduce using rule 88 (opR -> LANGLE .)
    ID              reduce using rule 88 (opR -> LANGLE .)
    STRING_1        reduce using rule 88 (opR -> LANGLE .)


state 64

    (89) opR -> RANGLE .

    LPAREN          reduce using rule 89 (opR -> RANGLE .)
    INT             reduce using rule 89 (opR -> RANGLE .)
    FLOAT           reduce using rule 89 (opR -> RANGLE .)
    LONG            reduce using rule 89 (opR -> RANGLE .)
    CHAR            reduce using rule 89 (opR -> RANGLE .)
    BOOLEAN         reduce using rule 89 (opR -> RANGLE .)
    ID              reduce using rule 89 (opR -> RANGLE .)
    STRING_1        reduce using rule 89 (opR -> RANGLE .)


state 65

    (90) opR -> LE .

    LPAREN          reduce using rule 90 (opR -> LE .)
    INT             reduce using rule 90 (opR -> LE .)
    FLOAT           reduce using rule 90 (opR -> LE .)
    LONG            reduce using rule 90 (opR -> LE .)
    CHAR            reduce using rule 90 (opR -> LE .)
    BOOLEAN         reduce using rule 90 (opR -> LE .)
    ID              reduce using rule 90 (opR -> LE .)
    STRING_1        reduce using rule 90 (opR -> LE .)


state 66

    (91) opR -> GE .

    LPAREN          reduce using rule 91 (opR -> GE .)
    INT             reduce using rule 91 (opR -> GE .)
    FLOAT           reduce using rule 91 (opR -> GE .)
    LONG            reduce using rule 91 (opR -> GE .)
    CHAR            reduce using rule 91 (opR -> GE .)
    BOOLEAN         reduce using rule 91 (opR -> GE .)
    ID              reduce using rule 91 (opR -> GE .)
    STRING_1        reduce using rule 91 (opR -> GE .)


state 67

    (92) opR -> EXCL_EQ .

    LPAREN          reduce using rule 92 (opR -> EXCL_EQ .)
    INT             reduce using rule 92 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 92 (opR -> EXCL_EQ .)
    LONG            reduce using rule 92 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 92 (opR -> EXCL_EQ .)
    BOOLEAN         reduce using rule 92 (opR -> EXCL_EQ .)
    ID              reduce using rule 92 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 92 (opR -> EXCL_EQ .)


state 68

    (93) opR -> EXCL_EQEQ .

    LPAREN          reduce using rule 93 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 93 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 93 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 93 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 93 (opR -> EXCL_EQEQ .)
    BOOLEAN         reduce using rule 93 (opR -> EXCL_EQEQ .)
    ID              reduce using rule 93 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 93 (opR -> EXCL_EQEQ .)


state 69

    (94) opR -> AS_SAFE .

    LPAREN          reduce using rule 94 (opR -> AS_SAFE .)
    INT             reduce using rule 94 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 94 (opR -> AS_SAFE .)
    LONG            reduce using rule 94 (opR -> AS_SAFE .)
    CHAR            reduce using rule 94 (opR -> AS_SAFE .)
    BOOLEAN         reduce using rule 94 (opR -> AS_SAFE .)
    ID              reduce using rule 94 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 94 (opR -> AS_SAFE .)


state 70

    (95) opR -> EQEQ .

    LPAREN          reduce using rule 95 (opR -> EQEQ .)
    INT             reduce using rule 95 (opR -> EQEQ .)
    FLOAT           reduce using rule 95 (opR -> EQEQ .)
    LONG            reduce using rule 95 (opR -> EQEQ .)
    CHAR            reduce using rule 95 (opR -> EQEQ .)
    BOOLEAN         reduce using rule 95 (opR -> EQEQ .)
    ID              reduce using rule 95 (opR -> EQEQ .)
    STRING_1        reduce using rule 95 (opR -> EQEQ .)


state 71

    (96) opR -> EQEQEQ .

    LPAREN          reduce using rule 96 (opR -> EQEQEQ .)
    INT             reduce using rule 96 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 96 (opR -> EQEQEQ .)
    LONG            reduce using rule 96 (opR -> EQEQEQ .)
    CHAR            reduce using rule 96 (opR -> EQEQEQ .)
    BOOLEAN         reduce using rule 96 (opR -> EQEQEQ .)
    ID              reduce using rule 96 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 96 (opR -> EQEQEQ .)


state 72

    (69) term -> LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 73

    (67) expression -> term .

    RPAREN          reduce using rule 67 (expression -> term .)
    PLUS            reduce using rule 67 (expression -> term .)
    MINUS           reduce using rule 67 (expression -> term .)
    TIMES           reduce using rule 67 (expression -> term .)
    DIVIDE          reduce using rule 67 (expression -> term .)
    MOD             reduce using rule 67 (expression -> term .)
    INCREMENTONE    reduce using rule 67 (expression -> term .)
    DECREMENTONE    reduce using rule 67 (expression -> term .)
    SEMICOLON       reduce using rule 67 (expression -> term .)
    $end            reduce using rule 67 (expression -> term .)
    LPAREN          reduce using rule 67 (expression -> term .)
    FOR             reduce using rule 67 (expression -> term .)
    IF              reduce using rule 67 (expression -> term .)
    WHILE           reduce using rule 67 (expression -> term .)
    EXCL_WS         reduce using rule 67 (expression -> term .)
    PRINT           reduce using rule 67 (expression -> term .)
    PRINTLN         reduce using rule 67 (expression -> term .)
    INT             reduce using rule 67 (expression -> term .)
    FLOAT           reduce using rule 67 (expression -> term .)
    LONG            reduce using rule 67 (expression -> term .)
    CHAR            reduce using rule 67 (expression -> term .)
    BOOLEAN         reduce using rule 67 (expression -> term .)
    ID              reduce using rule 67 (expression -> term .)
    STRING_1        reduce using rule 67 (expression -> term .)
    VAR             reduce using rule 67 (expression -> term .)
    VAL             reduce using rule 67 (expression -> term .)
    ARRAYLIST       reduce using rule 67 (expression -> term .)
    STACK           reduce using rule 67 (expression -> term .)
    RCURL           reduce using rule 67 (expression -> term .)


state 74

    (75) factor -> ID .

    RPAREN          reduce using rule 75 (factor -> ID .)
    PLUS            reduce using rule 75 (factor -> ID .)
    MINUS           reduce using rule 75 (factor -> ID .)
    TIMES           reduce using rule 75 (factor -> ID .)
    DIVIDE          reduce using rule 75 (factor -> ID .)
    MOD             reduce using rule 75 (factor -> ID .)
    INCREMENTONE    reduce using rule 75 (factor -> ID .)
    DECREMENTONE    reduce using rule 75 (factor -> ID .)
    $end            reduce using rule 75 (factor -> ID .)
    LPAREN          reduce using rule 75 (factor -> ID .)
    FOR             reduce using rule 75 (factor -> ID .)
    IF              reduce using rule 75 (factor -> ID .)
    WHILE           reduce using rule 75 (factor -> ID .)
    EXCL_WS         reduce using rule 75 (factor -> ID .)
    PRINT           reduce using rule 75 (factor -> ID .)
    PRINTLN         reduce using rule 75 (factor -> ID .)
    INT             reduce using rule 75 (factor -> ID .)
    FLOAT           reduce using rule 75 (factor -> ID .)
    LONG            reduce using rule 75 (factor -> ID .)
    CHAR            reduce using rule 75 (factor -> ID .)
    BOOLEAN         reduce using rule 75 (factor -> ID .)
    ID              reduce using rule 75 (factor -> ID .)
    STRING_1        reduce using rule 75 (factor -> ID .)
    VAR             reduce using rule 75 (factor -> ID .)
    VAL             reduce using rule 75 (factor -> ID .)
    ARRAYLIST       reduce using rule 75 (factor -> ID .)
    STACK           reduce using rule 75 (factor -> ID .)
    SEMICOLON       reduce using rule 75 (factor -> ID .)
    RCURL           reduce using rule 75 (factor -> ID .)
    CONJ            reduce using rule 75 (factor -> ID .)
    DISJ            reduce using rule 75 (factor -> ID .)
    LANGLE          reduce using rule 75 (factor -> ID .)
    RANGLE          reduce using rule 75 (factor -> ID .)
    LE              reduce using rule 75 (factor -> ID .)
    GE              reduce using rule 75 (factor -> ID .)
    EXCL_EQ         reduce using rule 75 (factor -> ID .)
    EXCL_EQEQ       reduce using rule 75 (factor -> ID .)
    AS_SAFE         reduce using rule 75 (factor -> ID .)
    EQEQ            reduce using rule 75 (factor -> ID .)
    EQEQEQ          reduce using rule 75 (factor -> ID .)


state 75

    (34) for -> FOR LPAREN . ID IN iterable RPAREN LCURL morelines RCURL

    ID              shift and go to state 97


state 76

    (44) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (46) tipoDatoEspecifico -> . TINT EQUAL INT
    (47) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (48) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (49) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (50) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (51) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    TINT            shift and go to state 99
    TLONG           shift and go to state 100
    TFLOAT          shift and go to state 101
    TBOOLEAN        shift and go to state 102
    TCHAR           shift and go to state 103
    TSTRING         shift and go to state 104

    tipoDatoEspecifico             shift and go to state 98

state 77

    (45) asignacionSimple -> ID EQUAL . valor
    (59) valor -> . expression
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    valor                          shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 73
    factor                         shift and go to state 17

state 78

    (100) stack_actuar -> ID DOT . stack_funciones
    (119) lsimplem -> ID DOT . Lmetod
    (120) lcomp -> ID DOT . Cmetod
    (27) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (28) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (30) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (29) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (101) stack_funciones -> . stack_isEmpty
    (102) stack_funciones -> . stack_push
    (103) stack_funciones -> . stack_pop
    (104) stack_funciones -> . stack_peek
    (105) stack_funciones -> . stack_size
    (111) Lmetod -> . FIRST LPAREN RPAREN
    (112) Lmetod -> . LAST LPAREN RPAREN
    (113) Lmetod -> . REMOVEL LPAREN RPAREN
    (114) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (115) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (116) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (106) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (108) stack_push -> . PUSH LPAREN ID RPAREN
    (107) stack_pop -> . POP LPAREN RPAREN
    (109) stack_peek -> . PEEK LPAREN RPAREN
    (110) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 110
    PEEK            shift and go to state 111
    REMOVE          shift and go to state 112
    POLL            shift and go to state 113
    FIRST           shift and go to state 119
    LAST            shift and go to state 120
    REMOVEL         shift and go to state 121
    APPEND          shift and go to state 122
    REMOVEN         shift and go to state 123
    REMOVEI         shift and go to state 124
    ISEMPTY         shift and go to state 125
    PUSH            shift and go to state 126
    POP             shift and go to state 127
    SIZE            shift and go to state 128

    stack_funciones                shift and go to state 107
    Lmetod                         shift and go to state 108
    Cmetod                         shift and go to state 109
    stack_isEmpty                  shift and go to state 114
    stack_push                     shift and go to state 115
    stack_pop                      shift and go to state 116
    stack_peek                     shift and go to state 117
    stack_size                     shift and go to state 118

state 79

    (77) if -> IF LPAREN . condicion RPAREN LCURL morelines RCURL
    (78) if -> IF LPAREN . condicion RPAREN LCURL morelines RCURL else
    (80) condicion -> . condicionL
    (81) condicion -> . condicionR
    (82) condicion -> . condicionN
    (83) condicionL -> . term opL term
    (84) condicionR -> . term opR term
    (85) condicionN -> . EXCL_WS term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    EXCL_WS         shift and go to state 24
    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    condicion                      shift and go to state 129
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    term                           shift and go to state 130
    factor                         shift and go to state 17

state 80

    (117) while -> WHILE LPAREN . ID opR INT RPAREN LCURL morelines RCURL

    ID              shift and go to state 131


state 81

    (85) condicionN -> EXCL_WS term .

    $end            reduce using rule 85 (condicionN -> EXCL_WS term .)
    RPAREN          reduce using rule 85 (condicionN -> EXCL_WS term .)
    LPAREN          reduce using rule 85 (condicionN -> EXCL_WS term .)
    FOR             reduce using rule 85 (condicionN -> EXCL_WS term .)
    IF              reduce using rule 85 (condicionN -> EXCL_WS term .)
    WHILE           reduce using rule 85 (condicionN -> EXCL_WS term .)
    EXCL_WS         reduce using rule 85 (condicionN -> EXCL_WS term .)
    PRINT           reduce using rule 85 (condicionN -> EXCL_WS term .)
    PRINTLN         reduce using rule 85 (condicionN -> EXCL_WS term .)
    INT             reduce using rule 85 (condicionN -> EXCL_WS term .)
    FLOAT           reduce using rule 85 (condicionN -> EXCL_WS term .)
    LONG            reduce using rule 85 (condicionN -> EXCL_WS term .)
    CHAR            reduce using rule 85 (condicionN -> EXCL_WS term .)
    BOOLEAN         reduce using rule 85 (condicionN -> EXCL_WS term .)
    ID              reduce using rule 85 (condicionN -> EXCL_WS term .)
    STRING_1        reduce using rule 85 (condicionN -> EXCL_WS term .)
    VAR             reduce using rule 85 (condicionN -> EXCL_WS term .)
    VAL             reduce using rule 85 (condicionN -> EXCL_WS term .)
    ARRAYLIST       reduce using rule 85 (condicionN -> EXCL_WS term .)
    STACK           reduce using rule 85 (condicionN -> EXCL_WS term .)
    SEMICOLON       reduce using rule 85 (condicionN -> EXCL_WS term .)
    RCURL           reduce using rule 85 (condicionN -> EXCL_WS term .)


state 82

    (31) impresion -> PRINT LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    expression                     shift and go to state 132
    term                           shift and go to state 73
    factor                         shift and go to state 17

state 83

    (32) impresion -> PRINTLN LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 18
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    expression                     shift and go to state 133
    term                           shift and go to state 73
    factor                         shift and go to state 17

state 84

    (40) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    LPAREN          reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    FOR             reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    IF              reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    WHILE           reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    EXCL_WS         reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    PRINT           reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    PRINTLN         reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    INT             reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    FLOAT           reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    LONG            reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    CHAR            reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    BOOLEAN         reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    ID              reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    STRING_1        reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    VAR             reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    VAL             reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    ARRAYLIST       reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    STACK           reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)


state 85

    (97) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (118) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (45) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 134
    EQUAL           shift and go to state 77


state 86

    (33) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 135


state 87

    (99) instance_arraylist -> ARRAYLIST LPAREN . RPAREN

    RPAREN          shift and go to state 136


state 88

    (98) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 138
    TLONG           shift and go to state 139
    TFLOAT          shift and go to state 140
    TDOUBLE         shift and go to state 141
    TBOOLEAN        shift and go to state 142
    TCHAR           shift and go to state 143
    TSTRING         shift and go to state 144

    tipoDato                       shift and go to state 137

state 89

    (60) expression -> expression PLUS term .

    PLUS            reduce using rule 60 (expression -> expression PLUS term .)
    MINUS           reduce using rule 60 (expression -> expression PLUS term .)
    TIMES           reduce using rule 60 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 60 (expression -> expression PLUS term .)
    MOD             reduce using rule 60 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 60 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 60 (expression -> expression PLUS term .)
    $end            reduce using rule 60 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 60 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 60 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 60 (expression -> expression PLUS term .)
    FOR             reduce using rule 60 (expression -> expression PLUS term .)
    IF              reduce using rule 60 (expression -> expression PLUS term .)
    WHILE           reduce using rule 60 (expression -> expression PLUS term .)
    EXCL_WS         reduce using rule 60 (expression -> expression PLUS term .)
    PRINT           reduce using rule 60 (expression -> expression PLUS term .)
    PRINTLN         reduce using rule 60 (expression -> expression PLUS term .)
    INT             reduce using rule 60 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 60 (expression -> expression PLUS term .)
    LONG            reduce using rule 60 (expression -> expression PLUS term .)
    CHAR            reduce using rule 60 (expression -> expression PLUS term .)
    BOOLEAN         reduce using rule 60 (expression -> expression PLUS term .)
    ID              reduce using rule 60 (expression -> expression PLUS term .)
    STRING_1        reduce using rule 60 (expression -> expression PLUS term .)
    VAR             reduce using rule 60 (expression -> expression PLUS term .)
    VAL             reduce using rule 60 (expression -> expression PLUS term .)
    ARRAYLIST       reduce using rule 60 (expression -> expression PLUS term .)
    STACK           reduce using rule 60 (expression -> expression PLUS term .)
    RCURL           reduce using rule 60 (expression -> expression PLUS term .)


state 90

    (61) expression -> expression MINUS term .

    PLUS            reduce using rule 61 (expression -> expression MINUS term .)
    MINUS           reduce using rule 61 (expression -> expression MINUS term .)
    TIMES           reduce using rule 61 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 61 (expression -> expression MINUS term .)
    MOD             reduce using rule 61 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 61 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 61 (expression -> expression MINUS term .)
    $end            reduce using rule 61 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 61 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 61 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 61 (expression -> expression MINUS term .)
    FOR             reduce using rule 61 (expression -> expression MINUS term .)
    IF              reduce using rule 61 (expression -> expression MINUS term .)
    WHILE           reduce using rule 61 (expression -> expression MINUS term .)
    EXCL_WS         reduce using rule 61 (expression -> expression MINUS term .)
    PRINT           reduce using rule 61 (expression -> expression MINUS term .)
    PRINTLN         reduce using rule 61 (expression -> expression MINUS term .)
    INT             reduce using rule 61 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 61 (expression -> expression MINUS term .)
    LONG            reduce using rule 61 (expression -> expression MINUS term .)
    CHAR            reduce using rule 61 (expression -> expression MINUS term .)
    BOOLEAN         reduce using rule 61 (expression -> expression MINUS term .)
    ID              reduce using rule 61 (expression -> expression MINUS term .)
    STRING_1        reduce using rule 61 (expression -> expression MINUS term .)
    VAR             reduce using rule 61 (expression -> expression MINUS term .)
    VAL             reduce using rule 61 (expression -> expression MINUS term .)
    ARRAYLIST       reduce using rule 61 (expression -> expression MINUS term .)
    STACK           reduce using rule 61 (expression -> expression MINUS term .)
    RCURL           reduce using rule 61 (expression -> expression MINUS term .)


state 91

    (62) expression -> expression TIMES term .

    PLUS            reduce using rule 62 (expression -> expression TIMES term .)
    MINUS           reduce using rule 62 (expression -> expression TIMES term .)
    TIMES           reduce using rule 62 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 62 (expression -> expression TIMES term .)
    MOD             reduce using rule 62 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 62 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 62 (expression -> expression TIMES term .)
    $end            reduce using rule 62 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 62 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 62 (expression -> expression TIMES term .)
    LPAREN          reduce using rule 62 (expression -> expression TIMES term .)
    FOR             reduce using rule 62 (expression -> expression TIMES term .)
    IF              reduce using rule 62 (expression -> expression TIMES term .)
    WHILE           reduce using rule 62 (expression -> expression TIMES term .)
    EXCL_WS         reduce using rule 62 (expression -> expression TIMES term .)
    PRINT           reduce using rule 62 (expression -> expression TIMES term .)
    PRINTLN         reduce using rule 62 (expression -> expression TIMES term .)
    INT             reduce using rule 62 (expression -> expression TIMES term .)
    FLOAT           reduce using rule 62 (expression -> expression TIMES term .)
    LONG            reduce using rule 62 (expression -> expression TIMES term .)
    CHAR            reduce using rule 62 (expression -> expression TIMES term .)
    BOOLEAN         reduce using rule 62 (expression -> expression TIMES term .)
    ID              reduce using rule 62 (expression -> expression TIMES term .)
    STRING_1        reduce using rule 62 (expression -> expression TIMES term .)
    VAR             reduce using rule 62 (expression -> expression TIMES term .)
    VAL             reduce using rule 62 (expression -> expression TIMES term .)
    ARRAYLIST       reduce using rule 62 (expression -> expression TIMES term .)
    STACK           reduce using rule 62 (expression -> expression TIMES term .)
    RCURL           reduce using rule 62 (expression -> expression TIMES term .)


state 92

    (63) expression -> expression DIVIDE term .

    PLUS            reduce using rule 63 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 63 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 63 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 63 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 63 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 63 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 63 (expression -> expression DIVIDE term .)
    $end            reduce using rule 63 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 63 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 63 (expression -> expression DIVIDE term .)
    LPAREN          reduce using rule 63 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 63 (expression -> expression DIVIDE term .)
    IF              reduce using rule 63 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 63 (expression -> expression DIVIDE term .)
    EXCL_WS         reduce using rule 63 (expression -> expression DIVIDE term .)
    PRINT           reduce using rule 63 (expression -> expression DIVIDE term .)
    PRINTLN         reduce using rule 63 (expression -> expression DIVIDE term .)
    INT             reduce using rule 63 (expression -> expression DIVIDE term .)
    FLOAT           reduce using rule 63 (expression -> expression DIVIDE term .)
    LONG            reduce using rule 63 (expression -> expression DIVIDE term .)
    CHAR            reduce using rule 63 (expression -> expression DIVIDE term .)
    BOOLEAN         reduce using rule 63 (expression -> expression DIVIDE term .)
    ID              reduce using rule 63 (expression -> expression DIVIDE term .)
    STRING_1        reduce using rule 63 (expression -> expression DIVIDE term .)
    VAR             reduce using rule 63 (expression -> expression DIVIDE term .)
    VAL             reduce using rule 63 (expression -> expression DIVIDE term .)
    ARRAYLIST       reduce using rule 63 (expression -> expression DIVIDE term .)
    STACK           reduce using rule 63 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 63 (expression -> expression DIVIDE term .)


state 93

    (64) expression -> expression MOD term .

    PLUS            reduce using rule 64 (expression -> expression MOD term .)
    MINUS           reduce using rule 64 (expression -> expression MOD term .)
    TIMES           reduce using rule 64 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 64 (expression -> expression MOD term .)
    MOD             reduce using rule 64 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 64 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 64 (expression -> expression MOD term .)
    $end            reduce using rule 64 (expression -> expression MOD term .)
    RPAREN          reduce using rule 64 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 64 (expression -> expression MOD term .)
    LPAREN          reduce using rule 64 (expression -> expression MOD term .)
    FOR             reduce using rule 64 (expression -> expression MOD term .)
    IF              reduce using rule 64 (expression -> expression MOD term .)
    WHILE           reduce using rule 64 (expression -> expression MOD term .)
    EXCL_WS         reduce using rule 64 (expression -> expression MOD term .)
    PRINT           reduce using rule 64 (expression -> expression MOD term .)
    PRINTLN         reduce using rule 64 (expression -> expression MOD term .)
    INT             reduce using rule 64 (expression -> expression MOD term .)
    FLOAT           reduce using rule 64 (expression -> expression MOD term .)
    LONG            reduce using rule 64 (expression -> expression MOD term .)
    CHAR            reduce using rule 64 (expression -> expression MOD term .)
    BOOLEAN         reduce using rule 64 (expression -> expression MOD term .)
    ID              reduce using rule 64 (expression -> expression MOD term .)
    STRING_1        reduce using rule 64 (expression -> expression MOD term .)
    VAR             reduce using rule 64 (expression -> expression MOD term .)
    VAL             reduce using rule 64 (expression -> expression MOD term .)
    ARRAYLIST       reduce using rule 64 (expression -> expression MOD term .)
    STACK           reduce using rule 64 (expression -> expression MOD term .)
    RCURL           reduce using rule 64 (expression -> expression MOD term .)


state 94

    (83) condicionL -> term opL term .

    $end            reduce using rule 83 (condicionL -> term opL term .)
    RPAREN          reduce using rule 83 (condicionL -> term opL term .)
    LPAREN          reduce using rule 83 (condicionL -> term opL term .)
    FOR             reduce using rule 83 (condicionL -> term opL term .)
    IF              reduce using rule 83 (condicionL -> term opL term .)
    WHILE           reduce using rule 83 (condicionL -> term opL term .)
    EXCL_WS         reduce using rule 83 (condicionL -> term opL term .)
    PRINT           reduce using rule 83 (condicionL -> term opL term .)
    PRINTLN         reduce using rule 83 (condicionL -> term opL term .)
    INT             reduce using rule 83 (condicionL -> term opL term .)
    FLOAT           reduce using rule 83 (condicionL -> term opL term .)
    LONG            reduce using rule 83 (condicionL -> term opL term .)
    CHAR            reduce using rule 83 (condicionL -> term opL term .)
    BOOLEAN         reduce using rule 83 (condicionL -> term opL term .)
    ID              reduce using rule 83 (condicionL -> term opL term .)
    STRING_1        reduce using rule 83 (condicionL -> term opL term .)
    VAR             reduce using rule 83 (condicionL -> term opL term .)
    VAL             reduce using rule 83 (condicionL -> term opL term .)
    ARRAYLIST       reduce using rule 83 (condicionL -> term opL term .)
    STACK           reduce using rule 83 (condicionL -> term opL term .)
    SEMICOLON       reduce using rule 83 (condicionL -> term opL term .)
    RCURL           reduce using rule 83 (condicionL -> term opL term .)


state 95

    (84) condicionR -> term opR term .

    $end            reduce using rule 84 (condicionR -> term opR term .)
    RPAREN          reduce using rule 84 (condicionR -> term opR term .)
    LPAREN          reduce using rule 84 (condicionR -> term opR term .)
    FOR             reduce using rule 84 (condicionR -> term opR term .)
    IF              reduce using rule 84 (condicionR -> term opR term .)
    WHILE           reduce using rule 84 (condicionR -> term opR term .)
    EXCL_WS         reduce using rule 84 (condicionR -> term opR term .)
    PRINT           reduce using rule 84 (condicionR -> term opR term .)
    PRINTLN         reduce using rule 84 (condicionR -> term opR term .)
    INT             reduce using rule 84 (condicionR -> term opR term .)
    FLOAT           reduce using rule 84 (condicionR -> term opR term .)
    LONG            reduce using rule 84 (condicionR -> term opR term .)
    CHAR            reduce using rule 84 (condicionR -> term opR term .)
    BOOLEAN         reduce using rule 84 (condicionR -> term opR term .)
    ID              reduce using rule 84 (condicionR -> term opR term .)
    STRING_1        reduce using rule 84 (condicionR -> term opR term .)
    VAR             reduce using rule 84 (condicionR -> term opR term .)
    VAL             reduce using rule 84 (condicionR -> term opR term .)
    ARRAYLIST       reduce using rule 84 (condicionR -> term opR term .)
    STACK           reduce using rule 84 (condicionR -> term opR term .)
    SEMICOLON       reduce using rule 84 (condicionR -> term opR term .)
    RCURL           reduce using rule 84 (condicionR -> term opR term .)


state 96

    (69) term -> LPAREN expression RPAREN .

    CONJ            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    DISJ            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    LANGLE          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    RANGLE          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    LE              reduce using rule 69 (term -> LPAREN expression RPAREN .)
    GE              reduce using rule 69 (term -> LPAREN expression RPAREN .)
    EXCL_EQ         reduce using rule 69 (term -> LPAREN expression RPAREN .)
    EXCL_EQEQ       reduce using rule 69 (term -> LPAREN expression RPAREN .)
    AS_SAFE         reduce using rule 69 (term -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    EQEQEQ          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 69 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 69 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 69 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    FOR             reduce using rule 69 (term -> LPAREN expression RPAREN .)
    IF              reduce using rule 69 (term -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    EXCL_WS         reduce using rule 69 (term -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 69 (term -> LPAREN expression RPAREN .)
    INT             reduce using rule 69 (term -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    LONG            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 69 (term -> LPAREN expression RPAREN .)
    ID              reduce using rule 69 (term -> LPAREN expression RPAREN .)
    STRING_1        reduce using rule 69 (term -> LPAREN expression RPAREN .)
    VAR             reduce using rule 69 (term -> LPAREN expression RPAREN .)
    VAL             reduce using rule 69 (term -> LPAREN expression RPAREN .)
    ARRAYLIST       reduce using rule 69 (term -> LPAREN expression RPAREN .)
    STACK           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 69 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 69 (term -> LPAREN expression RPAREN .)


state 97

    (34) for -> FOR LPAREN ID . IN iterable RPAREN LCURL morelines RCURL

    IN              shift and go to state 145


state 98

    (44) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    SEMICOLON       reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LPAREN          reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    FOR             reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    IF              reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    WHILE           reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    EXCL_WS         reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    PRINT           reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    PRINTLN         reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    INT             reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    FLOAT           reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LONG            reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    CHAR            reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    BOOLEAN         reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    ID              reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    STRING_1        reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    VAR             reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    VAL             reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    ARRAYLIST       reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    STACK           reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 99

    (46) tipoDatoEspecifico -> TINT . EQUAL INT

    EQUAL           shift and go to state 146


state 100

    (47) tipoDatoEspecifico -> TLONG . EQUAL LONG

    EQUAL           shift and go to state 147


state 101

    (48) tipoDatoEspecifico -> TFLOAT . EQUAL FLOAT

    EQUAL           shift and go to state 148


state 102

    (49) tipoDatoEspecifico -> TBOOLEAN . EQUAL BOOLEAN

    EQUAL           shift and go to state 149


state 103

    (50) tipoDatoEspecifico -> TCHAR . EQUAL CHAR

    EQUAL           shift and go to state 150


state 104

    (51) tipoDatoEspecifico -> TSTRING . EQUAL STRING_1

    EQUAL           shift and go to state 151


state 105

    (45) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    LPAREN          reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    FOR             reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    IF              reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    WHILE           reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    EXCL_WS         reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    PRINT           reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    PRINTLN         reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    INT             reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    FLOAT           reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    LONG            reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    CHAR            reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    BOOLEAN         reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    ID              reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    STRING_1        reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    VAR             reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    VAL             reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    ARRAYLIST       reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    STACK           reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)


state 106

    (59) valor -> expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 59 (valor -> expression .)
    $end            reduce using rule 59 (valor -> expression .)
    LPAREN          reduce using rule 59 (valor -> expression .)
    FOR             reduce using rule 59 (valor -> expression .)
    IF              reduce using rule 59 (valor -> expression .)
    WHILE           reduce using rule 59 (valor -> expression .)
    EXCL_WS         reduce using rule 59 (valor -> expression .)
    PRINT           reduce using rule 59 (valor -> expression .)
    PRINTLN         reduce using rule 59 (valor -> expression .)
    INT             reduce using rule 59 (valor -> expression .)
    FLOAT           reduce using rule 59 (valor -> expression .)
    LONG            reduce using rule 59 (valor -> expression .)
    CHAR            reduce using rule 59 (valor -> expression .)
    BOOLEAN         reduce using rule 59 (valor -> expression .)
    ID              reduce using rule 59 (valor -> expression .)
    STRING_1        reduce using rule 59 (valor -> expression .)
    VAR             reduce using rule 59 (valor -> expression .)
    VAL             reduce using rule 59 (valor -> expression .)
    ARRAYLIST       reduce using rule 59 (valor -> expression .)
    STACK           reduce using rule 59 (valor -> expression .)
    RCURL           reduce using rule 59 (valor -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 107

    (100) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    LPAREN          reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    FOR             reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    IF              reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    WHILE           reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    EXCL_WS         reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    PRINT           reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    PRINTLN         reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    INT             reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    FLOAT           reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    LONG            reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    CHAR            reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    BOOLEAN         reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    ID              reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    STRING_1        reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    VAR             reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    VAL             reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    ARRAYLIST       reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    STACK           reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 100 (stack_actuar -> ID DOT stack_funciones .)


state 108

    (119) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    LPAREN          reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    FOR             reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    IF              reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    WHILE           reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    EXCL_WS         reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    PRINT           reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    PRINTLN         reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    INT             reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    FLOAT           reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    LONG            reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    CHAR            reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    BOOLEAN         reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    ID              reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    STRING_1        reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    VAR             reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    VAL             reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    ARRAYLIST       reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    STACK           reduce using rule 119 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 119 (lsimplem -> ID DOT Lmetod .)


state 109

    (120) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    LPAREN          reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    FOR             reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    IF              reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    WHILE           reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    EXCL_WS         reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    PRINT           reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    PRINTLN         reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    INT             reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    FLOAT           reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    LONG            reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    CHAR            reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    BOOLEAN         reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    ID              reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    STRING_1        reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    VAR             reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    VAL             reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    ARRAYLIST       reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    STACK           reduce using rule 120 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 120 (lcomp -> ID DOT Cmetod .)


state 110

    (27) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 152


state 111

    (28) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (109) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 153


state 112

    (30) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 154


state 113

    (29) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 155


state 114

    (101) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    LPAREN          reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    FOR             reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    IF              reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    WHILE           reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    EXCL_WS         reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    PRINT           reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    PRINTLN         reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    INT             reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    FLOAT           reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    LONG            reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    CHAR            reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    BOOLEAN         reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    ID              reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    STRING_1        reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    VAR             reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    VAL             reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    ARRAYLIST       reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    STACK           reduce using rule 101 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 101 (stack_funciones -> stack_isEmpty .)


state 115

    (102) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 102 (stack_funciones -> stack_push .)
    $end            reduce using rule 102 (stack_funciones -> stack_push .)
    LPAREN          reduce using rule 102 (stack_funciones -> stack_push .)
    FOR             reduce using rule 102 (stack_funciones -> stack_push .)
    IF              reduce using rule 102 (stack_funciones -> stack_push .)
    WHILE           reduce using rule 102 (stack_funciones -> stack_push .)
    EXCL_WS         reduce using rule 102 (stack_funciones -> stack_push .)
    PRINT           reduce using rule 102 (stack_funciones -> stack_push .)
    PRINTLN         reduce using rule 102 (stack_funciones -> stack_push .)
    INT             reduce using rule 102 (stack_funciones -> stack_push .)
    FLOAT           reduce using rule 102 (stack_funciones -> stack_push .)
    LONG            reduce using rule 102 (stack_funciones -> stack_push .)
    CHAR            reduce using rule 102 (stack_funciones -> stack_push .)
    BOOLEAN         reduce using rule 102 (stack_funciones -> stack_push .)
    ID              reduce using rule 102 (stack_funciones -> stack_push .)
    STRING_1        reduce using rule 102 (stack_funciones -> stack_push .)
    VAR             reduce using rule 102 (stack_funciones -> stack_push .)
    VAL             reduce using rule 102 (stack_funciones -> stack_push .)
    ARRAYLIST       reduce using rule 102 (stack_funciones -> stack_push .)
    STACK           reduce using rule 102 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 102 (stack_funciones -> stack_push .)


state 116

    (103) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 103 (stack_funciones -> stack_pop .)
    $end            reduce using rule 103 (stack_funciones -> stack_pop .)
    LPAREN          reduce using rule 103 (stack_funciones -> stack_pop .)
    FOR             reduce using rule 103 (stack_funciones -> stack_pop .)
    IF              reduce using rule 103 (stack_funciones -> stack_pop .)
    WHILE           reduce using rule 103 (stack_funciones -> stack_pop .)
    EXCL_WS         reduce using rule 103 (stack_funciones -> stack_pop .)
    PRINT           reduce using rule 103 (stack_funciones -> stack_pop .)
    PRINTLN         reduce using rule 103 (stack_funciones -> stack_pop .)
    INT             reduce using rule 103 (stack_funciones -> stack_pop .)
    FLOAT           reduce using rule 103 (stack_funciones -> stack_pop .)
    LONG            reduce using rule 103 (stack_funciones -> stack_pop .)
    CHAR            reduce using rule 103 (stack_funciones -> stack_pop .)
    BOOLEAN         reduce using rule 103 (stack_funciones -> stack_pop .)
    ID              reduce using rule 103 (stack_funciones -> stack_pop .)
    STRING_1        reduce using rule 103 (stack_funciones -> stack_pop .)
    VAR             reduce using rule 103 (stack_funciones -> stack_pop .)
    VAL             reduce using rule 103 (stack_funciones -> stack_pop .)
    ARRAYLIST       reduce using rule 103 (stack_funciones -> stack_pop .)
    STACK           reduce using rule 103 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 103 (stack_funciones -> stack_pop .)


state 117

    (104) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 104 (stack_funciones -> stack_peek .)
    $end            reduce using rule 104 (stack_funciones -> stack_peek .)
    LPAREN          reduce using rule 104 (stack_funciones -> stack_peek .)
    FOR             reduce using rule 104 (stack_funciones -> stack_peek .)
    IF              reduce using rule 104 (stack_funciones -> stack_peek .)
    WHILE           reduce using rule 104 (stack_funciones -> stack_peek .)
    EXCL_WS         reduce using rule 104 (stack_funciones -> stack_peek .)
    PRINT           reduce using rule 104 (stack_funciones -> stack_peek .)
    PRINTLN         reduce using rule 104 (stack_funciones -> stack_peek .)
    INT             reduce using rule 104 (stack_funciones -> stack_peek .)
    FLOAT           reduce using rule 104 (stack_funciones -> stack_peek .)
    LONG            reduce using rule 104 (stack_funciones -> stack_peek .)
    CHAR            reduce using rule 104 (stack_funciones -> stack_peek .)
    BOOLEAN         reduce using rule 104 (stack_funciones -> stack_peek .)
    ID              reduce using rule 104 (stack_funciones -> stack_peek .)
    STRING_1        reduce using rule 104 (stack_funciones -> stack_peek .)
    VAR             reduce using rule 104 (stack_funciones -> stack_peek .)
    VAL             reduce using rule 104 (stack_funciones -> stack_peek .)
    ARRAYLIST       reduce using rule 104 (stack_funciones -> stack_peek .)
    STACK           reduce using rule 104 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 104 (stack_funciones -> stack_peek .)


state 118

    (105) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 105 (stack_funciones -> stack_size .)
    $end            reduce using rule 105 (stack_funciones -> stack_size .)
    LPAREN          reduce using rule 105 (stack_funciones -> stack_size .)
    FOR             reduce using rule 105 (stack_funciones -> stack_size .)
    IF              reduce using rule 105 (stack_funciones -> stack_size .)
    WHILE           reduce using rule 105 (stack_funciones -> stack_size .)
    EXCL_WS         reduce using rule 105 (stack_funciones -> stack_size .)
    PRINT           reduce using rule 105 (stack_funciones -> stack_size .)
    PRINTLN         reduce using rule 105 (stack_funciones -> stack_size .)
    INT             reduce using rule 105 (stack_funciones -> stack_size .)
    FLOAT           reduce using rule 105 (stack_funciones -> stack_size .)
    LONG            reduce using rule 105 (stack_funciones -> stack_size .)
    CHAR            reduce using rule 105 (stack_funciones -> stack_size .)
    BOOLEAN         reduce using rule 105 (stack_funciones -> stack_size .)
    ID              reduce using rule 105 (stack_funciones -> stack_size .)
    STRING_1        reduce using rule 105 (stack_funciones -> stack_size .)
    VAR             reduce using rule 105 (stack_funciones -> stack_size .)
    VAL             reduce using rule 105 (stack_funciones -> stack_size .)
    ARRAYLIST       reduce using rule 105 (stack_funciones -> stack_size .)
    STACK           reduce using rule 105 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 105 (stack_funciones -> stack_size .)


state 119

    (111) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 156


state 120

    (112) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 157


state 121

    (113) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 158


state 122

    (114) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 159


state 123

    (115) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 160


state 124

    (116) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 161


state 125

    (106) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 162


state 126

    (108) stack_push -> PUSH . LPAREN ID RPAREN

    LPAREN          shift and go to state 163


state 127

    (107) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 164


state 128

    (110) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 165


state 129

    (77) if -> IF LPAREN condicion . RPAREN LCURL morelines RCURL
    (78) if -> IF LPAREN condicion . RPAREN LCURL morelines RCURL else

    RPAREN          shift and go to state 166


state 130

    (83) condicionL -> term . opL term
    (84) condicionR -> term . opR term
    (86) opL -> . CONJ
    (87) opL -> . DISJ
    (88) opR -> . LANGLE
    (89) opR -> . RANGLE
    (90) opR -> . LE
    (91) opR -> . GE
    (92) opR -> . EXCL_EQ
    (93) opR -> . EXCL_EQEQ
    (94) opR -> . AS_SAFE
    (95) opR -> . EQEQ
    (96) opR -> . EQEQEQ

    CONJ            shift and go to state 61
    DISJ            shift and go to state 62
    LANGLE          shift and go to state 63
    RANGLE          shift and go to state 64
    LE              shift and go to state 65
    GE              shift and go to state 66
    EXCL_EQ         shift and go to state 67
    EXCL_EQEQ       shift and go to state 68
    AS_SAFE         shift and go to state 69
    EQEQ            shift and go to state 70
    EQEQEQ          shift and go to state 71

    opL                            shift and go to state 59
    opR                            shift and go to state 60

state 131

    (117) while -> WHILE LPAREN ID . opR INT RPAREN LCURL morelines RCURL
    (88) opR -> . LANGLE
    (89) opR -> . RANGLE
    (90) opR -> . LE
    (91) opR -> . GE
    (92) opR -> . EXCL_EQ
    (93) opR -> . EXCL_EQEQ
    (94) opR -> . AS_SAFE
    (95) opR -> . EQEQ
    (96) opR -> . EQEQEQ

    LANGLE          shift and go to state 63
    RANGLE          shift and go to state 64
    LE              shift and go to state 65
    GE              shift and go to state 66
    EXCL_EQ         shift and go to state 67
    EXCL_EQEQ       shift and go to state 68
    AS_SAFE         shift and go to state 69
    EQEQ            shift and go to state 70
    EQEQEQ          shift and go to state 71

    opR                            shift and go to state 167

state 132

    (31) impresion -> PRINT LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 168
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 133

    (32) impresion -> PRINTLN LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 169
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 134

    (97) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_arraylist
    (118) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (98) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (46) tipoDatoEspecifico -> . TINT EQUAL INT
    (47) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (48) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (49) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (50) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (51) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    LINKEDL         shift and go to state 171
    STACK           shift and go to state 50
    TINT            shift and go to state 99
    TLONG           shift and go to state 100
    TFLOAT          shift and go to state 101
    TBOOLEAN        shift and go to state 102
    TCHAR           shift and go to state 103
    TSTRING         shift and go to state 104

    def_estruct_tipoDato           shift and go to state 170
    tipoDatoEspecifico             shift and go to state 98

state 135

    (33) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 172


state 136

    (99) instance_arraylist -> ARRAYLIST LPAREN RPAREN .

    SEMICOLON       reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    $end            reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    LPAREN          reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    FOR             reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    IF              reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    WHILE           reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    EXCL_WS         reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    PRINT           reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    PRINTLN         reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    INT             reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    FLOAT           reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    LONG            reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    CHAR            reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    BOOLEAN         reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    ID              reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    STRING_1        reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    VAR             reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    VAL             reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    STACK           reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)
    RCURL           reduce using rule 99 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)


state 137

    (98) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 173


state 138

    (52) tipoDato -> TINT .

    RANGLE          reduce using rule 52 (tipoDato -> TINT .)


state 139

    (53) tipoDato -> TLONG .

    RANGLE          reduce using rule 53 (tipoDato -> TLONG .)


state 140

    (54) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 54 (tipoDato -> TFLOAT .)


state 141

    (55) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 55 (tipoDato -> TDOUBLE .)


state 142

    (56) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 56 (tipoDato -> TBOOLEAN .)


state 143

    (57) tipoDato -> TCHAR .

    RANGLE          reduce using rule 57 (tipoDato -> TCHAR .)


state 144

    (58) tipoDato -> TSTRING .

    RANGLE          reduce using rule 58 (tipoDato -> TSTRING .)


state 145

    (34) for -> FOR LPAREN ID IN . iterable RPAREN LCURL morelines RCURL
    (35) iterable -> . ID
    (36) iterable -> . INT THREEDOTS INT
    (37) iterable -> . ID DOT INDICES

    ID              shift and go to state 174
    INT             shift and go to state 176

    iterable                       shift and go to state 175

state 146

    (46) tipoDatoEspecifico -> TINT EQUAL . INT

    INT             shift and go to state 177


state 147

    (47) tipoDatoEspecifico -> TLONG EQUAL . LONG

    LONG            shift and go to state 178


state 148

    (48) tipoDatoEspecifico -> TFLOAT EQUAL . FLOAT

    FLOAT           shift and go to state 179


state 149

    (49) tipoDatoEspecifico -> TBOOLEAN EQUAL . BOOLEAN

    BOOLEAN         shift and go to state 180


state 150

    (50) tipoDatoEspecifico -> TCHAR EQUAL . CHAR

    CHAR            shift and go to state 181


state 151

    (51) tipoDatoEspecifico -> TSTRING EQUAL . STRING_1

    STRING_1        shift and go to state 182


state 152

    (27) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 74
    STRING_1        shift and go to state 42

    factor                         shift and go to state 183

state 153

    (28) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (109) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 184


state 154

    (30) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 185


state 155

    (29) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 186


state 156

    (111) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 187


state 157

    (112) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 188


state 158

    (113) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 189


state 159

    (114) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 190


state 160

    (115) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 191


state 161

    (116) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 192


state 162

    (106) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 193


state 163

    (108) stack_push -> PUSH LPAREN . ID RPAREN

    ID              shift and go to state 194


state 164

    (107) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 195


state 165

    (110) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 196


state 166

    (77) if -> IF LPAREN condicion RPAREN . LCURL morelines RCURL
    (78) if -> IF LPAREN condicion RPAREN . LCURL morelines RCURL else

    LCURL           shift and go to state 197


state 167

    (117) while -> WHILE LPAREN ID opR . INT RPAREN LCURL morelines RCURL

    INT             shift and go to state 198


state 168

    (31) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    EXCL_WS         reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    INT             reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    FLOAT           reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    LONG            reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    CHAR            reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    ID              reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    STRING_1        reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    VAR             reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    VAL             reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    ARRAYLIST       reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    STACK           reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 31 (impresion -> PRINT LPAREN expression RPAREN .)


state 169

    (32) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LPAREN          reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    FOR             reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    IF              reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    WHILE           reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    EXCL_WS         reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    PRINT           reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    INT             reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    FLOAT           reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LONG            reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    CHAR            reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    ID              reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    STRING_1        reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    VAR             reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    VAL             reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    ARRAYLIST       reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    STACK           reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 32 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 170

    (97) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_arraylist

    EQUAL           shift and go to state 199


state 171

    (118) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 200


state 172

    (33) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 201


state 173

    (98) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LPAREN          reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    FOR             reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    IF              reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    WHILE           reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EXCL_WS         reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    PRINT           reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    PRINTLN         reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    INT             reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    FLOAT           reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LONG            reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    CHAR            reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    BOOLEAN         reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    ID              reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    STRING_1        reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    VAR             reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    VAL             reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    ARRAYLIST       reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    STACK           reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 98 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 174

    (35) iterable -> ID .
    (37) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 35 (iterable -> ID .)
    DOT             shift and go to state 202


state 175

    (34) for -> FOR LPAREN ID IN iterable . RPAREN LCURL morelines RCURL

    RPAREN          shift and go to state 203


state 176

    (36) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 204


state 177

    (46) tipoDatoEspecifico -> TINT EQUAL INT .

    SEMICOLON       reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    $end            reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LPAREN          reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    FOR             reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    IF              reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    WHILE           reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    EXCL_WS         reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    PRINT           reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    PRINTLN         reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    INT             reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    FLOAT           reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LONG            reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    CHAR            reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    BOOLEAN         reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    ID              reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    STRING_1        reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    VAR             reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    VAL             reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    ARRAYLIST       reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    STACK           reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    RCURL           reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)


state 178

    (47) tipoDatoEspecifico -> TLONG EQUAL LONG .

    SEMICOLON       reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    $end            reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LPAREN          reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    FOR             reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    IF              reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    WHILE           reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    EXCL_WS         reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    PRINT           reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    PRINTLN         reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    INT             reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    FLOAT           reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LONG            reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    CHAR            reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    BOOLEAN         reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    ID              reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    STRING_1        reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    VAR             reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    VAL             reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    ARRAYLIST       reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    STACK           reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)


state 179

    (48) tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .

    SEMICOLON       reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LPAREN          reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    FOR             reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    IF              reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    WHILE           reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    EXCL_WS         reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    PRINT           reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    PRINTLN         reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    INT             reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    FLOAT           reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LONG            reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    CHAR            reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    BOOLEAN         reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    ID              reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    STRING_1        reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    VAR             reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    VAL             reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    ARRAYLIST       reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    STACK           reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)


state 180

    (49) tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .

    SEMICOLON       reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LPAREN          reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    FOR             reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    IF              reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    WHILE           reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    EXCL_WS         reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    PRINT           reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    PRINTLN         reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    INT             reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    FLOAT           reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LONG            reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    CHAR            reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    BOOLEAN         reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    ID              reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    STRING_1        reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    VAR             reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    VAL             reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    ARRAYLIST       reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    STACK           reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)


state 181

    (50) tipoDatoEspecifico -> TCHAR EQUAL CHAR .

    SEMICOLON       reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LPAREN          reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    FOR             reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    IF              reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    WHILE           reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    EXCL_WS         reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    PRINT           reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    PRINTLN         reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    INT             reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    FLOAT           reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LONG            reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    CHAR            reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    BOOLEAN         reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    ID              reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    STRING_1        reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    VAR             reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    VAL             reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    ARRAYLIST       reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    STACK           reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)


state 182

    (51) tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .

    SEMICOLON       reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LPAREN          reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    FOR             reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    IF              reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    WHILE           reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    EXCL_WS         reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    PRINT           reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    PRINTLN         reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    INT             reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    FLOAT           reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LONG            reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    CHAR            reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    BOOLEAN         reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    ID              reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    STRING_1        reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    VAR             reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    VAL             reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    ARRAYLIST       reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    STACK           reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)


state 183

    (27) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 205


state 184

    (28) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (109) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LPAREN resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for IF resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for EXCL_WS resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for PRINT resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for INT resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LONG resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for CHAR resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for ID resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for STRING_1 resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for VAL resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for ARRAYLIST resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for STACK resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LPAREN          reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    FOR             reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    IF              reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    WHILE           reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    EXCL_WS         reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    PRINT           reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    PRINTLN         reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    INT             reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    FLOAT           reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LONG            reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    CHAR            reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    BOOLEAN         reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    ID              reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    STRING_1        reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    VAR             reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    VAL             reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    STACK           reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 28 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LPAREN          [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! FOR             [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! IF              [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! WHILE           [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! EXCL_WS         [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! PRINT           [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! PRINTLN         [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! INT             [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! FLOAT           [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LONG            [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! CHAR            [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! BOOLEAN         [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! ID              [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! STRING_1        [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! VAR             [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! VAL             [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! ARRAYLIST       [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! STACK           [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 109 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 185

    (30) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LPAREN          reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    FOR             reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    IF              reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    WHILE           reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    PRINT           reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    PRINTLN         reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    INT             reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    FLOAT           reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LONG            reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    CHAR            reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    ID              reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    STRING_1        reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    VAR             reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    VAL             reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    STACK           reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 30 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 186

    (29) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LPAREN          reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    FOR             reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    IF              reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    WHILE           reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    EXCL_WS         reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    PRINT           reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    PRINTLN         reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    INT             reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    FLOAT           reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LONG            reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    CHAR            reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    BOOLEAN         reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    ID              reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    STRING_1        reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    VAR             reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    VAL             reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    STACK           reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 29 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 187

    (111) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    LPAREN          reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    FOR             reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    IF              reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    WHILE           reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    EXCL_WS         reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    PRINT           reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    PRINTLN         reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    INT             reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    FLOAT           reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    LONG            reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    CHAR            reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    BOOLEAN         reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    ID              reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    STRING_1        reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    VAR             reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    VAL             reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    STACK           reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 111 (Lmetod -> FIRST LPAREN RPAREN .)


state 188

    (112) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    LPAREN          reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    FOR             reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    IF              reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    WHILE           reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    EXCL_WS         reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    PRINT           reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    PRINTLN         reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    INT             reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    FLOAT           reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    LONG            reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    CHAR            reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    BOOLEAN         reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    ID              reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    STRING_1        reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    VAR             reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    VAL             reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    STACK           reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 112 (Lmetod -> LAST LPAREN RPAREN .)


state 189

    (113) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LPAREN          reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    FOR             reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    IF              reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    WHILE           reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    EXCL_WS         reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    PRINT           reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    PRINTLN         reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    INT             reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    FLOAT           reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LONG            reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    CHAR            reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    BOOLEAN         reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    ID              reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    STRING_1        reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    VAR             reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    VAL             reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    STACK           reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 113 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 190

    (114) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 206


state 191

    (115) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 207


state 192

    (116) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 208


state 193

    (106) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LPAREN          reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    FOR             reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    IF              reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    WHILE           reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    EXCL_WS         reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    PRINT           reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    PRINTLN         reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    INT             reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    FLOAT           reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LONG            reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    CHAR            reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    BOOLEAN         reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    ID              reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    STRING_1        reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    VAR             reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    VAL             reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    STACK           reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 106 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 194

    (108) stack_push -> PUSH LPAREN ID . RPAREN

    RPAREN          shift and go to state 209


state 195

    (107) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    LPAREN          reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    FOR             reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    IF              reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    WHILE           reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    EXCL_WS         reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    PRINT           reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    PRINTLN         reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    INT             reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    FLOAT           reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    LONG            reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    CHAR            reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    BOOLEAN         reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    ID              reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    STRING_1        reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    VAR             reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    VAL             reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    STACK           reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 107 (stack_pop -> POP LPAREN RPAREN .)


state 196

    (110) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    LPAREN          reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    FOR             reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    IF              reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    WHILE           reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    PRINT           reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    PRINTLN         reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    INT             reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    FLOAT           reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    LONG            reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    CHAR            reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    ID              reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    STRING_1        reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    VAR             reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    VAL             reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    STACK           reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 110 (stack_size -> SIZE LPAREN RPAREN .)


state 197

    (77) if -> IF LPAREN condicion RPAREN LCURL . morelines RCURL
    (78) if -> IF LPAREN condicion RPAREN LCURL . morelines RCURL else
    (38) morelines -> . line
    (39) morelines -> . line morelines
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (20) estructurasControl -> . for
    (21) estructurasControl -> . if
    (22) estructurasControl -> . while
    (80) condicion -> . condicionL
    (81) condicion -> . condicionR
    (82) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (34) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (78) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (117) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (83) condicionL -> . term opL term
    (84) condicionR -> . term opR term
    (85) condicionN -> . EXCL_WS term
    (31) impresion -> . PRINT LPAREN expression RPAREN
    (32) impresion -> . PRINTLN LPAREN expression RPAREN
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_arraylist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (19) estructurasDatos -> .
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (33) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (23) queue_operations -> . queue_add
    (24) queue_operations -> . queue_peek
    (25) queue_operations -> . queue_remove
    (26) queue_operations -> . queue_poll
    (97) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (100) stack_actuar -> . ID DOT stack_funciones
    (99) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (98) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (118) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (119) lsimplem -> . ID DOT Lmetod
    (120) lcomp -> . ID DOT Cmetod
    (27) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (28) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (30) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (29) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for EXCL_WS resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for STRING_1 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for ARRAYLIST resolved as shift
  ! shift/reduce conflict for STACK resolved as shift
    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    EXCL_WS         shift and go to state 24
    PRINT           shift and go to state 25
    PRINTLN         shift and go to state 26
    SEMICOLON       reduce using rule 19 (estructurasDatos -> .)
    RCURL           reduce using rule 19 (estructurasDatos -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 20
    STRING_1        shift and go to state 42
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    ARRAYLIST       shift and go to state 49
    STACK           shift and go to state 50

  ! LPAREN          [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FOR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! IF              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! WHILE           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! EXCL_WS         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINTLN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! INT             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FLOAT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! LONG            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! CHAR            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! BOOLEAN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ID              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STRING_1        [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAL             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ARRAYLIST       [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STACK           [ reduce using rule 19 (estructurasDatos -> .) ]

    condicion                      shift and go to state 5
    morelines                      shift and go to state 210
    line                           shift and go to state 211
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 27
    asignacionSimple               shift and go to state 28
    queue                          shift and go to state 29
    queue_operations               shift and go to state 30
    stack                          shift and go to state 31
    stack_actuar                   shift and go to state 32
    instance_arraylist             shift and go to state 33
    def_estruct_tipoDato           shift and go to state 34
    lista                          shift and go to state 35
    lsimplem                       shift and go to state 36
    lcomp                          shift and go to state 37
    queue_add                      shift and go to state 45
    queue_peek                     shift and go to state 46
    queue_remove                   shift and go to state 47
    queue_poll                     shift and go to state 48

state 198

    (117) while -> WHILE LPAREN ID opR INT . RPAREN LCURL morelines RCURL

    RPAREN          shift and go to state 212


state 199

    (97) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_arraylist
    (99) instance_arraylist -> . ARRAYLIST LPAREN RPAREN

    ARRAYLIST       shift and go to state 49

    instance_arraylist             shift and go to state 213

state 200

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 214


state 201

    (33) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 138
    TLONG           shift and go to state 139
    TFLOAT          shift and go to state 140
    TDOUBLE         shift and go to state 141
    TBOOLEAN        shift and go to state 142
    TCHAR           shift and go to state 143
    TSTRING         shift and go to state 144

    tipoDato                       shift and go to state 215

state 202

    (37) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 216


state 203

    (34) for -> FOR LPAREN ID IN iterable RPAREN . LCURL morelines RCURL

    LCURL           shift and go to state 217


state 204

    (36) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 218


state 205

    (27) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LPAREN          reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    FOR             reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    IF              reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    WHILE           reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    EXCL_WS         reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    PRINT           reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    PRINTLN         reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    INT             reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    FLOAT           reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LONG            reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    CHAR            reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    BOOLEAN         reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    ID              reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    STRING_1        reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    VAR             reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    VAL             reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    ARRAYLIST       reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    STACK           reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 27 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 206

    (114) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LPAREN          reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    FOR             reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    IF              reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    WHILE           reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    EXCL_WS         reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    PRINT           reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    PRINTLN         reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    INT             reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    FLOAT           reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LONG            reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    CHAR            reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    BOOLEAN         reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    ID              reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    STRING_1        reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    VAR             reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    VAL             reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    ARRAYLIST       reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    STACK           reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 114 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 207

    (115) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LPAREN          reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    FOR             reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    IF              reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    WHILE           reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    EXCL_WS         reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    PRINT           reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    PRINTLN         reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    INT             reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    FLOAT           reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LONG            reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    CHAR            reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    BOOLEAN         reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    ID              reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    STRING_1        reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    VAR             reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    VAL             reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    ARRAYLIST       reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    STACK           reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 115 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 208

    (116) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LPAREN          reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    FOR             reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    IF              reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    WHILE           reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    EXCL_WS         reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    PRINT           reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    PRINTLN         reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    INT             reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    FLOAT           reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LONG            reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    CHAR            reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    BOOLEAN         reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    ID              reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    STRING_1        reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    VAR             reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    VAL             reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    ARRAYLIST       reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    STACK           reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 116 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 209

    (108) stack_push -> PUSH LPAREN ID RPAREN .

    SEMICOLON       reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    $end            reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    LPAREN          reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    FOR             reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    IF              reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    WHILE           reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    EXCL_WS         reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    PRINT           reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    PRINTLN         reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    INT             reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    FLOAT           reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    LONG            reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    CHAR            reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    BOOLEAN         reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    ID              reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    STRING_1        reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    VAR             reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    VAL             reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    ARRAYLIST       reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    STACK           reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)
    RCURL           reduce using rule 108 (stack_push -> PUSH LPAREN ID RPAREN .)


state 210

    (77) if -> IF LPAREN condicion RPAREN LCURL morelines . RCURL
    (78) if -> IF LPAREN condicion RPAREN LCURL morelines . RCURL else

    RCURL           shift and go to state 219


state 211

    (38) morelines -> line .
    (39) morelines -> line . morelines
    (38) morelines -> . line
    (39) morelines -> . line morelines
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (20) estructurasControl -> . for
    (21) estructurasControl -> . if
    (22) estructurasControl -> . while
    (80) condicion -> . condicionL
    (81) condicion -> . condicionR
    (82) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (34) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (78) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (117) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (83) condicionL -> . term opL term
    (84) condicionR -> . term opR term
    (85) condicionN -> . EXCL_WS term
    (31) impresion -> . PRINT LPAREN expression RPAREN
    (32) impresion -> . PRINTLN LPAREN expression RPAREN
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_arraylist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (19) estructurasDatos -> .
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (33) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (23) queue_operations -> . queue_add
    (24) queue_operations -> . queue_peek
    (25) queue_operations -> . queue_remove
    (26) queue_operations -> . queue_poll
    (97) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (100) stack_actuar -> . ID DOT stack_funciones
    (99) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (98) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (118) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (119) lsimplem -> . ID DOT Lmetod
    (120) lcomp -> . ID DOT Cmetod
    (27) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (28) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (30) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (29) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for EXCL_WS resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! reduce/reduce conflict for RCURL resolved using rule 19 (estructurasDatos -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for STRING_1 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for ARRAYLIST resolved as shift
  ! shift/reduce conflict for STACK resolved as shift
    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    EXCL_WS         shift and go to state 24
    PRINT           shift and go to state 25
    PRINTLN         shift and go to state 26
    SEMICOLON       reduce using rule 19 (estructurasDatos -> .)
    RCURL           reduce using rule 19 (estructurasDatos -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 20
    STRING_1        shift and go to state 42
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    ARRAYLIST       shift and go to state 49
    STACK           shift and go to state 50

  ! RCURL           [ reduce using rule 38 (morelines -> line .) ]
  ! LPAREN          [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FOR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! IF              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! WHILE           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! EXCL_WS         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINTLN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! INT             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FLOAT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! LONG            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! CHAR            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! BOOLEAN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ID              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STRING_1        [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAL             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ARRAYLIST       [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STACK           [ reduce using rule 19 (estructurasDatos -> .) ]

    line                           shift and go to state 211
    morelines                      shift and go to state 220
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 27
    asignacionSimple               shift and go to state 28
    queue                          shift and go to state 29
    queue_operations               shift and go to state 30
    stack                          shift and go to state 31
    stack_actuar                   shift and go to state 32
    instance_arraylist             shift and go to state 33
    def_estruct_tipoDato           shift and go to state 34
    lista                          shift and go to state 35
    lsimplem                       shift and go to state 36
    lcomp                          shift and go to state 37
    queue_add                      shift and go to state 45
    queue_peek                     shift and go to state 46
    queue_remove                   shift and go to state 47
    queue_poll                     shift and go to state 48

state 212

    (117) while -> WHILE LPAREN ID opR INT RPAREN . LCURL morelines RCURL

    LCURL           shift and go to state 221


state 213

    (97) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .

    SEMICOLON       reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    $end            reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    LPAREN          reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    FOR             reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    IF              reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    WHILE           reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    EXCL_WS         reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    PRINT           reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    PRINTLN         reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    INT             reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    FLOAT           reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    LONG            reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    CHAR            reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    BOOLEAN         reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    ID              reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    STRING_1        reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    VAR             reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    VAL             reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    ARRAYLIST       reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    STACK           reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)
    RCURL           reduce using rule 97 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)


state 214

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 222


state 215

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 223


state 216

    (37) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 37 (iterable -> ID DOT INDICES .)


state 217

    (34) for -> FOR LPAREN ID IN iterable RPAREN LCURL . morelines RCURL
    (38) morelines -> . line
    (39) morelines -> . line morelines
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (20) estructurasControl -> . for
    (21) estructurasControl -> . if
    (22) estructurasControl -> . while
    (80) condicion -> . condicionL
    (81) condicion -> . condicionR
    (82) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (34) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (78) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (117) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (83) condicionL -> . term opL term
    (84) condicionR -> . term opR term
    (85) condicionN -> . EXCL_WS term
    (31) impresion -> . PRINT LPAREN expression RPAREN
    (32) impresion -> . PRINTLN LPAREN expression RPAREN
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_arraylist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (19) estructurasDatos -> .
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (33) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (23) queue_operations -> . queue_add
    (24) queue_operations -> . queue_peek
    (25) queue_operations -> . queue_remove
    (26) queue_operations -> . queue_poll
    (97) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (100) stack_actuar -> . ID DOT stack_funciones
    (99) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (98) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (118) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (119) lsimplem -> . ID DOT Lmetod
    (120) lcomp -> . ID DOT Cmetod
    (27) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (28) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (30) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (29) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for EXCL_WS resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for STRING_1 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for ARRAYLIST resolved as shift
  ! shift/reduce conflict for STACK resolved as shift
    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    EXCL_WS         shift and go to state 24
    PRINT           shift and go to state 25
    PRINTLN         shift and go to state 26
    SEMICOLON       reduce using rule 19 (estructurasDatos -> .)
    RCURL           reduce using rule 19 (estructurasDatos -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 20
    STRING_1        shift and go to state 42
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    ARRAYLIST       shift and go to state 49
    STACK           shift and go to state 50

  ! LPAREN          [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FOR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! IF              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! WHILE           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! EXCL_WS         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINTLN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! INT             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FLOAT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! LONG            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! CHAR            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! BOOLEAN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ID              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STRING_1        [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAL             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ARRAYLIST       [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STACK           [ reduce using rule 19 (estructurasDatos -> .) ]

    morelines                      shift and go to state 224
    line                           shift and go to state 211
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 27
    asignacionSimple               shift and go to state 28
    queue                          shift and go to state 29
    queue_operations               shift and go to state 30
    stack                          shift and go to state 31
    stack_actuar                   shift and go to state 32
    instance_arraylist             shift and go to state 33
    def_estruct_tipoDato           shift and go to state 34
    lista                          shift and go to state 35
    lsimplem                       shift and go to state 36
    lcomp                          shift and go to state 37
    queue_add                      shift and go to state 45
    queue_peek                     shift and go to state 46
    queue_remove                   shift and go to state 47
    queue_poll                     shift and go to state 48

state 218

    (36) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 36 (iterable -> INT THREEDOTS INT .)


state 219

    (77) if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .
    (78) if -> IF LPAREN condicion RPAREN LCURL morelines RCURL . else
    (79) else -> . ELSE LCURL line RCURL

    $end            reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    ARRAYLIST       reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    SEMICOLON       reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 77 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    ELSE            shift and go to state 226

    else                           shift and go to state 225

state 220

    (39) morelines -> line morelines .

    RCURL           reduce using rule 39 (morelines -> line morelines .)


state 221

    (117) while -> WHILE LPAREN ID opR INT RPAREN LCURL . morelines RCURL
    (38) morelines -> . line
    (39) morelines -> . line morelines
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (20) estructurasControl -> . for
    (21) estructurasControl -> . if
    (22) estructurasControl -> . while
    (80) condicion -> . condicionL
    (81) condicion -> . condicionR
    (82) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (34) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (78) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (117) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (83) condicionL -> . term opL term
    (84) condicionR -> . term opR term
    (85) condicionN -> . EXCL_WS term
    (31) impresion -> . PRINT LPAREN expression RPAREN
    (32) impresion -> . PRINTLN LPAREN expression RPAREN
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_arraylist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (19) estructurasDatos -> .
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (33) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (23) queue_operations -> . queue_add
    (24) queue_operations -> . queue_peek
    (25) queue_operations -> . queue_remove
    (26) queue_operations -> . queue_poll
    (97) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (100) stack_actuar -> . ID DOT stack_funciones
    (99) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (98) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (118) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (119) lsimplem -> . ID DOT Lmetod
    (120) lcomp -> . ID DOT Cmetod
    (27) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (28) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (30) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (29) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for EXCL_WS resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for STRING_1 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for ARRAYLIST resolved as shift
  ! shift/reduce conflict for STACK resolved as shift
    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    EXCL_WS         shift and go to state 24
    PRINT           shift and go to state 25
    PRINTLN         shift and go to state 26
    SEMICOLON       reduce using rule 19 (estructurasDatos -> .)
    RCURL           reduce using rule 19 (estructurasDatos -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 20
    STRING_1        shift and go to state 42
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    ARRAYLIST       shift and go to state 49
    STACK           shift and go to state 50

  ! LPAREN          [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FOR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! IF              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! WHILE           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! EXCL_WS         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! PRINTLN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! INT             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! FLOAT           [ reduce using rule 19 (estructurasDatos -> .) ]
  ! LONG            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! CHAR            [ reduce using rule 19 (estructurasDatos -> .) ]
  ! BOOLEAN         [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ID              [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STRING_1        [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAR             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! VAL             [ reduce using rule 19 (estructurasDatos -> .) ]
  ! ARRAYLIST       [ reduce using rule 19 (estructurasDatos -> .) ]
  ! STACK           [ reduce using rule 19 (estructurasDatos -> .) ]

    morelines                      shift and go to state 227
    line                           shift and go to state 211
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 27
    asignacionSimple               shift and go to state 28
    queue                          shift and go to state 29
    queue_operations               shift and go to state 30
    stack                          shift and go to state 31
    stack_actuar                   shift and go to state 32
    instance_arraylist             shift and go to state 33
    def_estruct_tipoDato           shift and go to state 34
    lista                          shift and go to state 35
    lsimplem                       shift and go to state 36
    lcomp                          shift and go to state 37
    queue_add                      shift and go to state 45
    queue_peek                     shift and go to state 46
    queue_remove                   shift and go to state 47
    queue_poll                     shift and go to state 48

state 222

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 228


state 223

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 229


state 224

    (34) for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines . RCURL

    RCURL           shift and go to state 230


state 225

    (78) if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .

    $end            reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    LPAREN          reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    FOR             reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    IF              reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    WHILE           reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    EXCL_WS         reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    PRINT           reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    PRINTLN         reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    INT             reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    FLOAT           reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    LONG            reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    CHAR            reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    BOOLEAN         reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    ID              reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    STRING_1        reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    VAR             reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    VAL             reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    ARRAYLIST       reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    STACK           reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    SEMICOLON       reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    RCURL           reduce using rule 78 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)


state 226

    (79) else -> ELSE . LCURL line RCURL

    LCURL           shift and go to state 231


state 227

    (117) while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines . RCURL

    RCURL           shift and go to state 232


state 228

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 233


state 229

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 234


state 230

    (34) for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .

    $end            reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    ARRAYLIST       reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    SEMICOLON       reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 34 (for -> FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL .)


state 231

    (79) else -> ELSE LCURL . line RCURL
    (1) line -> . lineas
    (2) line -> . expression
    (3) line -> . estructurasControl
    (4) line -> . condicion
    (8) lineas -> . blocks
    (9) lineas -> . blocks SEMICOLON
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (20) estructurasControl -> . for
    (21) estructurasControl -> . if
    (22) estructurasControl -> . while
    (80) condicion -> . condicionL
    (81) condicion -> . condicionR
    (82) condicion -> . condicionN
    (5) blocks -> . impresion
    (6) blocks -> . asignacion
    (7) blocks -> . estructurasDatos
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (34) for -> . FOR LPAREN ID IN iterable RPAREN LCURL morelines RCURL
    (77) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (78) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (117) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (83) condicionL -> . term opL term
    (84) condicionR -> . term opR term
    (85) condicionN -> . EXCL_WS term
    (31) impresion -> . PRINT LPAREN expression RPAREN
    (32) impresion -> . PRINTLN LPAREN expression RPAREN
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (10) estructurasDatos -> . queue
    (11) estructurasDatos -> . queue_operations
    (12) estructurasDatos -> . stack
    (13) estructurasDatos -> . stack_actuar
    (14) estructurasDatos -> . instance_arraylist
    (15) estructurasDatos -> . def_estruct_tipoDato
    (16) estructurasDatos -> . lista
    (17) estructurasDatos -> . lsimplem
    (18) estructurasDatos -> . lcomp
    (19) estructurasDatos -> .
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (33) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (23) queue_operations -> . queue_add
    (24) queue_operations -> . queue_peek
    (25) queue_operations -> . queue_remove
    (26) queue_operations -> . queue_poll
    (97) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (100) stack_actuar -> . ID DOT stack_funciones
    (99) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (98) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (118) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (119) lsimplem -> . ID DOT Lmetod
    (120) lcomp -> . ID DOT Cmetod
    (27) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (28) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (30) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (29) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LPAREN          shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    EXCL_WS         shift and go to state 24
    PRINT           shift and go to state 25
    PRINTLN         shift and go to state 26
    SEMICOLON       reduce using rule 19 (estructurasDatos -> .)
    RCURL           reduce using rule 19 (estructurasDatos -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 38
    LONG            shift and go to state 39
    CHAR            shift and go to state 40
    BOOLEAN         shift and go to state 41
    ID              shift and go to state 20
    STRING_1        shift and go to state 42
    VAR             shift and go to state 43
    VAL             shift and go to state 44
    ARRAYLIST       shift and go to state 49
    STACK           shift and go to state 50

    line                           shift and go to state 235
    lineas                         shift and go to state 2
    expression                     shift and go to state 3
    estructurasControl             shift and go to state 4
    condicion                      shift and go to state 5
    blocks                         shift and go to state 6
    term                           shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    condicionL                     shift and go to state 11
    condicionR                     shift and go to state 12
    condicionN                     shift and go to state 13
    impresion                      shift and go to state 14
    asignacion                     shift and go to state 15
    estructurasDatos               shift and go to state 16
    factor                         shift and go to state 17
    keywordVariables               shift and go to state 27
    asignacionSimple               shift and go to state 28
    queue                          shift and go to state 29
    queue_operations               shift and go to state 30
    stack                          shift and go to state 31
    stack_actuar                   shift and go to state 32
    instance_arraylist             shift and go to state 33
    def_estruct_tipoDato           shift and go to state 34
    lista                          shift and go to state 35
    lsimplem                       shift and go to state 36
    lcomp                          shift and go to state 37
    queue_add                      shift and go to state 45
    queue_peek                     shift and go to state 46
    queue_remove                   shift and go to state 47
    queue_poll                     shift and go to state 48

state 232

    (117) while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .

    $end            reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    ARRAYLIST       reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    SEMICOLON       reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 117 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)


state 233

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 236


state 234

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 237


state 235

    (79) else -> ELSE LCURL line . RCURL

    RCURL           shift and go to state 238


state 236

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 239


state 237

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 138
    TLONG           shift and go to state 139
    TFLOAT          shift and go to state 140
    TDOUBLE         shift and go to state 141
    TBOOLEAN        shift and go to state 142
    TCHAR           shift and go to state 143
    TSTRING         shift and go to state 144

    tipoDato                       shift and go to state 240

state 238

    (79) else -> ELSE LCURL line RCURL .

    $end            reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    LPAREN          reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    FOR             reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    IF              reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    WHILE           reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    EXCL_WS         reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    PRINT           reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    PRINTLN         reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    INT             reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    FLOAT           reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    LONG            reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    CHAR            reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    BOOLEAN         reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    ID              reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    STRING_1        reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    VAR             reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    VAL             reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    ARRAYLIST       reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    STACK           reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    SEMICOLON       reduce using rule 79 (else -> ELSE LCURL line RCURL .)
    RCURL           reduce using rule 79 (else -> ELSE LCURL line RCURL .)


state 239

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 241


state 240

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 242


state 241

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 243


state 242

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 244


state 243

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 245


state 244

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 246


state 245

    (118) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LPAREN          reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    FOR             reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    IF              reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    WHILE           reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    PRINT           reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    PRINTLN         reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    INT             reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    FLOAT           reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LONG            reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    CHAR            reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    ID              reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    STRING_1        reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    VAR             reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    VAL             reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    STACK           reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 118 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 246

    (33) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LPAREN          reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    FOR             reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    IF              reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    WHILE           reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    EXCL_WS         reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    PRINT           reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    PRINTLN         reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    INT             reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    FLOAT           reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LONG            reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    CHAR            reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    ID              reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    STRING_1        reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    VAR             reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    VAL             reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    ARRAYLIST       reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    STACK           reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 33 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 197 resolved as shift
WARNING: shift/reduce conflict for FOR in state 197 resolved as shift
WARNING: shift/reduce conflict for IF in state 197 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 197 resolved as shift
WARNING: shift/reduce conflict for EXCL_WS in state 197 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 197 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 197 resolved as shift
WARNING: shift/reduce conflict for INT in state 197 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 197 resolved as shift
WARNING: shift/reduce conflict for LONG in state 197 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 197 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for STRING_1 in state 197 resolved as shift
WARNING: shift/reduce conflict for VAR in state 197 resolved as shift
WARNING: shift/reduce conflict for VAL in state 197 resolved as shift
WARNING: shift/reduce conflict for ARRAYLIST in state 197 resolved as shift
WARNING: shift/reduce conflict for STACK in state 197 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 211 resolved as shift
WARNING: shift/reduce conflict for FOR in state 211 resolved as shift
WARNING: shift/reduce conflict for IF in state 211 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 211 resolved as shift
WARNING: shift/reduce conflict for EXCL_WS in state 211 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 211 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 211 resolved as shift
WARNING: shift/reduce conflict for INT in state 211 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 211 resolved as shift
WARNING: shift/reduce conflict for LONG in state 211 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 211 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 211 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for STRING_1 in state 211 resolved as shift
WARNING: shift/reduce conflict for VAR in state 211 resolved as shift
WARNING: shift/reduce conflict for VAL in state 211 resolved as shift
WARNING: shift/reduce conflict for ARRAYLIST in state 211 resolved as shift
WARNING: shift/reduce conflict for STACK in state 211 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 217 resolved as shift
WARNING: shift/reduce conflict for FOR in state 217 resolved as shift
WARNING: shift/reduce conflict for IF in state 217 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 217 resolved as shift
WARNING: shift/reduce conflict for EXCL_WS in state 217 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 217 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 217 resolved as shift
WARNING: shift/reduce conflict for INT in state 217 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 217 resolved as shift
WARNING: shift/reduce conflict for LONG in state 217 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 217 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for STRING_1 in state 217 resolved as shift
WARNING: shift/reduce conflict for VAR in state 217 resolved as shift
WARNING: shift/reduce conflict for VAL in state 217 resolved as shift
WARNING: shift/reduce conflict for ARRAYLIST in state 217 resolved as shift
WARNING: shift/reduce conflict for STACK in state 217 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 221 resolved as shift
WARNING: shift/reduce conflict for FOR in state 221 resolved as shift
WARNING: shift/reduce conflict for IF in state 221 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 221 resolved as shift
WARNING: shift/reduce conflict for EXCL_WS in state 221 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 221 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 221 resolved as shift
WARNING: shift/reduce conflict for INT in state 221 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 221 resolved as shift
WARNING: shift/reduce conflict for LONG in state 221 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 221 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for STRING_1 in state 221 resolved as shift
WARNING: shift/reduce conflict for VAR in state 221 resolved as shift
WARNING: shift/reduce conflict for VAL in state 221 resolved as shift
WARNING: shift/reduce conflict for ARRAYLIST in state 221 resolved as shift
WARNING: shift/reduce conflict for STACK in state 221 resolved as shift
WARNING: reduce/reduce conflict in state 184 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 184
WARNING: reduce/reduce conflict in state 211 resolved using rule (estructurasDatos -> <empty>)
WARNING: rejected rule (morelines -> line) in state 211
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced
WARNING: Rule (morelines -> line) is never reduced

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> blocks
Rule 2     line -> blocks SEMICOLON
Rule 3     line -> blocks LINEBREAK
Rule 4     line -> blocks LINEBREAK line
Rule 5     line -> blocks LINEBREAK line LINEBREAK
Rule 6     line -> blocks SEMICOLON LINEBREAK
Rule 7     line -> blocks SEMICOLON LINEBREAK line
Rule 8     line -> blocks SEMICOLON LINEBREAK line LINEBREAK
Rule 9     line -> LINEBREAK
Rule 10    blocks -> impresion
Rule 11    blocks -> expression
Rule 12    blocks -> asignacion
Rule 13    blocks -> estructurasControl
Rule 14    blocks -> condicion
Rule 15    blocks -> funcion
Rule 16    blocks -> estructurasDatos
Rule 17    estructurasDatos -> queue
Rule 18    estructurasDatos -> queue_operations
Rule 19    estructurasDatos -> stack
Rule 20    estructurasDatos -> stack_actuar
Rule 21    estructurasDatos -> instance_linkedlist
Rule 22    estructurasDatos -> def_estruct_tipoDato
Rule 23    estructurasDatos -> lista
Rule 24    estructurasDatos -> lsimplem
Rule 25    estructurasDatos -> lcomp
Rule 26    estructurasControl -> for
Rule 27    estructurasControl -> if
Rule 28    estructurasControl -> while
Rule 29    queue_operations -> queue_add
Rule 30    queue_operations -> queue_peek
Rule 31    queue_operations -> queue_remove
Rule 32    queue_operations -> queue_poll
Rule 33    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 34    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 35    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 36    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 37    impresion -> PRINT LPAREN expression RPAREN
Rule 38    impresion -> PRINTLN LPAREN expression RPAREN
Rule 39    impresion -> PRINT LPAREN error RPAREN
Rule 40    impresion -> PRINTLN LPAREN error RPAREN
Rule 41    queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 42    for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
Rule 43    for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL
Rule 44    iterable -> ID
Rule 45    iterable -> INT THREEDOTS INT
Rule 46    iterable -> ID DOT INDICES
Rule 47    asignacion -> keywordVariables asignacionSimple
Rule 48    asignacion -> asignacionSimple
Rule 49    keywordVariables -> VAR
Rule 50    keywordVariables -> VAL
Rule 51    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 52    asignacionSimple -> ID EQUAL valor
Rule 53    tipoDatoEspecifico -> tipoEntero
Rule 54    tipoDatoEspecifico -> tipoLong
Rule 55    tipoDatoEspecifico -> tipoFloat
Rule 56    tipoDatoEspecifico -> tipoBoolean
Rule 57    tipoDatoEspecifico -> tipoChar
Rule 58    tipoDatoEspecifico -> tipoString
Rule 59    tipoEntero -> TINT EQUAL INT
Rule 60    tipoEntero -> TINT EQUAL error
Rule 61    tipoLong -> TLONG EQUAL LONG
Rule 62    tipoLong -> TLONG EQUAL error
Rule 63    tipoFloat -> TFLOAT EQUAL FLOAT
Rule 64    tipoFloat -> TFLOAT EQUAL error
Rule 65    tipoBoolean -> TBOOLEAN EQUAL BOOLEAN
Rule 66    tipoBoolean -> TBOOLEAN EQUAL error
Rule 67    tipoChar -> TCHAR EQUAL CHAR
Rule 68    tipoChar -> TCHAR EQUAL error
Rule 69    tipoString -> TSTRING EQUAL STRING_1
Rule 70    tipoString -> TSTRING EQUAL error
Rule 71    tipoDato -> TINT
Rule 72    tipoDato -> TLONG
Rule 73    tipoDato -> TFLOAT
Rule 74    tipoDato -> TDOUBLE
Rule 75    tipoDato -> TBOOLEAN
Rule 76    tipoDato -> TCHAR
Rule 77    tipoDato -> TSTRING
Rule 78    valor -> expression
Rule 79    expression -> expression PLUS term
Rule 80    expression -> expression MINUS term
Rule 81    expression -> expression TIMES term
Rule 82    expression -> expression DIVIDE term
Rule 83    expression -> expression MOD term
Rule 84    expression -> expression INCREMENTONE
Rule 85    expression -> expression DECREMENTONE
Rule 86    expression -> term
Rule 87    term -> factor
Rule 88    term -> LPAREN expression RPAREN
Rule 89    factor -> INT
Rule 90    factor -> FLOAT
Rule 91    factor -> LONG
Rule 92    factor -> CHAR
Rule 93    factor -> BOOLEAN
Rule 94    factor -> ID
Rule 95    factor -> STRING_1
Rule 96    funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
Rule 97    funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
Rule 98    funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL
Rule 99    funcion -> FUN ID LPAREN RPAREN LCURL RCURL
Rule 100   funcion -> FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
Rule 101   funcion -> FUN ID LPAREN parametros RPAREN LCURL RCURL
Rule 102   parametros -> parametro
Rule 103   parametros -> parametro masParametros
Rule 104   parametro -> ID DOTS tipoDato
Rule 105   masParametros -> COMMA parametro
Rule 106   masParametros -> COMMA parametro masParametros
Rule 107   lineorBreak -> line
Rule 108   lineorBreak -> LINEBREAK line LINEBREAK
Rule 109   lineorBreak -> LINEBREAK line
Rule 110   if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
Rule 111   if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
Rule 112   else -> ELSE LCURL lineorBreak RCURL
Rule 113   condicion -> condicionL
Rule 114   condicion -> condicionR
Rule 115   condicion -> condicionN
Rule 116   condicionL -> BOOLEAN opL BOOLEAN
Rule 117   condicionL -> ID opL ID
Rule 118   condicionL -> ID opL BOOLEAN
Rule 119   condicionL -> BOOLEAN opL ID
Rule 120   condicionR -> INT opR INT
Rule 121   condicionR -> INT opR FLOAT
Rule 122   condicionR -> INT opR LONG
Rule 123   condicionR -> INT opR ID
Rule 124   condicionR -> FLOAT opR FLOAT
Rule 125   condicionR -> FLOAT opR INT
Rule 126   condicionR -> FLOAT opR LONG
Rule 127   condicionR -> FLOAT opR ID
Rule 128   condicionR -> LONG opR LONG
Rule 129   condicionR -> LONG opR INT
Rule 130   condicionR -> LONG opR FLOAT
Rule 131   condicionR -> LONG opR ID
Rule 132   condicionR -> STRING_1 opR STRING_1
Rule 133   condicionR -> STRING_1 opR ID
Rule 134   condicionR -> CHAR opR CHAR
Rule 135   condicionR -> CHAR opR ID
Rule 136   condicionR -> ID opR ID
Rule 137   condicionR -> ID opR INT
Rule 138   condicionR -> ID opR FLOAT
Rule 139   condicionR -> ID opR LONG
Rule 140   condicionR -> ID opR STRING_1
Rule 141   condicionR -> ID opR CHAR
Rule 142   condicionN -> EXCL_WS BOOLEAN
Rule 143   condicionN -> EXCL_WS ID
Rule 144   opL -> CONJ
Rule 145   opL -> DISJ
Rule 146   opR -> LANGLE
Rule 147   opR -> RANGLE
Rule 148   opR -> LE
Rule 149   opR -> GE
Rule 150   opR -> EXCL_EQ
Rule 151   opR -> EXCL_EQEQ
Rule 152   opR -> AS_SAFE
Rule 153   opR -> EQEQ
Rule 154   opR -> EQEQEQ
Rule 155   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 156   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 157   instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 158   stack_actuar -> ID DOT stack_funciones
Rule 159   stack_funciones -> stack_isEmpty
Rule 160   stack_funciones -> stack_push
Rule 161   stack_funciones -> stack_pop
Rule 162   stack_funciones -> stack_peek
Rule 163   stack_funciones -> stack_size
Rule 164   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 165   stack_pop -> POP LPAREN RPAREN
Rule 166   stack_push -> PUSH LPAREN factor RPAREN
Rule 167   stack_peek -> PEEK LPAREN RPAREN
Rule 168   stack_size -> SIZE LPAREN RPAREN
Rule 169   Lmetod -> FIRST LPAREN RPAREN
Rule 170   Lmetod -> LAST LPAREN RPAREN
Rule 171   Lmetod -> REMOVEL LPAREN RPAREN
Rule 172   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 173   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 174   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 175   while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
Rule 176   while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
Rule 177   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 178   lsimplem -> ID DOT Lmetod
Rule 179   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 33
ANNOTATION           : 
APPEND               : 172
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 152
AT_NO_WS             : 
BOOLEAN              : 65 93 116 116 118 119 142
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 67 92 134 134 135 141
CLASS                : 
COLONCOLON           : 
COMMA                : 105 106
COMMENT              : 
COMPANION            : 
CONJ                 : 144
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 85
DISJ                 : 145
DIVIDE               : 82
DIVIDEIN             : 
DO                   : 
DOT                  : 33 34 35 36 46 158 178 179
DOTS                 : 41 51 104 155 177
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 112
ENUM                 : 
EQEQ                 : 153
EQEQEQ               : 154
EQUAL                : 41 52 59 60 61 62 63 64 65 66 67 68 69 70 155 177
EXCL_EQ              : 150
EXCL_EQEQ            : 151
EXCL_NO_WS           : 
EXCL_WS              : 142 143
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 169
FLOAT                : 63 90 121 124 124 125 126 127 130 138
FOR                  : 42 43
FUN                  : 96 97 98 99 100 101
GE                   : 149
GET                  : 
HASH                 : 
ID                   : 33 34 35 36 41 42 44 46 51 52 94 96 97 97 98 98 99 100 101 104 117 117 118 119 123 127 131 133 135 136 136 137 138 139 140 141 143 155 158 175 177 178 179
IF                   : 110 111
IMPORT               : 
IN                   : 42
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 84
INCREMENTTIMES       : 
INDICES              : 46
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 45 45 59 89 120 120 121 122 123 125 129 137 175
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 164
LANGLE               : 41 41 146 156 157 177 177
LAST                 : 170
LATEINIT             : 
LCURL                : 42 43 96 97 98 99 100 101 110 111 112 175 176
LE                   : 148
LINEBREAK            : 3 4 5 5 6 7 8 8 9 108 108 109
LINKEDL              : 41 157 177 177
LISTOF               : 
LONG                 : 61 91 122 126 128 128 129 130 131 139
LPAREN               : 33 34 35 36 37 38 39 40 41 42 43 88 96 97 98 99 100 101 110 111 157 164 165 166 167 168 169 170 171 172 173 174 175 176 177
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 80
MOD                  : 83
MODIN                : 
NOINLINE             : 
OBJECT               : 172 173 177 177
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 34 167
PLUS                 : 79
POLL                 : 35
POP                  : 165
PRINT                : 37 39
PRINTLN              : 38 40
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 166
QUEST_WS             : 
QUEUE                : 41
RANGE                : 
RANGLE               : 41 41 147 156 157 177 177
RCURL                : 42 43 96 97 98 99 100 101 110 111 112 175 176
RECEIVER             : 
REIFIED              : 
REMOVE               : 36
REMOVEI              : 174
REMOVEL              : 171
REMOVEN              : 173
RETURN               : 
RPAREN               : 33 34 35 36 37 38 39 40 41 42 43 88 96 97 98 99 100 101 110 111 157 164 165 166 167 168 169 170 171 172 173 174 175 176 177
RSQUARE              : 
SEALED               : 
SEMICOLON            : 2 6 7 8
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 168
STACK                : 156
STRING_1             : 69 95 132 132 133 140
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 65 66 75
TCHAR                : 67 68 76
TDOUBLE              : 74
TEMPLATE             : 
TFLOAT               : 63 64 73
THIS                 : 
THREEDOTS            : 45
THROW                : 
TIMES                : 81
TINT                 : 59 60 71 174
TLONG                : 61 62 72
TRY                  : 
TSTRING              : 69 70 77
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 50
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 49
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 175 176
error                : 39 40 43 60 62 64 66 68 70 176

Nonterminals, with rules where they appear

Cmetod               : 179
Lmetod               : 178
asignacion           : 12
asignacionSimple     : 47 48
blocks               : 1 2 3 4 5 6 7 8
condicion            : 14 110 111
condicionL           : 113
condicionN           : 115
condicionR           : 114
def_estruct_tipoDato : 22 155
else                 : 111
estructurasControl   : 13
estructurasDatos     : 16
expression           : 11 37 38 78 79 80 81 82 83 84 85 88
factor               : 33 87 166
for                  : 26
funcion              : 15
if                   : 27
impresion            : 10
instance_linkedlist  : 21 155
iterable             : 42
keywordVariables     : 41 47 155 177
lcomp                : 25
line                 : 4 5 7 8 107 108 109 0
lineorBreak          : 42 43 96 97 100 110 111 112 175 176
lista                : 23
lsimplem             : 24
masParametros        : 103 106
opL                  : 116 117 118 119
opR                  : 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 175
parametro            : 102 103 105 106
parametros           : 100 101
queue                : 17
queue_add            : 29
queue_operations     : 18
queue_peek           : 30
queue_poll           : 32
queue_remove         : 31
stack                : 19
stack_actuar         : 20
stack_funciones      : 158
stack_isEmpty        : 159
stack_peek           : 162
stack_pop            : 161
stack_push           : 160
stack_size           : 163
term                 : 79 80 81 82 83 86
tipoBoolean          : 56
tipoChar             : 57
tipoDato             : 41 41 104 156 157
tipoDatoEspecifico   : 51
tipoEntero           : 53
tipoFloat            : 55
tipoLong             : 54
tipoString           : 58
valor                : 52
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 1
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 1

    (0) S' -> line .



state 2

    (1) line -> blocks .
    (2) line -> blocks . SEMICOLON
    (3) line -> blocks . LINEBREAK
    (4) line -> blocks . LINEBREAK line
    (5) line -> blocks . LINEBREAK line LINEBREAK
    (6) line -> blocks . SEMICOLON LINEBREAK
    (7) line -> blocks . SEMICOLON LINEBREAK line
    (8) line -> blocks . SEMICOLON LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 1 (line -> blocks .)
    RCURL           reduce using rule 1 (line -> blocks .)
    SEMICOLON       shift and go to state 53
    LINEBREAK       shift and go to state 54

  ! LINEBREAK       [ reduce using rule 1 (line -> blocks .) ]


state 3

    (9) line -> LINEBREAK .

    $end            reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       reduce using rule 9 (line -> LINEBREAK .)
    RCURL           reduce using rule 9 (line -> LINEBREAK .)


state 4

    (10) blocks -> impresion .

    SEMICOLON       reduce using rule 10 (blocks -> impresion .)
    LINEBREAK       reduce using rule 10 (blocks -> impresion .)
    $end            reduce using rule 10 (blocks -> impresion .)
    RCURL           reduce using rule 10 (blocks -> impresion .)


state 5

    (11) blocks -> expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . TIMES term
    (82) expression -> expression . DIVIDE term
    (83) expression -> expression . MOD term
    (84) expression -> expression . INCREMENTONE
    (85) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 11 (blocks -> expression .)
    LINEBREAK       reduce using rule 11 (blocks -> expression .)
    $end            reduce using rule 11 (blocks -> expression .)
    RCURL           reduce using rule 11 (blocks -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 6

    (12) blocks -> asignacion .

    SEMICOLON       reduce using rule 12 (blocks -> asignacion .)
    LINEBREAK       reduce using rule 12 (blocks -> asignacion .)
    $end            reduce using rule 12 (blocks -> asignacion .)
    RCURL           reduce using rule 12 (blocks -> asignacion .)


state 7

    (13) blocks -> estructurasControl .

    SEMICOLON       reduce using rule 13 (blocks -> estructurasControl .)
    LINEBREAK       reduce using rule 13 (blocks -> estructurasControl .)
    $end            reduce using rule 13 (blocks -> estructurasControl .)
    RCURL           reduce using rule 13 (blocks -> estructurasControl .)


state 8

    (14) blocks -> condicion .

    SEMICOLON       reduce using rule 14 (blocks -> condicion .)
    LINEBREAK       reduce using rule 14 (blocks -> condicion .)
    $end            reduce using rule 14 (blocks -> condicion .)
    RCURL           reduce using rule 14 (blocks -> condicion .)


state 9

    (15) blocks -> funcion .

    SEMICOLON       reduce using rule 15 (blocks -> funcion .)
    LINEBREAK       reduce using rule 15 (blocks -> funcion .)
    $end            reduce using rule 15 (blocks -> funcion .)
    RCURL           reduce using rule 15 (blocks -> funcion .)


state 10

    (16) blocks -> estructurasDatos .

    SEMICOLON       reduce using rule 16 (blocks -> estructurasDatos .)
    LINEBREAK       reduce using rule 16 (blocks -> estructurasDatos .)
    $end            reduce using rule 16 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 16 (blocks -> estructurasDatos .)


state 11

    (37) impresion -> PRINT . LPAREN expression RPAREN
    (39) impresion -> PRINT . LPAREN error RPAREN

    LPAREN          shift and go to state 62


state 12

    (88) term -> LPAREN . expression RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 63
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 13

    (38) impresion -> PRINTLN . LPAREN expression RPAREN
    (40) impresion -> PRINTLN . LPAREN error RPAREN

    LPAREN          shift and go to state 71


state 14

    (86) expression -> term .

    PLUS            reduce using rule 86 (expression -> term .)
    MINUS           reduce using rule 86 (expression -> term .)
    TIMES           reduce using rule 86 (expression -> term .)
    DIVIDE          reduce using rule 86 (expression -> term .)
    MOD             reduce using rule 86 (expression -> term .)
    INCREMENTONE    reduce using rule 86 (expression -> term .)
    DECREMENTONE    reduce using rule 86 (expression -> term .)
    SEMICOLON       reduce using rule 86 (expression -> term .)
    LINEBREAK       reduce using rule 86 (expression -> term .)
    $end            reduce using rule 86 (expression -> term .)
    RPAREN          reduce using rule 86 (expression -> term .)
    RCURL           reduce using rule 86 (expression -> term .)


state 15

    (47) asignacion -> keywordVariables . asignacionSimple
    (41) queue -> keywordVariables . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (155) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (177) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 73

    asignacionSimple               shift and go to state 72

state 16

    (48) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 48 (asignacion -> asignacionSimple .)
    LINEBREAK       reduce using rule 48 (asignacion -> asignacionSimple .)
    $end            reduce using rule 48 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 48 (asignacion -> asignacionSimple .)


state 17

    (26) estructurasControl -> for .

    SEMICOLON       reduce using rule 26 (estructurasControl -> for .)
    LINEBREAK       reduce using rule 26 (estructurasControl -> for .)
    $end            reduce using rule 26 (estructurasControl -> for .)
    RCURL           reduce using rule 26 (estructurasControl -> for .)


state 18

    (27) estructurasControl -> if .

    SEMICOLON       reduce using rule 27 (estructurasControl -> if .)
    LINEBREAK       reduce using rule 27 (estructurasControl -> if .)
    $end            reduce using rule 27 (estructurasControl -> if .)
    RCURL           reduce using rule 27 (estructurasControl -> if .)


state 19

    (28) estructurasControl -> while .

    SEMICOLON       reduce using rule 28 (estructurasControl -> while .)
    LINEBREAK       reduce using rule 28 (estructurasControl -> while .)
    $end            reduce using rule 28 (estructurasControl -> while .)
    RCURL           reduce using rule 28 (estructurasControl -> while .)


state 20

    (113) condicion -> condicionL .

    SEMICOLON       reduce using rule 113 (condicion -> condicionL .)
    LINEBREAK       reduce using rule 113 (condicion -> condicionL .)
    $end            reduce using rule 113 (condicion -> condicionL .)
    RCURL           reduce using rule 113 (condicion -> condicionL .)
    RPAREN          reduce using rule 113 (condicion -> condicionL .)


state 21

    (114) condicion -> condicionR .

    SEMICOLON       reduce using rule 114 (condicion -> condicionR .)
    LINEBREAK       reduce using rule 114 (condicion -> condicionR .)
    $end            reduce using rule 114 (condicion -> condicionR .)
    RCURL           reduce using rule 114 (condicion -> condicionR .)
    RPAREN          reduce using rule 114 (condicion -> condicionR .)


state 22

    (115) condicion -> condicionN .

    SEMICOLON       reduce using rule 115 (condicion -> condicionN .)
    LINEBREAK       reduce using rule 115 (condicion -> condicionN .)
    $end            reduce using rule 115 (condicion -> condicionN .)
    RCURL           reduce using rule 115 (condicion -> condicionN .)
    RPAREN          reduce using rule 115 (condicion -> condicionN .)


state 23

    (96) funcion -> FUN . ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> FUN . ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> FUN . ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> FUN . ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> FUN . ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> FUN . ID LPAREN parametros RPAREN LCURL RCURL

    ID              shift and go to state 74


state 24

    (51) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (52) asignacionSimple -> ID . EQUAL valor
    (117) condicionL -> ID . opL ID
    (118) condicionL -> ID . opL BOOLEAN
    (136) condicionR -> ID . opR ID
    (137) condicionR -> ID . opR INT
    (138) condicionR -> ID . opR FLOAT
    (139) condicionR -> ID . opR LONG
    (140) condicionR -> ID . opR STRING_1
    (141) condicionR -> ID . opR CHAR
    (158) stack_actuar -> ID . DOT stack_funciones
    (178) lsimplem -> ID . DOT Lmetod
    (179) lcomp -> ID . DOT Cmetod
    (94) factor -> ID .
    (33) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (36) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (144) opL -> . CONJ
    (145) opL -> . DISJ
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    DOTS            shift and go to state 75
    EQUAL           shift and go to state 76
    DOT             shift and go to state 79
    PLUS            reduce using rule 94 (factor -> ID .)
    MINUS           reduce using rule 94 (factor -> ID .)
    TIMES           reduce using rule 94 (factor -> ID .)
    DIVIDE          reduce using rule 94 (factor -> ID .)
    MOD             reduce using rule 94 (factor -> ID .)
    INCREMENTONE    reduce using rule 94 (factor -> ID .)
    DECREMENTONE    reduce using rule 94 (factor -> ID .)
    SEMICOLON       reduce using rule 94 (factor -> ID .)
    LINEBREAK       reduce using rule 94 (factor -> ID .)
    $end            reduce using rule 94 (factor -> ID .)
    RCURL           reduce using rule 94 (factor -> ID .)
    CONJ            shift and go to state 80
    DISJ            shift and go to state 81
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opL                            shift and go to state 77
    opR                            shift and go to state 78

state 25

    (17) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 17 (estructurasDatos -> queue .)
    LINEBREAK       reduce using rule 17 (estructurasDatos -> queue .)
    $end            reduce using rule 17 (estructurasDatos -> queue .)
    RCURL           reduce using rule 17 (estructurasDatos -> queue .)


state 26

    (18) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 18 (estructurasDatos -> queue_operations .)
    LINEBREAK       reduce using rule 18 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 18 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 18 (estructurasDatos -> queue_operations .)


state 27

    (19) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 19 (estructurasDatos -> stack .)
    LINEBREAK       reduce using rule 19 (estructurasDatos -> stack .)
    $end            reduce using rule 19 (estructurasDatos -> stack .)
    RCURL           reduce using rule 19 (estructurasDatos -> stack .)


state 28

    (20) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    LINEBREAK       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 20 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 20 (estructurasDatos -> stack_actuar .)


state 29

    (21) estructurasDatos -> instance_linkedlist .

    SEMICOLON       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    LINEBREAK       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 21 (estructurasDatos -> instance_linkedlist .)


state 30

    (22) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    LINEBREAK       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)


state 31

    (23) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 23 (estructurasDatos -> lista .)
    LINEBREAK       reduce using rule 23 (estructurasDatos -> lista .)
    $end            reduce using rule 23 (estructurasDatos -> lista .)
    RCURL           reduce using rule 23 (estructurasDatos -> lista .)


state 32

    (24) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 24 (estructurasDatos -> lsimplem .)
    LINEBREAK       reduce using rule 24 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 24 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 24 (estructurasDatos -> lsimplem .)


state 33

    (25) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 25 (estructurasDatos -> lcomp .)
    LINEBREAK       reduce using rule 25 (estructurasDatos -> lcomp .)
    $end            reduce using rule 25 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 25 (estructurasDatos -> lcomp .)


state 34

    (87) term -> factor .

    PLUS            reduce using rule 87 (term -> factor .)
    MINUS           reduce using rule 87 (term -> factor .)
    TIMES           reduce using rule 87 (term -> factor .)
    DIVIDE          reduce using rule 87 (term -> factor .)
    MOD             reduce using rule 87 (term -> factor .)
    INCREMENTONE    reduce using rule 87 (term -> factor .)
    DECREMENTONE    reduce using rule 87 (term -> factor .)
    SEMICOLON       reduce using rule 87 (term -> factor .)
    LINEBREAK       reduce using rule 87 (term -> factor .)
    $end            reduce using rule 87 (term -> factor .)
    RPAREN          reduce using rule 87 (term -> factor .)
    RCURL           reduce using rule 87 (term -> factor .)


state 35

    (49) keywordVariables -> VAR .

    ID              reduce using rule 49 (keywordVariables -> VAR .)


state 36

    (50) keywordVariables -> VAL .

    ID              reduce using rule 50 (keywordVariables -> VAL .)


state 37

    (42) for -> FOR . LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> FOR . LPAREN error RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 91


state 38

    (110) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL else

    LPAREN          shift and go to state 92


state 39

    (175) while -> WHILE . LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> WHILE . LPAREN error RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 93


state 40

    (120) condicionR -> INT . opR INT
    (121) condicionR -> INT . opR FLOAT
    (122) condicionR -> INT . opR LONG
    (123) condicionR -> INT . opR ID
    (89) factor -> INT .
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    PLUS            reduce using rule 89 (factor -> INT .)
    MINUS           reduce using rule 89 (factor -> INT .)
    TIMES           reduce using rule 89 (factor -> INT .)
    DIVIDE          reduce using rule 89 (factor -> INT .)
    MOD             reduce using rule 89 (factor -> INT .)
    INCREMENTONE    reduce using rule 89 (factor -> INT .)
    DECREMENTONE    reduce using rule 89 (factor -> INT .)
    SEMICOLON       reduce using rule 89 (factor -> INT .)
    LINEBREAK       reduce using rule 89 (factor -> INT .)
    $end            reduce using rule 89 (factor -> INT .)
    RCURL           reduce using rule 89 (factor -> INT .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 94

state 41

    (116) condicionL -> BOOLEAN . opL BOOLEAN
    (119) condicionL -> BOOLEAN . opL ID
    (93) factor -> BOOLEAN .
    (144) opL -> . CONJ
    (145) opL -> . DISJ

    PLUS            reduce using rule 93 (factor -> BOOLEAN .)
    MINUS           reduce using rule 93 (factor -> BOOLEAN .)
    TIMES           reduce using rule 93 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 93 (factor -> BOOLEAN .)
    MOD             reduce using rule 93 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 93 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 93 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 93 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 93 (factor -> BOOLEAN .)
    $end            reduce using rule 93 (factor -> BOOLEAN .)
    RCURL           reduce using rule 93 (factor -> BOOLEAN .)
    CONJ            shift and go to state 80
    DISJ            shift and go to state 81

    opL                            shift and go to state 95

state 42

    (124) condicionR -> FLOAT . opR FLOAT
    (125) condicionR -> FLOAT . opR INT
    (126) condicionR -> FLOAT . opR LONG
    (127) condicionR -> FLOAT . opR ID
    (90) factor -> FLOAT .
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    PLUS            reduce using rule 90 (factor -> FLOAT .)
    MINUS           reduce using rule 90 (factor -> FLOAT .)
    TIMES           reduce using rule 90 (factor -> FLOAT .)
    DIVIDE          reduce using rule 90 (factor -> FLOAT .)
    MOD             reduce using rule 90 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 90 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 90 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 90 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 90 (factor -> FLOAT .)
    $end            reduce using rule 90 (factor -> FLOAT .)
    RCURL           reduce using rule 90 (factor -> FLOAT .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 96

state 43

    (128) condicionR -> LONG . opR LONG
    (129) condicionR -> LONG . opR INT
    (130) condicionR -> LONG . opR FLOAT
    (131) condicionR -> LONG . opR ID
    (91) factor -> LONG .
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    PLUS            reduce using rule 91 (factor -> LONG .)
    MINUS           reduce using rule 91 (factor -> LONG .)
    TIMES           reduce using rule 91 (factor -> LONG .)
    DIVIDE          reduce using rule 91 (factor -> LONG .)
    MOD             reduce using rule 91 (factor -> LONG .)
    INCREMENTONE    reduce using rule 91 (factor -> LONG .)
    DECREMENTONE    reduce using rule 91 (factor -> LONG .)
    SEMICOLON       reduce using rule 91 (factor -> LONG .)
    LINEBREAK       reduce using rule 91 (factor -> LONG .)
    $end            reduce using rule 91 (factor -> LONG .)
    RCURL           reduce using rule 91 (factor -> LONG .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 97

state 44

    (132) condicionR -> STRING_1 . opR STRING_1
    (133) condicionR -> STRING_1 . opR ID
    (95) factor -> STRING_1 .
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    PLUS            reduce using rule 95 (factor -> STRING_1 .)
    MINUS           reduce using rule 95 (factor -> STRING_1 .)
    TIMES           reduce using rule 95 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 95 (factor -> STRING_1 .)
    MOD             reduce using rule 95 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 95 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 95 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 95 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 95 (factor -> STRING_1 .)
    $end            reduce using rule 95 (factor -> STRING_1 .)
    RCURL           reduce using rule 95 (factor -> STRING_1 .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 98

state 45

    (134) condicionR -> CHAR . opR CHAR
    (135) condicionR -> CHAR . opR ID
    (92) factor -> CHAR .
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    PLUS            reduce using rule 92 (factor -> CHAR .)
    MINUS           reduce using rule 92 (factor -> CHAR .)
    TIMES           reduce using rule 92 (factor -> CHAR .)
    DIVIDE          reduce using rule 92 (factor -> CHAR .)
    MOD             reduce using rule 92 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 92 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 92 (factor -> CHAR .)
    SEMICOLON       reduce using rule 92 (factor -> CHAR .)
    LINEBREAK       reduce using rule 92 (factor -> CHAR .)
    $end            reduce using rule 92 (factor -> CHAR .)
    RCURL           reduce using rule 92 (factor -> CHAR .)
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 99

state 46

    (142) condicionN -> EXCL_WS . BOOLEAN
    (143) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 100
    ID              shift and go to state 101


state 47

    (157) instance_linkedlist -> LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 102


state 48

    (29) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 29 (queue_operations -> queue_add .)
    LINEBREAK       reduce using rule 29 (queue_operations -> queue_add .)
    $end            reduce using rule 29 (queue_operations -> queue_add .)
    RCURL           reduce using rule 29 (queue_operations -> queue_add .)


state 49

    (30) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 30 (queue_operations -> queue_peek .)
    LINEBREAK       reduce using rule 30 (queue_operations -> queue_peek .)
    $end            reduce using rule 30 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 30 (queue_operations -> queue_peek .)


state 50

    (31) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 31 (queue_operations -> queue_remove .)
    LINEBREAK       reduce using rule 31 (queue_operations -> queue_remove .)
    $end            reduce using rule 31 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 31 (queue_operations -> queue_remove .)


state 51

    (32) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 32 (queue_operations -> queue_poll .)
    LINEBREAK       reduce using rule 32 (queue_operations -> queue_poll .)
    $end            reduce using rule 32 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 32 (queue_operations -> queue_poll .)


state 52

    (156) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 103


state 53

    (2) line -> blocks SEMICOLON .
    (6) line -> blocks SEMICOLON . LINEBREAK
    (7) line -> blocks SEMICOLON . LINEBREAK line
    (8) line -> blocks SEMICOLON . LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 2 (line -> blocks SEMICOLON .)
    RCURL           reduce using rule 2 (line -> blocks SEMICOLON .)
    LINEBREAK       shift and go to state 104

  ! LINEBREAK       [ reduce using rule 2 (line -> blocks SEMICOLON .) ]


state 54

    (3) line -> blocks LINEBREAK .
    (4) line -> blocks LINEBREAK . line
    (5) line -> blocks LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 3 (line -> blocks LINEBREAK .)
    RCURL           reduce using rule 3 (line -> blocks LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 3 (line -> blocks LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 105
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 55

    (79) expression -> expression PLUS . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 106
    factor                         shift and go to state 34

state 56

    (80) expression -> expression MINUS . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 107
    factor                         shift and go to state 34

state 57

    (81) expression -> expression TIMES . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 108
    factor                         shift and go to state 34

state 58

    (82) expression -> expression DIVIDE . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 109
    factor                         shift and go to state 34

state 59

    (83) expression -> expression MOD . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 110
    factor                         shift and go to state 34

state 60

    (84) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 84 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 84 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 84 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 84 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 84 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 84 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 84 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 84 (expression -> expression INCREMENTONE .)
    LINEBREAK       reduce using rule 84 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 84 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 84 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 84 (expression -> expression INCREMENTONE .)


state 61

    (85) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 85 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 85 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 85 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 85 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 85 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 85 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 85 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 85 (expression -> expression DECREMENTONE .)
    LINEBREAK       reduce using rule 85 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 85 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 85 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 85 (expression -> expression DECREMENTONE .)


state 62

    (37) impresion -> PRINT LPAREN . expression RPAREN
    (39) impresion -> PRINT LPAREN . error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    error           shift and go to state 112
    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 111
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 63

    (88) term -> LPAREN expression . RPAREN
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . TIMES term
    (82) expression -> expression . DIVIDE term
    (83) expression -> expression . MOD term
    (84) expression -> expression . INCREMENTONE
    (85) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 64

    (89) factor -> INT .

    RPAREN          reduce using rule 89 (factor -> INT .)
    PLUS            reduce using rule 89 (factor -> INT .)
    MINUS           reduce using rule 89 (factor -> INT .)
    TIMES           reduce using rule 89 (factor -> INT .)
    DIVIDE          reduce using rule 89 (factor -> INT .)
    MOD             reduce using rule 89 (factor -> INT .)
    INCREMENTONE    reduce using rule 89 (factor -> INT .)
    DECREMENTONE    reduce using rule 89 (factor -> INT .)
    SEMICOLON       reduce using rule 89 (factor -> INT .)
    LINEBREAK       reduce using rule 89 (factor -> INT .)
    $end            reduce using rule 89 (factor -> INT .)
    RCURL           reduce using rule 89 (factor -> INT .)


state 65

    (90) factor -> FLOAT .

    RPAREN          reduce using rule 90 (factor -> FLOAT .)
    PLUS            reduce using rule 90 (factor -> FLOAT .)
    MINUS           reduce using rule 90 (factor -> FLOAT .)
    TIMES           reduce using rule 90 (factor -> FLOAT .)
    DIVIDE          reduce using rule 90 (factor -> FLOAT .)
    MOD             reduce using rule 90 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 90 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 90 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 90 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 90 (factor -> FLOAT .)
    $end            reduce using rule 90 (factor -> FLOAT .)
    RCURL           reduce using rule 90 (factor -> FLOAT .)


state 66

    (91) factor -> LONG .

    RPAREN          reduce using rule 91 (factor -> LONG .)
    PLUS            reduce using rule 91 (factor -> LONG .)
    MINUS           reduce using rule 91 (factor -> LONG .)
    TIMES           reduce using rule 91 (factor -> LONG .)
    DIVIDE          reduce using rule 91 (factor -> LONG .)
    MOD             reduce using rule 91 (factor -> LONG .)
    INCREMENTONE    reduce using rule 91 (factor -> LONG .)
    DECREMENTONE    reduce using rule 91 (factor -> LONG .)
    SEMICOLON       reduce using rule 91 (factor -> LONG .)
    LINEBREAK       reduce using rule 91 (factor -> LONG .)
    $end            reduce using rule 91 (factor -> LONG .)
    RCURL           reduce using rule 91 (factor -> LONG .)


state 67

    (92) factor -> CHAR .

    RPAREN          reduce using rule 92 (factor -> CHAR .)
    PLUS            reduce using rule 92 (factor -> CHAR .)
    MINUS           reduce using rule 92 (factor -> CHAR .)
    TIMES           reduce using rule 92 (factor -> CHAR .)
    DIVIDE          reduce using rule 92 (factor -> CHAR .)
    MOD             reduce using rule 92 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 92 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 92 (factor -> CHAR .)
    SEMICOLON       reduce using rule 92 (factor -> CHAR .)
    LINEBREAK       reduce using rule 92 (factor -> CHAR .)
    $end            reduce using rule 92 (factor -> CHAR .)
    RCURL           reduce using rule 92 (factor -> CHAR .)


state 68

    (93) factor -> BOOLEAN .

    RPAREN          reduce using rule 93 (factor -> BOOLEAN .)
    PLUS            reduce using rule 93 (factor -> BOOLEAN .)
    MINUS           reduce using rule 93 (factor -> BOOLEAN .)
    TIMES           reduce using rule 93 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 93 (factor -> BOOLEAN .)
    MOD             reduce using rule 93 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 93 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 93 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 93 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 93 (factor -> BOOLEAN .)
    $end            reduce using rule 93 (factor -> BOOLEAN .)
    RCURL           reduce using rule 93 (factor -> BOOLEAN .)


state 69

    (94) factor -> ID .

    RPAREN          reduce using rule 94 (factor -> ID .)
    PLUS            reduce using rule 94 (factor -> ID .)
    MINUS           reduce using rule 94 (factor -> ID .)
    TIMES           reduce using rule 94 (factor -> ID .)
    DIVIDE          reduce using rule 94 (factor -> ID .)
    MOD             reduce using rule 94 (factor -> ID .)
    INCREMENTONE    reduce using rule 94 (factor -> ID .)
    DECREMENTONE    reduce using rule 94 (factor -> ID .)
    SEMICOLON       reduce using rule 94 (factor -> ID .)
    LINEBREAK       reduce using rule 94 (factor -> ID .)
    $end            reduce using rule 94 (factor -> ID .)
    RCURL           reduce using rule 94 (factor -> ID .)


state 70

    (95) factor -> STRING_1 .

    RPAREN          reduce using rule 95 (factor -> STRING_1 .)
    PLUS            reduce using rule 95 (factor -> STRING_1 .)
    MINUS           reduce using rule 95 (factor -> STRING_1 .)
    TIMES           reduce using rule 95 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 95 (factor -> STRING_1 .)
    MOD             reduce using rule 95 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 95 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 95 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 95 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 95 (factor -> STRING_1 .)
    $end            reduce using rule 95 (factor -> STRING_1 .)
    RCURL           reduce using rule 95 (factor -> STRING_1 .)


state 71

    (38) impresion -> PRINTLN LPAREN . expression RPAREN
    (40) impresion -> PRINTLN LPAREN . error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    error           shift and go to state 115
    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 114
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 72

    (47) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)
    LINEBREAK       reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 47 (asignacion -> keywordVariables asignacionSimple .)


state 73

    (41) queue -> keywordVariables ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (155) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (177) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (51) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (52) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 116
    EQUAL           shift and go to state 76


state 74

    (96) funcion -> FUN ID . LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> FUN ID . LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> FUN ID . LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> FUN ID . LPAREN RPAREN LCURL RCURL
    (100) funcion -> FUN ID . LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> FUN ID . LPAREN parametros RPAREN LCURL RCURL

    LPAREN          shift and go to state 117


state 75

    (51) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (53) tipoDatoEspecifico -> . tipoEntero
    (54) tipoDatoEspecifico -> . tipoLong
    (55) tipoDatoEspecifico -> . tipoFloat
    (56) tipoDatoEspecifico -> . tipoBoolean
    (57) tipoDatoEspecifico -> . tipoChar
    (58) tipoDatoEspecifico -> . tipoString
    (59) tipoEntero -> . TINT EQUAL INT
    (60) tipoEntero -> . TINT EQUAL error
    (61) tipoLong -> . TLONG EQUAL LONG
    (62) tipoLong -> . TLONG EQUAL error
    (63) tipoFloat -> . TFLOAT EQUAL FLOAT
    (64) tipoFloat -> . TFLOAT EQUAL error
    (65) tipoBoolean -> . TBOOLEAN EQUAL BOOLEAN
    (66) tipoBoolean -> . TBOOLEAN EQUAL error
    (67) tipoChar -> . TCHAR EQUAL CHAR
    (68) tipoChar -> . TCHAR EQUAL error
    (69) tipoString -> . TSTRING EQUAL STRING_1
    (70) tipoString -> . TSTRING EQUAL error

    TINT            shift and go to state 125
    TLONG           shift and go to state 126
    TFLOAT          shift and go to state 127
    TBOOLEAN        shift and go to state 128
    TCHAR           shift and go to state 129
    TSTRING         shift and go to state 130

    tipoDatoEspecifico             shift and go to state 118
    tipoEntero                     shift and go to state 119
    tipoLong                       shift and go to state 120
    tipoFloat                      shift and go to state 121
    tipoBoolean                    shift and go to state 122
    tipoChar                       shift and go to state 123
    tipoString                     shift and go to state 124

state 76

    (52) asignacionSimple -> ID EQUAL . valor
    (78) valor -> . expression
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    valor                          shift and go to state 131
    expression                     shift and go to state 132
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 77

    (117) condicionL -> ID opL . ID
    (118) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 133
    BOOLEAN         shift and go to state 134


state 78

    (136) condicionR -> ID opR . ID
    (137) condicionR -> ID opR . INT
    (138) condicionR -> ID opR . FLOAT
    (139) condicionR -> ID opR . LONG
    (140) condicionR -> ID opR . STRING_1
    (141) condicionR -> ID opR . CHAR

    ID              shift and go to state 135
    INT             shift and go to state 136
    FLOAT           shift and go to state 137
    LONG            shift and go to state 138
    STRING_1        shift and go to state 139
    CHAR            shift and go to state 140


state 79

    (158) stack_actuar -> ID DOT . stack_funciones
    (178) lsimplem -> ID DOT . Lmetod
    (179) lcomp -> ID DOT . Cmetod
    (33) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (34) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (36) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (35) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (159) stack_funciones -> . stack_isEmpty
    (160) stack_funciones -> . stack_push
    (161) stack_funciones -> . stack_pop
    (162) stack_funciones -> . stack_peek
    (163) stack_funciones -> . stack_size
    (169) Lmetod -> . FIRST LPAREN RPAREN
    (170) Lmetod -> . LAST LPAREN RPAREN
    (171) Lmetod -> . REMOVEL LPAREN RPAREN
    (172) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (173) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (174) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (164) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (166) stack_push -> . PUSH LPAREN factor RPAREN
    (165) stack_pop -> . POP LPAREN RPAREN
    (167) stack_peek -> . PEEK LPAREN RPAREN
    (168) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 144
    PEEK            shift and go to state 145
    REMOVE          shift and go to state 146
    POLL            shift and go to state 147
    FIRST           shift and go to state 153
    LAST            shift and go to state 154
    REMOVEL         shift and go to state 155
    APPEND          shift and go to state 156
    REMOVEN         shift and go to state 157
    REMOVEI         shift and go to state 158
    ISEMPTY         shift and go to state 159
    PUSH            shift and go to state 160
    POP             shift and go to state 161
    SIZE            shift and go to state 162

    stack_funciones                shift and go to state 141
    Lmetod                         shift and go to state 142
    Cmetod                         shift and go to state 143
    stack_isEmpty                  shift and go to state 148
    stack_push                     shift and go to state 149
    stack_pop                      shift and go to state 150
    stack_peek                     shift and go to state 151
    stack_size                     shift and go to state 152

state 80

    (144) opL -> CONJ .

    ID              reduce using rule 144 (opL -> CONJ .)
    BOOLEAN         reduce using rule 144 (opL -> CONJ .)


state 81

    (145) opL -> DISJ .

    ID              reduce using rule 145 (opL -> DISJ .)
    BOOLEAN         reduce using rule 145 (opL -> DISJ .)


state 82

    (146) opR -> LANGLE .

    ID              reduce using rule 146 (opR -> LANGLE .)
    INT             reduce using rule 146 (opR -> LANGLE .)
    FLOAT           reduce using rule 146 (opR -> LANGLE .)
    LONG            reduce using rule 146 (opR -> LANGLE .)
    STRING_1        reduce using rule 146 (opR -> LANGLE .)
    CHAR            reduce using rule 146 (opR -> LANGLE .)


state 83

    (147) opR -> RANGLE .

    ID              reduce using rule 147 (opR -> RANGLE .)
    INT             reduce using rule 147 (opR -> RANGLE .)
    FLOAT           reduce using rule 147 (opR -> RANGLE .)
    LONG            reduce using rule 147 (opR -> RANGLE .)
    STRING_1        reduce using rule 147 (opR -> RANGLE .)
    CHAR            reduce using rule 147 (opR -> RANGLE .)


state 84

    (148) opR -> LE .

    ID              reduce using rule 148 (opR -> LE .)
    INT             reduce using rule 148 (opR -> LE .)
    FLOAT           reduce using rule 148 (opR -> LE .)
    LONG            reduce using rule 148 (opR -> LE .)
    STRING_1        reduce using rule 148 (opR -> LE .)
    CHAR            reduce using rule 148 (opR -> LE .)


state 85

    (149) opR -> GE .

    ID              reduce using rule 149 (opR -> GE .)
    INT             reduce using rule 149 (opR -> GE .)
    FLOAT           reduce using rule 149 (opR -> GE .)
    LONG            reduce using rule 149 (opR -> GE .)
    STRING_1        reduce using rule 149 (opR -> GE .)
    CHAR            reduce using rule 149 (opR -> GE .)


state 86

    (150) opR -> EXCL_EQ .

    ID              reduce using rule 150 (opR -> EXCL_EQ .)
    INT             reduce using rule 150 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 150 (opR -> EXCL_EQ .)
    LONG            reduce using rule 150 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 150 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 150 (opR -> EXCL_EQ .)


state 87

    (151) opR -> EXCL_EQEQ .

    ID              reduce using rule 151 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 151 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 151 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 151 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 151 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 151 (opR -> EXCL_EQEQ .)


state 88

    (152) opR -> AS_SAFE .

    ID              reduce using rule 152 (opR -> AS_SAFE .)
    INT             reduce using rule 152 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 152 (opR -> AS_SAFE .)
    LONG            reduce using rule 152 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 152 (opR -> AS_SAFE .)
    CHAR            reduce using rule 152 (opR -> AS_SAFE .)


state 89

    (153) opR -> EQEQ .

    ID              reduce using rule 153 (opR -> EQEQ .)
    INT             reduce using rule 153 (opR -> EQEQ .)
    FLOAT           reduce using rule 153 (opR -> EQEQ .)
    LONG            reduce using rule 153 (opR -> EQEQ .)
    STRING_1        reduce using rule 153 (opR -> EQEQ .)
    CHAR            reduce using rule 153 (opR -> EQEQ .)


state 90

    (154) opR -> EQEQEQ .

    ID              reduce using rule 154 (opR -> EQEQEQ .)
    INT             reduce using rule 154 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 154 (opR -> EQEQEQ .)
    LONG            reduce using rule 154 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 154 (opR -> EQEQEQ .)
    CHAR            reduce using rule 154 (opR -> EQEQEQ .)


state 91

    (42) for -> FOR LPAREN . ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> FOR LPAREN . error RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 163
    error           shift and go to state 164


state 92

    (110) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL else
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 166
    ID              shift and go to state 167
    INT             shift and go to state 168
    FLOAT           shift and go to state 169
    LONG            shift and go to state 170
    STRING_1        shift and go to state 171
    CHAR            shift and go to state 172
    EXCL_WS         shift and go to state 46

    condicion                      shift and go to state 165
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22

state 93

    (175) while -> WHILE LPAREN . ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> WHILE LPAREN . error RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 173
    error           shift and go to state 174


state 94

    (120) condicionR -> INT opR . INT
    (121) condicionR -> INT opR . FLOAT
    (122) condicionR -> INT opR . LONG
    (123) condicionR -> INT opR . ID

    INT             shift and go to state 175
    FLOAT           shift and go to state 176
    LONG            shift and go to state 177
    ID              shift and go to state 178


state 95

    (116) condicionL -> BOOLEAN opL . BOOLEAN
    (119) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 179
    ID              shift and go to state 180


state 96

    (124) condicionR -> FLOAT opR . FLOAT
    (125) condicionR -> FLOAT opR . INT
    (126) condicionR -> FLOAT opR . LONG
    (127) condicionR -> FLOAT opR . ID

    FLOAT           shift and go to state 181
    INT             shift and go to state 182
    LONG            shift and go to state 183
    ID              shift and go to state 184


state 97

    (128) condicionR -> LONG opR . LONG
    (129) condicionR -> LONG opR . INT
    (130) condicionR -> LONG opR . FLOAT
    (131) condicionR -> LONG opR . ID

    LONG            shift and go to state 185
    INT             shift and go to state 186
    FLOAT           shift and go to state 187
    ID              shift and go to state 188


state 98

    (132) condicionR -> STRING_1 opR . STRING_1
    (133) condicionR -> STRING_1 opR . ID

    STRING_1        shift and go to state 189
    ID              shift and go to state 190


state 99

    (134) condicionR -> CHAR opR . CHAR
    (135) condicionR -> CHAR opR . ID

    CHAR            shift and go to state 191
    ID              shift and go to state 192


state 100

    (142) condicionN -> EXCL_WS BOOLEAN .

    SEMICOLON       reduce using rule 142 (condicionN -> EXCL_WS BOOLEAN .)
    LINEBREAK       reduce using rule 142 (condicionN -> EXCL_WS BOOLEAN .)
    $end            reduce using rule 142 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 142 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 142 (condicionN -> EXCL_WS BOOLEAN .)


state 101

    (143) condicionN -> EXCL_WS ID .

    SEMICOLON       reduce using rule 143 (condicionN -> EXCL_WS ID .)
    LINEBREAK       reduce using rule 143 (condicionN -> EXCL_WS ID .)
    $end            reduce using rule 143 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 143 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 143 (condicionN -> EXCL_WS ID .)


state 102

    (157) instance_linkedlist -> LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (71) tipoDato -> . TINT
    (72) tipoDato -> . TLONG
    (73) tipoDato -> . TFLOAT
    (74) tipoDato -> . TDOUBLE
    (75) tipoDato -> . TBOOLEAN
    (76) tipoDato -> . TCHAR
    (77) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 193

state 103

    (156) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (71) tipoDato -> . TINT
    (72) tipoDato -> . TLONG
    (73) tipoDato -> . TFLOAT
    (74) tipoDato -> . TDOUBLE
    (75) tipoDato -> . TBOOLEAN
    (76) tipoDato -> . TCHAR
    (77) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 201

state 104

    (6) line -> blocks SEMICOLON LINEBREAK .
    (7) line -> blocks SEMICOLON LINEBREAK . line
    (8) line -> blocks SEMICOLON LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    RCURL           reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 202
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 105

    (4) line -> blocks LINEBREAK line .
    (5) line -> blocks LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 4 (line -> blocks LINEBREAK line .)
    RCURL           reduce using rule 4 (line -> blocks LINEBREAK line .)
    LINEBREAK       shift and go to state 203

  ! LINEBREAK       [ reduce using rule 4 (line -> blocks LINEBREAK line .) ]


state 106

    (79) expression -> expression PLUS term .

    PLUS            reduce using rule 79 (expression -> expression PLUS term .)
    MINUS           reduce using rule 79 (expression -> expression PLUS term .)
    TIMES           reduce using rule 79 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 79 (expression -> expression PLUS term .)
    MOD             reduce using rule 79 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 79 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 79 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 79 (expression -> expression PLUS term .)
    LINEBREAK       reduce using rule 79 (expression -> expression PLUS term .)
    $end            reduce using rule 79 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 79 (expression -> expression PLUS term .)
    RCURL           reduce using rule 79 (expression -> expression PLUS term .)


state 107

    (80) expression -> expression MINUS term .

    PLUS            reduce using rule 80 (expression -> expression MINUS term .)
    MINUS           reduce using rule 80 (expression -> expression MINUS term .)
    TIMES           reduce using rule 80 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 80 (expression -> expression MINUS term .)
    MOD             reduce using rule 80 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 80 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 80 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 80 (expression -> expression MINUS term .)
    LINEBREAK       reduce using rule 80 (expression -> expression MINUS term .)
    $end            reduce using rule 80 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 80 (expression -> expression MINUS term .)
    RCURL           reduce using rule 80 (expression -> expression MINUS term .)


state 108

    (81) expression -> expression TIMES term .

    PLUS            reduce using rule 81 (expression -> expression TIMES term .)
    MINUS           reduce using rule 81 (expression -> expression TIMES term .)
    TIMES           reduce using rule 81 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 81 (expression -> expression TIMES term .)
    MOD             reduce using rule 81 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 81 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 81 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 81 (expression -> expression TIMES term .)
    LINEBREAK       reduce using rule 81 (expression -> expression TIMES term .)
    $end            reduce using rule 81 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 81 (expression -> expression TIMES term .)
    RCURL           reduce using rule 81 (expression -> expression TIMES term .)


state 109

    (82) expression -> expression DIVIDE term .

    PLUS            reduce using rule 82 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 82 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 82 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 82 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 82 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 82 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 82 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 82 (expression -> expression DIVIDE term .)
    LINEBREAK       reduce using rule 82 (expression -> expression DIVIDE term .)
    $end            reduce using rule 82 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 82 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 82 (expression -> expression DIVIDE term .)


state 110

    (83) expression -> expression MOD term .

    PLUS            reduce using rule 83 (expression -> expression MOD term .)
    MINUS           reduce using rule 83 (expression -> expression MOD term .)
    TIMES           reduce using rule 83 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 83 (expression -> expression MOD term .)
    MOD             reduce using rule 83 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 83 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 83 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 83 (expression -> expression MOD term .)
    LINEBREAK       reduce using rule 83 (expression -> expression MOD term .)
    $end            reduce using rule 83 (expression -> expression MOD term .)
    RPAREN          reduce using rule 83 (expression -> expression MOD term .)
    RCURL           reduce using rule 83 (expression -> expression MOD term .)


state 111

    (37) impresion -> PRINT LPAREN expression . RPAREN
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . TIMES term
    (82) expression -> expression . DIVIDE term
    (83) expression -> expression . MOD term
    (84) expression -> expression . INCREMENTONE
    (85) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 204
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 112

    (39) impresion -> PRINT LPAREN error . RPAREN

    RPAREN          shift and go to state 205


state 113

    (88) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 88 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 88 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 88 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 88 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 88 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 88 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 88 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 88 (term -> LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 88 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 88 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 88 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 88 (term -> LPAREN expression RPAREN .)


state 114

    (38) impresion -> PRINTLN LPAREN expression . RPAREN
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . TIMES term
    (82) expression -> expression . DIVIDE term
    (83) expression -> expression . MOD term
    (84) expression -> expression . INCREMENTONE
    (85) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 206
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 115

    (40) impresion -> PRINTLN LPAREN error . RPAREN

    RPAREN          shift and go to state 207


state 116

    (41) queue -> keywordVariables ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (155) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (177) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (51) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (53) tipoDatoEspecifico -> . tipoEntero
    (54) tipoDatoEspecifico -> . tipoLong
    (55) tipoDatoEspecifico -> . tipoFloat
    (56) tipoDatoEspecifico -> . tipoBoolean
    (57) tipoDatoEspecifico -> . tipoChar
    (58) tipoDatoEspecifico -> . tipoString
    (59) tipoEntero -> . TINT EQUAL INT
    (60) tipoEntero -> . TINT EQUAL error
    (61) tipoLong -> . TLONG EQUAL LONG
    (62) tipoLong -> . TLONG EQUAL error
    (63) tipoFloat -> . TFLOAT EQUAL FLOAT
    (64) tipoFloat -> . TFLOAT EQUAL error
    (65) tipoBoolean -> . TBOOLEAN EQUAL BOOLEAN
    (66) tipoBoolean -> . TBOOLEAN EQUAL error
    (67) tipoChar -> . TCHAR EQUAL CHAR
    (68) tipoChar -> . TCHAR EQUAL error
    (69) tipoString -> . TSTRING EQUAL STRING_1
    (70) tipoString -> . TSTRING EQUAL error

    QUEUE           shift and go to state 208
    LINKEDL         shift and go to state 209
    STACK           shift and go to state 52
    TINT            shift and go to state 125
    TLONG           shift and go to state 126
    TFLOAT          shift and go to state 127
    TBOOLEAN        shift and go to state 128
    TCHAR           shift and go to state 129
    TSTRING         shift and go to state 130

    def_estruct_tipoDato           shift and go to state 210
    tipoDatoEspecifico             shift and go to state 118
    tipoEntero                     shift and go to state 119
    tipoLong                       shift and go to state 120
    tipoFloat                      shift and go to state 121
    tipoBoolean                    shift and go to state 122
    tipoChar                       shift and go to state 123
    tipoString                     shift and go to state 124

state 117

    (96) funcion -> FUN ID LPAREN . RPAREN LCURL lineorBreak RCURL
    (97) funcion -> FUN ID LPAREN . ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> FUN ID LPAREN . ID RPAREN LCURL RCURL
    (99) funcion -> FUN ID LPAREN . RPAREN LCURL RCURL
    (100) funcion -> FUN ID LPAREN . parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> FUN ID LPAREN . parametros RPAREN LCURL RCURL
    (102) parametros -> . parametro
    (103) parametros -> . parametro masParametros
    (104) parametro -> . ID DOTS tipoDato

    RPAREN          shift and go to state 212
    ID              shift and go to state 211

    parametros                     shift and go to state 213
    parametro                      shift and go to state 214

state 118

    (51) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    SEMICOLON       reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LINEBREAK       reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 51 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 119

    (53) tipoDatoEspecifico -> tipoEntero .

    SEMICOLON       reduce using rule 53 (tipoDatoEspecifico -> tipoEntero .)
    LINEBREAK       reduce using rule 53 (tipoDatoEspecifico -> tipoEntero .)
    $end            reduce using rule 53 (tipoDatoEspecifico -> tipoEntero .)
    RCURL           reduce using rule 53 (tipoDatoEspecifico -> tipoEntero .)


state 120

    (54) tipoDatoEspecifico -> tipoLong .

    SEMICOLON       reduce using rule 54 (tipoDatoEspecifico -> tipoLong .)
    LINEBREAK       reduce using rule 54 (tipoDatoEspecifico -> tipoLong .)
    $end            reduce using rule 54 (tipoDatoEspecifico -> tipoLong .)
    RCURL           reduce using rule 54 (tipoDatoEspecifico -> tipoLong .)


state 121

    (55) tipoDatoEspecifico -> tipoFloat .

    SEMICOLON       reduce using rule 55 (tipoDatoEspecifico -> tipoFloat .)
    LINEBREAK       reduce using rule 55 (tipoDatoEspecifico -> tipoFloat .)
    $end            reduce using rule 55 (tipoDatoEspecifico -> tipoFloat .)
    RCURL           reduce using rule 55 (tipoDatoEspecifico -> tipoFloat .)


state 122

    (56) tipoDatoEspecifico -> tipoBoolean .

    SEMICOLON       reduce using rule 56 (tipoDatoEspecifico -> tipoBoolean .)
    LINEBREAK       reduce using rule 56 (tipoDatoEspecifico -> tipoBoolean .)
    $end            reduce using rule 56 (tipoDatoEspecifico -> tipoBoolean .)
    RCURL           reduce using rule 56 (tipoDatoEspecifico -> tipoBoolean .)


state 123

    (57) tipoDatoEspecifico -> tipoChar .

    SEMICOLON       reduce using rule 57 (tipoDatoEspecifico -> tipoChar .)
    LINEBREAK       reduce using rule 57 (tipoDatoEspecifico -> tipoChar .)
    $end            reduce using rule 57 (tipoDatoEspecifico -> tipoChar .)
    RCURL           reduce using rule 57 (tipoDatoEspecifico -> tipoChar .)


state 124

    (58) tipoDatoEspecifico -> tipoString .

    SEMICOLON       reduce using rule 58 (tipoDatoEspecifico -> tipoString .)
    LINEBREAK       reduce using rule 58 (tipoDatoEspecifico -> tipoString .)
    $end            reduce using rule 58 (tipoDatoEspecifico -> tipoString .)
    RCURL           reduce using rule 58 (tipoDatoEspecifico -> tipoString .)


state 125

    (59) tipoEntero -> TINT . EQUAL INT
    (60) tipoEntero -> TINT . EQUAL error

    EQUAL           shift and go to state 215


state 126

    (61) tipoLong -> TLONG . EQUAL LONG
    (62) tipoLong -> TLONG . EQUAL error

    EQUAL           shift and go to state 216


state 127

    (63) tipoFloat -> TFLOAT . EQUAL FLOAT
    (64) tipoFloat -> TFLOAT . EQUAL error

    EQUAL           shift and go to state 217


state 128

    (65) tipoBoolean -> TBOOLEAN . EQUAL BOOLEAN
    (66) tipoBoolean -> TBOOLEAN . EQUAL error

    EQUAL           shift and go to state 218


state 129

    (67) tipoChar -> TCHAR . EQUAL CHAR
    (68) tipoChar -> TCHAR . EQUAL error

    EQUAL           shift and go to state 219


state 130

    (69) tipoString -> TSTRING . EQUAL STRING_1
    (70) tipoString -> TSTRING . EQUAL error

    EQUAL           shift and go to state 220


state 131

    (52) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)
    LINEBREAK       reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 52 (asignacionSimple -> ID EQUAL valor .)


state 132

    (78) valor -> expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . TIMES term
    (82) expression -> expression . DIVIDE term
    (83) expression -> expression . MOD term
    (84) expression -> expression . INCREMENTONE
    (85) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 78 (valor -> expression .)
    LINEBREAK       reduce using rule 78 (valor -> expression .)
    $end            reduce using rule 78 (valor -> expression .)
    RCURL           reduce using rule 78 (valor -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 133

    (117) condicionL -> ID opL ID .

    SEMICOLON       reduce using rule 117 (condicionL -> ID opL ID .)
    LINEBREAK       reduce using rule 117 (condicionL -> ID opL ID .)
    $end            reduce using rule 117 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 117 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 117 (condicionL -> ID opL ID .)


state 134

    (118) condicionL -> ID opL BOOLEAN .

    SEMICOLON       reduce using rule 118 (condicionL -> ID opL BOOLEAN .)
    LINEBREAK       reduce using rule 118 (condicionL -> ID opL BOOLEAN .)
    $end            reduce using rule 118 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 118 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 118 (condicionL -> ID opL BOOLEAN .)


state 135

    (136) condicionR -> ID opR ID .

    SEMICOLON       reduce using rule 136 (condicionR -> ID opR ID .)
    LINEBREAK       reduce using rule 136 (condicionR -> ID opR ID .)
    $end            reduce using rule 136 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 136 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 136 (condicionR -> ID opR ID .)


state 136

    (137) condicionR -> ID opR INT .

    SEMICOLON       reduce using rule 137 (condicionR -> ID opR INT .)
    LINEBREAK       reduce using rule 137 (condicionR -> ID opR INT .)
    $end            reduce using rule 137 (condicionR -> ID opR INT .)
    RCURL           reduce using rule 137 (condicionR -> ID opR INT .)
    RPAREN          reduce using rule 137 (condicionR -> ID opR INT .)


state 137

    (138) condicionR -> ID opR FLOAT .

    SEMICOLON       reduce using rule 138 (condicionR -> ID opR FLOAT .)
    LINEBREAK       reduce using rule 138 (condicionR -> ID opR FLOAT .)
    $end            reduce using rule 138 (condicionR -> ID opR FLOAT .)
    RCURL           reduce using rule 138 (condicionR -> ID opR FLOAT .)
    RPAREN          reduce using rule 138 (condicionR -> ID opR FLOAT .)


state 138

    (139) condicionR -> ID opR LONG .

    SEMICOLON       reduce using rule 139 (condicionR -> ID opR LONG .)
    LINEBREAK       reduce using rule 139 (condicionR -> ID opR LONG .)
    $end            reduce using rule 139 (condicionR -> ID opR LONG .)
    RCURL           reduce using rule 139 (condicionR -> ID opR LONG .)
    RPAREN          reduce using rule 139 (condicionR -> ID opR LONG .)


state 139

    (140) condicionR -> ID opR STRING_1 .

    SEMICOLON       reduce using rule 140 (condicionR -> ID opR STRING_1 .)
    LINEBREAK       reduce using rule 140 (condicionR -> ID opR STRING_1 .)
    $end            reduce using rule 140 (condicionR -> ID opR STRING_1 .)
    RCURL           reduce using rule 140 (condicionR -> ID opR STRING_1 .)
    RPAREN          reduce using rule 140 (condicionR -> ID opR STRING_1 .)


state 140

    (141) condicionR -> ID opR CHAR .

    SEMICOLON       reduce using rule 141 (condicionR -> ID opR CHAR .)
    LINEBREAK       reduce using rule 141 (condicionR -> ID opR CHAR .)
    $end            reduce using rule 141 (condicionR -> ID opR CHAR .)
    RCURL           reduce using rule 141 (condicionR -> ID opR CHAR .)
    RPAREN          reduce using rule 141 (condicionR -> ID opR CHAR .)


state 141

    (158) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 158 (stack_actuar -> ID DOT stack_funciones .)
    LINEBREAK       reduce using rule 158 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 158 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 158 (stack_actuar -> ID DOT stack_funciones .)


state 142

    (178) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 178 (lsimplem -> ID DOT Lmetod .)
    LINEBREAK       reduce using rule 178 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 178 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 178 (lsimplem -> ID DOT Lmetod .)


state 143

    (179) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 179 (lcomp -> ID DOT Cmetod .)
    LINEBREAK       reduce using rule 179 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 179 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 179 (lcomp -> ID DOT Cmetod .)


state 144

    (33) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 221


state 145

    (34) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (167) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 222


state 146

    (36) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 223


state 147

    (35) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 224


state 148

    (159) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 159 (stack_funciones -> stack_isEmpty .)
    LINEBREAK       reduce using rule 159 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 159 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 159 (stack_funciones -> stack_isEmpty .)


state 149

    (160) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 160 (stack_funciones -> stack_push .)
    LINEBREAK       reduce using rule 160 (stack_funciones -> stack_push .)
    $end            reduce using rule 160 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 160 (stack_funciones -> stack_push .)


state 150

    (161) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 161 (stack_funciones -> stack_pop .)
    LINEBREAK       reduce using rule 161 (stack_funciones -> stack_pop .)
    $end            reduce using rule 161 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 161 (stack_funciones -> stack_pop .)


state 151

    (162) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 162 (stack_funciones -> stack_peek .)
    LINEBREAK       reduce using rule 162 (stack_funciones -> stack_peek .)
    $end            reduce using rule 162 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 162 (stack_funciones -> stack_peek .)


state 152

    (163) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 163 (stack_funciones -> stack_size .)
    LINEBREAK       reduce using rule 163 (stack_funciones -> stack_size .)
    $end            reduce using rule 163 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 163 (stack_funciones -> stack_size .)


state 153

    (169) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 225


state 154

    (170) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 226


state 155

    (171) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 227


state 156

    (172) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 228


state 157

    (173) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 229


state 158

    (174) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 230


state 159

    (164) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 231


state 160

    (166) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 232


state 161

    (165) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 233


state 162

    (168) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 234


state 163

    (42) for -> FOR LPAREN ID . IN iterable RPAREN LCURL lineorBreak RCURL

    IN              shift and go to state 235


state 164

    (43) for -> FOR LPAREN error . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 236


state 165

    (110) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL
    (111) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL else

    RPAREN          shift and go to state 237


state 166

    (116) condicionL -> BOOLEAN . opL BOOLEAN
    (119) condicionL -> BOOLEAN . opL ID
    (144) opL -> . CONJ
    (145) opL -> . DISJ

    CONJ            shift and go to state 80
    DISJ            shift and go to state 81

    opL                            shift and go to state 95

state 167

    (117) condicionL -> ID . opL ID
    (118) condicionL -> ID . opL BOOLEAN
    (136) condicionR -> ID . opR ID
    (137) condicionR -> ID . opR INT
    (138) condicionR -> ID . opR FLOAT
    (139) condicionR -> ID . opR LONG
    (140) condicionR -> ID . opR STRING_1
    (141) condicionR -> ID . opR CHAR
    (144) opL -> . CONJ
    (145) opL -> . DISJ
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    CONJ            shift and go to state 80
    DISJ            shift and go to state 81
    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opL                            shift and go to state 77
    opR                            shift and go to state 78

state 168

    (120) condicionR -> INT . opR INT
    (121) condicionR -> INT . opR FLOAT
    (122) condicionR -> INT . opR LONG
    (123) condicionR -> INT . opR ID
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 94

state 169

    (124) condicionR -> FLOAT . opR FLOAT
    (125) condicionR -> FLOAT . opR INT
    (126) condicionR -> FLOAT . opR LONG
    (127) condicionR -> FLOAT . opR ID
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 96

state 170

    (128) condicionR -> LONG . opR LONG
    (129) condicionR -> LONG . opR INT
    (130) condicionR -> LONG . opR FLOAT
    (131) condicionR -> LONG . opR ID
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 97

state 171

    (132) condicionR -> STRING_1 . opR STRING_1
    (133) condicionR -> STRING_1 . opR ID
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 98

state 172

    (134) condicionR -> CHAR . opR CHAR
    (135) condicionR -> CHAR . opR ID
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 99

state 173

    (175) while -> WHILE LPAREN ID . opR INT RPAREN LCURL lineorBreak RCURL
    (146) opR -> . LANGLE
    (147) opR -> . RANGLE
    (148) opR -> . LE
    (149) opR -> . GE
    (150) opR -> . EXCL_EQ
    (151) opR -> . EXCL_EQEQ
    (152) opR -> . AS_SAFE
    (153) opR -> . EQEQ
    (154) opR -> . EQEQEQ

    LANGLE          shift and go to state 82
    RANGLE          shift and go to state 83
    LE              shift and go to state 84
    GE              shift and go to state 85
    EXCL_EQ         shift and go to state 86
    EXCL_EQEQ       shift and go to state 87
    AS_SAFE         shift and go to state 88
    EQEQ            shift and go to state 89
    EQEQEQ          shift and go to state 90

    opR                            shift and go to state 238

state 174

    (176) while -> WHILE LPAREN error . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 239


state 175

    (120) condicionR -> INT opR INT .

    SEMICOLON       reduce using rule 120 (condicionR -> INT opR INT .)
    LINEBREAK       reduce using rule 120 (condicionR -> INT opR INT .)
    $end            reduce using rule 120 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 120 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 120 (condicionR -> INT opR INT .)


state 176

    (121) condicionR -> INT opR FLOAT .

    SEMICOLON       reduce using rule 121 (condicionR -> INT opR FLOAT .)
    LINEBREAK       reduce using rule 121 (condicionR -> INT opR FLOAT .)
    $end            reduce using rule 121 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 121 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 121 (condicionR -> INT opR FLOAT .)


state 177

    (122) condicionR -> INT opR LONG .

    SEMICOLON       reduce using rule 122 (condicionR -> INT opR LONG .)
    LINEBREAK       reduce using rule 122 (condicionR -> INT opR LONG .)
    $end            reduce using rule 122 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 122 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 122 (condicionR -> INT opR LONG .)


state 178

    (123) condicionR -> INT opR ID .

    SEMICOLON       reduce using rule 123 (condicionR -> INT opR ID .)
    LINEBREAK       reduce using rule 123 (condicionR -> INT opR ID .)
    $end            reduce using rule 123 (condicionR -> INT opR ID .)
    RCURL           reduce using rule 123 (condicionR -> INT opR ID .)
    RPAREN          reduce using rule 123 (condicionR -> INT opR ID .)


state 179

    (116) condicionL -> BOOLEAN opL BOOLEAN .

    SEMICOLON       reduce using rule 116 (condicionL -> BOOLEAN opL BOOLEAN .)
    LINEBREAK       reduce using rule 116 (condicionL -> BOOLEAN opL BOOLEAN .)
    $end            reduce using rule 116 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 116 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 116 (condicionL -> BOOLEAN opL BOOLEAN .)


state 180

    (119) condicionL -> BOOLEAN opL ID .

    SEMICOLON       reduce using rule 119 (condicionL -> BOOLEAN opL ID .)
    LINEBREAK       reduce using rule 119 (condicionL -> BOOLEAN opL ID .)
    $end            reduce using rule 119 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 119 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 119 (condicionL -> BOOLEAN opL ID .)


state 181

    (124) condicionR -> FLOAT opR FLOAT .

    SEMICOLON       reduce using rule 124 (condicionR -> FLOAT opR FLOAT .)
    LINEBREAK       reduce using rule 124 (condicionR -> FLOAT opR FLOAT .)
    $end            reduce using rule 124 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 124 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 124 (condicionR -> FLOAT opR FLOAT .)


state 182

    (125) condicionR -> FLOAT opR INT .

    SEMICOLON       reduce using rule 125 (condicionR -> FLOAT opR INT .)
    LINEBREAK       reduce using rule 125 (condicionR -> FLOAT opR INT .)
    $end            reduce using rule 125 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 125 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 125 (condicionR -> FLOAT opR INT .)


state 183

    (126) condicionR -> FLOAT opR LONG .

    SEMICOLON       reduce using rule 126 (condicionR -> FLOAT opR LONG .)
    LINEBREAK       reduce using rule 126 (condicionR -> FLOAT opR LONG .)
    $end            reduce using rule 126 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 126 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 126 (condicionR -> FLOAT opR LONG .)


state 184

    (127) condicionR -> FLOAT opR ID .

    SEMICOLON       reduce using rule 127 (condicionR -> FLOAT opR ID .)
    LINEBREAK       reduce using rule 127 (condicionR -> FLOAT opR ID .)
    $end            reduce using rule 127 (condicionR -> FLOAT opR ID .)
    RCURL           reduce using rule 127 (condicionR -> FLOAT opR ID .)
    RPAREN          reduce using rule 127 (condicionR -> FLOAT opR ID .)


state 185

    (128) condicionR -> LONG opR LONG .

    SEMICOLON       reduce using rule 128 (condicionR -> LONG opR LONG .)
    LINEBREAK       reduce using rule 128 (condicionR -> LONG opR LONG .)
    $end            reduce using rule 128 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 128 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 128 (condicionR -> LONG opR LONG .)


state 186

    (129) condicionR -> LONG opR INT .

    SEMICOLON       reduce using rule 129 (condicionR -> LONG opR INT .)
    LINEBREAK       reduce using rule 129 (condicionR -> LONG opR INT .)
    $end            reduce using rule 129 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 129 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 129 (condicionR -> LONG opR INT .)


state 187

    (130) condicionR -> LONG opR FLOAT .

    SEMICOLON       reduce using rule 130 (condicionR -> LONG opR FLOAT .)
    LINEBREAK       reduce using rule 130 (condicionR -> LONG opR FLOAT .)
    $end            reduce using rule 130 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 130 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 130 (condicionR -> LONG opR FLOAT .)


state 188

    (131) condicionR -> LONG opR ID .

    SEMICOLON       reduce using rule 131 (condicionR -> LONG opR ID .)
    LINEBREAK       reduce using rule 131 (condicionR -> LONG opR ID .)
    $end            reduce using rule 131 (condicionR -> LONG opR ID .)
    RCURL           reduce using rule 131 (condicionR -> LONG opR ID .)
    RPAREN          reduce using rule 131 (condicionR -> LONG opR ID .)


state 189

    (132) condicionR -> STRING_1 opR STRING_1 .

    SEMICOLON       reduce using rule 132 (condicionR -> STRING_1 opR STRING_1 .)
    LINEBREAK       reduce using rule 132 (condicionR -> STRING_1 opR STRING_1 .)
    $end            reduce using rule 132 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 132 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 132 (condicionR -> STRING_1 opR STRING_1 .)


state 190

    (133) condicionR -> STRING_1 opR ID .

    SEMICOLON       reduce using rule 133 (condicionR -> STRING_1 opR ID .)
    LINEBREAK       reduce using rule 133 (condicionR -> STRING_1 opR ID .)
    $end            reduce using rule 133 (condicionR -> STRING_1 opR ID .)
    RCURL           reduce using rule 133 (condicionR -> STRING_1 opR ID .)
    RPAREN          reduce using rule 133 (condicionR -> STRING_1 opR ID .)


state 191

    (134) condicionR -> CHAR opR CHAR .

    SEMICOLON       reduce using rule 134 (condicionR -> CHAR opR CHAR .)
    LINEBREAK       reduce using rule 134 (condicionR -> CHAR opR CHAR .)
    $end            reduce using rule 134 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 134 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 134 (condicionR -> CHAR opR CHAR .)


state 192

    (135) condicionR -> CHAR opR ID .

    SEMICOLON       reduce using rule 135 (condicionR -> CHAR opR ID .)
    LINEBREAK       reduce using rule 135 (condicionR -> CHAR opR ID .)
    $end            reduce using rule 135 (condicionR -> CHAR opR ID .)
    RCURL           reduce using rule 135 (condicionR -> CHAR opR ID .)
    RPAREN          reduce using rule 135 (condicionR -> CHAR opR ID .)


state 193

    (157) instance_linkedlist -> LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 240


state 194

    (71) tipoDato -> TINT .

    RANGLE          reduce using rule 71 (tipoDato -> TINT .)
    COMMA           reduce using rule 71 (tipoDato -> TINT .)
    RPAREN          reduce using rule 71 (tipoDato -> TINT .)


state 195

    (72) tipoDato -> TLONG .

    RANGLE          reduce using rule 72 (tipoDato -> TLONG .)
    COMMA           reduce using rule 72 (tipoDato -> TLONG .)
    RPAREN          reduce using rule 72 (tipoDato -> TLONG .)


state 196

    (73) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 73 (tipoDato -> TFLOAT .)
    COMMA           reduce using rule 73 (tipoDato -> TFLOAT .)
    RPAREN          reduce using rule 73 (tipoDato -> TFLOAT .)


state 197

    (74) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 74 (tipoDato -> TDOUBLE .)
    COMMA           reduce using rule 74 (tipoDato -> TDOUBLE .)
    RPAREN          reduce using rule 74 (tipoDato -> TDOUBLE .)


state 198

    (75) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 75 (tipoDato -> TBOOLEAN .)
    COMMA           reduce using rule 75 (tipoDato -> TBOOLEAN .)
    RPAREN          reduce using rule 75 (tipoDato -> TBOOLEAN .)


state 199

    (76) tipoDato -> TCHAR .

    RANGLE          reduce using rule 76 (tipoDato -> TCHAR .)
    COMMA           reduce using rule 76 (tipoDato -> TCHAR .)
    RPAREN          reduce using rule 76 (tipoDato -> TCHAR .)


state 200

    (77) tipoDato -> TSTRING .

    RANGLE          reduce using rule 77 (tipoDato -> TSTRING .)
    COMMA           reduce using rule 77 (tipoDato -> TSTRING .)
    RPAREN          reduce using rule 77 (tipoDato -> TSTRING .)


state 201

    (156) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 241


state 202

    (7) line -> blocks SEMICOLON LINEBREAK line .
    (8) line -> blocks SEMICOLON LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    RCURL           reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    LINEBREAK       shift and go to state 242

  ! LINEBREAK       [ reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .) ]


state 203

    (5) line -> blocks LINEBREAK line LINEBREAK .

    $end            reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)


state 204

    (37) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)


state 205

    (39) impresion -> PRINT LPAREN error RPAREN .

    SEMICOLON       reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)
    LINEBREAK       reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)
    $end            reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)
    RCURL           reduce using rule 39 (impresion -> PRINT LPAREN error RPAREN .)


state 206

    (38) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 207

    (40) impresion -> PRINTLN LPAREN error RPAREN .

    SEMICOLON       reduce using rule 40 (impresion -> PRINTLN LPAREN error RPAREN .)
    LINEBREAK       reduce using rule 40 (impresion -> PRINTLN LPAREN error RPAREN .)
    $end            reduce using rule 40 (impresion -> PRINTLN LPAREN error RPAREN .)
    RCURL           reduce using rule 40 (impresion -> PRINTLN LPAREN error RPAREN .)


state 208

    (41) queue -> keywordVariables ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 243


state 209

    (177) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 244


state 210

    (155) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 245


state 211

    (97) funcion -> FUN ID LPAREN ID . RPAREN LCURL lineorBreak RCURL
    (98) funcion -> FUN ID LPAREN ID . RPAREN LCURL RCURL
    (104) parametro -> ID . DOTS tipoDato

    RPAREN          shift and go to state 246
    DOTS            shift and go to state 247


state 212

    (96) funcion -> FUN ID LPAREN RPAREN . LCURL lineorBreak RCURL
    (99) funcion -> FUN ID LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 248


state 213

    (100) funcion -> FUN ID LPAREN parametros . RPAREN LCURL lineorBreak RCURL
    (101) funcion -> FUN ID LPAREN parametros . RPAREN LCURL RCURL

    RPAREN          shift and go to state 249


state 214

    (102) parametros -> parametro .
    (103) parametros -> parametro . masParametros
    (105) masParametros -> . COMMA parametro
    (106) masParametros -> . COMMA parametro masParametros

    RPAREN          reduce using rule 102 (parametros -> parametro .)
    COMMA           shift and go to state 251

    masParametros                  shift and go to state 250

state 215

    (59) tipoEntero -> TINT EQUAL . INT
    (60) tipoEntero -> TINT EQUAL . error

    INT             shift and go to state 252
    error           shift and go to state 253


state 216

    (61) tipoLong -> TLONG EQUAL . LONG
    (62) tipoLong -> TLONG EQUAL . error

    LONG            shift and go to state 254
    error           shift and go to state 255


state 217

    (63) tipoFloat -> TFLOAT EQUAL . FLOAT
    (64) tipoFloat -> TFLOAT EQUAL . error

    FLOAT           shift and go to state 256
    error           shift and go to state 257


state 218

    (65) tipoBoolean -> TBOOLEAN EQUAL . BOOLEAN
    (66) tipoBoolean -> TBOOLEAN EQUAL . error

    BOOLEAN         shift and go to state 258
    error           shift and go to state 259


state 219

    (67) tipoChar -> TCHAR EQUAL . CHAR
    (68) tipoChar -> TCHAR EQUAL . error

    CHAR            shift and go to state 260
    error           shift and go to state 261


state 220

    (69) tipoString -> TSTRING EQUAL . STRING_1
    (70) tipoString -> TSTRING EQUAL . error

    STRING_1        shift and go to state 262
    error           shift and go to state 263


state 221

    (33) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 264

state 222

    (34) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (167) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 265


state 223

    (36) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 266


state 224

    (35) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 267


state 225

    (169) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 268


state 226

    (170) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 269


state 227

    (171) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 270


state 228

    (172) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 271


state 229

    (173) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 272


state 230

    (174) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 273


state 231

    (164) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 274


state 232

    (166) stack_push -> PUSH LPAREN . factor RPAREN
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 275

state 233

    (165) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 276


state 234

    (168) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 277


state 235

    (42) for -> FOR LPAREN ID IN . iterable RPAREN LCURL lineorBreak RCURL
    (44) iterable -> . ID
    (45) iterable -> . INT THREEDOTS INT
    (46) iterable -> . ID DOT INDICES

    ID              shift and go to state 278
    INT             shift and go to state 280

    iterable                       shift and go to state 279

state 236

    (43) for -> FOR LPAREN error RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 281


state 237

    (110) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL
    (111) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL else

    LCURL           shift and go to state 282


state 238

    (175) while -> WHILE LPAREN ID opR . INT RPAREN LCURL lineorBreak RCURL

    INT             shift and go to state 283


state 239

    (176) while -> WHILE LPAREN error RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 284


state 240

    (157) instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 285


state 241

    (156) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 156 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LINEBREAK       reduce using rule 156 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 156 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 156 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 156 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 242

    (8) line -> blocks SEMICOLON LINEBREAK line LINEBREAK .

    $end            reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)


state 243

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (71) tipoDato -> . TINT
    (72) tipoDato -> . TLONG
    (73) tipoDato -> . TFLOAT
    (74) tipoDato -> . TDOUBLE
    (75) tipoDato -> . TBOOLEAN
    (76) tipoDato -> . TCHAR
    (77) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 286

state 244

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 287


state 245

    (155) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 47

    instance_linkedlist            shift and go to state 288

state 246

    (97) funcion -> FUN ID LPAREN ID RPAREN . LCURL lineorBreak RCURL
    (98) funcion -> FUN ID LPAREN ID RPAREN . LCURL RCURL

    LCURL           shift and go to state 289


state 247

    (104) parametro -> ID DOTS . tipoDato
    (71) tipoDato -> . TINT
    (72) tipoDato -> . TLONG
    (73) tipoDato -> . TFLOAT
    (74) tipoDato -> . TDOUBLE
    (75) tipoDato -> . TBOOLEAN
    (76) tipoDato -> . TCHAR
    (77) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 290

state 248

    (96) funcion -> FUN ID LPAREN RPAREN LCURL . lineorBreak RCURL
    (99) funcion -> FUN ID LPAREN RPAREN LCURL . RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 292
    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 291
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 249

    (100) funcion -> FUN ID LPAREN parametros RPAREN . LCURL lineorBreak RCURL
    (101) funcion -> FUN ID LPAREN parametros RPAREN . LCURL RCURL

    LCURL           shift and go to state 295


state 250

    (103) parametros -> parametro masParametros .

    RPAREN          reduce using rule 103 (parametros -> parametro masParametros .)


state 251

    (105) masParametros -> COMMA . parametro
    (106) masParametros -> COMMA . parametro masParametros
    (104) parametro -> . ID DOTS tipoDato

    ID              shift and go to state 297

    parametro                      shift and go to state 296

state 252

    (59) tipoEntero -> TINT EQUAL INT .

    SEMICOLON       reduce using rule 59 (tipoEntero -> TINT EQUAL INT .)
    LINEBREAK       reduce using rule 59 (tipoEntero -> TINT EQUAL INT .)
    $end            reduce using rule 59 (tipoEntero -> TINT EQUAL INT .)
    RCURL           reduce using rule 59 (tipoEntero -> TINT EQUAL INT .)


state 253

    (60) tipoEntero -> TINT EQUAL error .

    SEMICOLON       reduce using rule 60 (tipoEntero -> TINT EQUAL error .)
    LINEBREAK       reduce using rule 60 (tipoEntero -> TINT EQUAL error .)
    $end            reduce using rule 60 (tipoEntero -> TINT EQUAL error .)
    RCURL           reduce using rule 60 (tipoEntero -> TINT EQUAL error .)


state 254

    (61) tipoLong -> TLONG EQUAL LONG .

    SEMICOLON       reduce using rule 61 (tipoLong -> TLONG EQUAL LONG .)
    LINEBREAK       reduce using rule 61 (tipoLong -> TLONG EQUAL LONG .)
    $end            reduce using rule 61 (tipoLong -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 61 (tipoLong -> TLONG EQUAL LONG .)


state 255

    (62) tipoLong -> TLONG EQUAL error .

    SEMICOLON       reduce using rule 62 (tipoLong -> TLONG EQUAL error .)
    LINEBREAK       reduce using rule 62 (tipoLong -> TLONG EQUAL error .)
    $end            reduce using rule 62 (tipoLong -> TLONG EQUAL error .)
    RCURL           reduce using rule 62 (tipoLong -> TLONG EQUAL error .)


state 256

    (63) tipoFloat -> TFLOAT EQUAL FLOAT .

    SEMICOLON       reduce using rule 63 (tipoFloat -> TFLOAT EQUAL FLOAT .)
    LINEBREAK       reduce using rule 63 (tipoFloat -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 63 (tipoFloat -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 63 (tipoFloat -> TFLOAT EQUAL FLOAT .)


state 257

    (64) tipoFloat -> TFLOAT EQUAL error .

    SEMICOLON       reduce using rule 64 (tipoFloat -> TFLOAT EQUAL error .)
    LINEBREAK       reduce using rule 64 (tipoFloat -> TFLOAT EQUAL error .)
    $end            reduce using rule 64 (tipoFloat -> TFLOAT EQUAL error .)
    RCURL           reduce using rule 64 (tipoFloat -> TFLOAT EQUAL error .)


state 258

    (65) tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .

    SEMICOLON       reduce using rule 65 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)
    LINEBREAK       reduce using rule 65 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 65 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 65 (tipoBoolean -> TBOOLEAN EQUAL BOOLEAN .)


state 259

    (66) tipoBoolean -> TBOOLEAN EQUAL error .

    SEMICOLON       reduce using rule 66 (tipoBoolean -> TBOOLEAN EQUAL error .)
    LINEBREAK       reduce using rule 66 (tipoBoolean -> TBOOLEAN EQUAL error .)
    $end            reduce using rule 66 (tipoBoolean -> TBOOLEAN EQUAL error .)
    RCURL           reduce using rule 66 (tipoBoolean -> TBOOLEAN EQUAL error .)


state 260

    (67) tipoChar -> TCHAR EQUAL CHAR .

    SEMICOLON       reduce using rule 67 (tipoChar -> TCHAR EQUAL CHAR .)
    LINEBREAK       reduce using rule 67 (tipoChar -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 67 (tipoChar -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 67 (tipoChar -> TCHAR EQUAL CHAR .)


state 261

    (68) tipoChar -> TCHAR EQUAL error .

    SEMICOLON       reduce using rule 68 (tipoChar -> TCHAR EQUAL error .)
    LINEBREAK       reduce using rule 68 (tipoChar -> TCHAR EQUAL error .)
    $end            reduce using rule 68 (tipoChar -> TCHAR EQUAL error .)
    RCURL           reduce using rule 68 (tipoChar -> TCHAR EQUAL error .)


state 262

    (69) tipoString -> TSTRING EQUAL STRING_1 .

    SEMICOLON       reduce using rule 69 (tipoString -> TSTRING EQUAL STRING_1 .)
    LINEBREAK       reduce using rule 69 (tipoString -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 69 (tipoString -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 69 (tipoString -> TSTRING EQUAL STRING_1 .)


state 263

    (70) tipoString -> TSTRING EQUAL error .

    SEMICOLON       reduce using rule 70 (tipoString -> TSTRING EQUAL error .)
    LINEBREAK       reduce using rule 70 (tipoString -> TSTRING EQUAL error .)
    $end            reduce using rule 70 (tipoString -> TSTRING EQUAL error .)
    RCURL           reduce using rule 70 (tipoString -> TSTRING EQUAL error .)


state 264

    (33) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 298


state 265

    (34) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (167) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LINEBREAK resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINEBREAK       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 167 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LINEBREAK       [ reduce using rule 167 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 167 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 167 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 266

    (36) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 267

    (35) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 268

    (169) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 169 (Lmetod -> FIRST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 169 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 169 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 169 (Lmetod -> FIRST LPAREN RPAREN .)


state 269

    (170) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 170 (Lmetod -> LAST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 170 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 170 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 170 (Lmetod -> LAST LPAREN RPAREN .)


state 270

    (171) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 171 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 171 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 171 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 171 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 271

    (172) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 299


state 272

    (173) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 300


state 273

    (174) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 301


state 274

    (164) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 164 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LINEBREAK       reduce using rule 164 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 164 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 164 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 275

    (166) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 302


state 276

    (165) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 165 (stack_pop -> POP LPAREN RPAREN .)
    LINEBREAK       reduce using rule 165 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 165 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 165 (stack_pop -> POP LPAREN RPAREN .)


state 277

    (168) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 168 (stack_size -> SIZE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 168 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 168 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 168 (stack_size -> SIZE LPAREN RPAREN .)


state 278

    (44) iterable -> ID .
    (46) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 44 (iterable -> ID .)
    DOT             shift and go to state 303


state 279

    (42) for -> FOR LPAREN ID IN iterable . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 304


state 280

    (45) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 305


state 281

    (43) for -> FOR LPAREN error RPAREN LCURL . lineorBreak RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 306
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 282

    (110) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL
    (111) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL else
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    condicion                      shift and go to state 8
    lineorBreak                    shift and go to state 307
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 283

    (175) while -> WHILE LPAREN ID opR INT . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 308


state 284

    (176) while -> WHILE LPAREN error RPAREN LCURL . lineorBreak RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 309
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 285

    (157) instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 310


state 286

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 311


state 287

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 312


state 288

    (155) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    SEMICOLON       reduce using rule 155 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LINEBREAK       reduce using rule 155 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 155 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 155 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 289

    (97) funcion -> FUN ID LPAREN ID RPAREN LCURL . lineorBreak RCURL
    (98) funcion -> FUN ID LPAREN ID RPAREN LCURL . RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 314
    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 313
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 290

    (104) parametro -> ID DOTS tipoDato .

    COMMA           reduce using rule 104 (parametro -> ID DOTS tipoDato .)
    RPAREN          reduce using rule 104 (parametro -> ID DOTS tipoDato .)


state 291

    (96) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 315


state 292

    (99) funcion -> FUN ID LPAREN RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 99 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 99 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    $end            reduce using rule 99 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    RCURL           reduce using rule 99 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)


state 293

    (107) lineorBreak -> line .

    RCURL           reduce using rule 107 (lineorBreak -> line .)


state 294

    (108) lineorBreak -> LINEBREAK . line LINEBREAK
    (109) lineorBreak -> LINEBREAK . line
    (9) line -> LINEBREAK .
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 316
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 295

    (100) funcion -> FUN ID LPAREN parametros RPAREN LCURL . lineorBreak RCURL
    (101) funcion -> FUN ID LPAREN parametros RPAREN LCURL . RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 318
    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 317
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 296

    (105) masParametros -> COMMA parametro .
    (106) masParametros -> COMMA parametro . masParametros
    (105) masParametros -> . COMMA parametro
    (106) masParametros -> . COMMA parametro masParametros

    RPAREN          reduce using rule 105 (masParametros -> COMMA parametro .)
    COMMA           shift and go to state 251

    masParametros                  shift and go to state 319

state 297

    (104) parametro -> ID . DOTS tipoDato

    DOTS            shift and go to state 247


state 298

    (33) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 299

    (172) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 172 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 172 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 172 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 172 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 300

    (173) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 173 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 173 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 173 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 173 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 301

    (174) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 174 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LINEBREAK       reduce using rule 174 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 174 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 174 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 302

    (166) stack_push -> PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 166 (stack_push -> PUSH LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 166 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 166 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 166 (stack_push -> PUSH LPAREN factor RPAREN .)


state 303

    (46) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 320


state 304

    (42) for -> FOR LPAREN ID IN iterable RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 321


state 305

    (45) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 322


state 306

    (43) for -> FOR LPAREN error RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 323


state 307

    (110) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL
    (111) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL else

    RCURL           shift and go to state 324


state 308

    (175) while -> WHILE LPAREN ID opR INT RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 325


state 309

    (176) while -> WHILE LPAREN error RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 326


state 310

    (157) instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 157 (instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 157 (instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 157 (instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 157 (instance_linkedlist -> LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)


state 311

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 327


state 312

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 328


state 313

    (97) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 329


state 314

    (98) funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 98 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 98 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    $end            reduce using rule 98 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    RCURL           reduce using rule 98 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)


state 315

    (96) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 96 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 96 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 96 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 96 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)


state 316

    (108) lineorBreak -> LINEBREAK line . LINEBREAK
    (109) lineorBreak -> LINEBREAK line .

    LINEBREAK       shift and go to state 330
    RCURL           reduce using rule 109 (lineorBreak -> LINEBREAK line .)


state 317

    (100) funcion -> FUN ID LPAREN parametros RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 331


state 318

    (101) funcion -> FUN ID LPAREN parametros RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 101 (funcion -> FUN ID LPAREN parametros RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 101 (funcion -> FUN ID LPAREN parametros RPAREN LCURL RCURL .)
    $end            reduce using rule 101 (funcion -> FUN ID LPAREN parametros RPAREN LCURL RCURL .)
    RCURL           reduce using rule 101 (funcion -> FUN ID LPAREN parametros RPAREN LCURL RCURL .)


state 319

    (106) masParametros -> COMMA parametro masParametros .

    RPAREN          reduce using rule 106 (masParametros -> COMMA parametro masParametros .)


state 320

    (46) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 46 (iterable -> ID DOT INDICES .)


state 321

    (42) for -> FOR LPAREN ID IN iterable RPAREN LCURL . lineorBreak RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 332
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 322

    (45) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 45 (iterable -> INT THREEDOTS INT .)


state 323

    (43) for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 43 (for -> FOR LPAREN error RPAREN LCURL lineorBreak RCURL .)


state 324

    (110) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .
    (111) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL . else
    (112) else -> . ELSE LCURL lineorBreak RCURL

    SEMICOLON       reduce using rule 110 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 110 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 110 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 110 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    ELSE            shift and go to state 334

    else                           shift and go to state 333

state 325

    (175) while -> WHILE LPAREN ID opR INT RPAREN LCURL . lineorBreak RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 335
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 326

    (176) while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 176 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 176 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 176 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 176 (while -> WHILE LPAREN error RPAREN LCURL lineorBreak RCURL .)


state 327

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 336


state 328

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 337


state 329

    (97) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 97 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 97 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 97 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 97 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)


state 330

    (108) lineorBreak -> LINEBREAK line LINEBREAK .

    RCURL           reduce using rule 108 (lineorBreak -> LINEBREAK line LINEBREAK .)


state 331

    (100) funcion -> FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 100 (funcion -> FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 100 (funcion -> FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 100 (funcion -> FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 100 (funcion -> FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL .)


state 332

    (42) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 338


state 333

    (111) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .

    SEMICOLON       reduce using rule 111 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    LINEBREAK       reduce using rule 111 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    $end            reduce using rule 111 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    RCURL           reduce using rule 111 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)


state 334

    (112) else -> ELSE . LCURL lineorBreak RCURL

    LCURL           shift and go to state 339


state 335

    (175) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 340


state 336

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 341


state 337

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 342


state 338

    (42) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 42 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)


state 339

    (112) else -> ELSE LCURL . lineorBreak RCURL
    (107) lineorBreak -> . line
    (108) lineorBreak -> . LINEBREAK line LINEBREAK
    (109) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . asignacion
    (13) blocks -> . estructurasControl
    (14) blocks -> . condicion
    (15) blocks -> . funcion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (39) impresion -> . PRINT LPAREN error RPAREN
    (40) impresion -> . PRINTLN LPAREN error RPAREN
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression TIMES term
    (82) expression -> . expression DIVIDE term
    (83) expression -> . expression MOD term
    (84) expression -> . expression INCREMENTONE
    (85) expression -> . expression DECREMENTONE
    (86) expression -> . term
    (47) asignacion -> . keywordVariables asignacionSimple
    (48) asignacion -> . asignacionSimple
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (113) condicion -> . condicionL
    (114) condicion -> . condicionR
    (115) condicion -> . condicionN
    (96) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (97) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (98) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (99) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (100) funcion -> . FUN ID LPAREN parametros RPAREN LCURL lineorBreak RCURL
    (101) funcion -> . FUN ID LPAREN parametros RPAREN LCURL RCURL
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (87) term -> . factor
    (88) term -> . LPAREN expression RPAREN
    (49) keywordVariables -> . VAR
    (50) keywordVariables -> . VAL
    (51) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (52) asignacionSimple -> . ID EQUAL valor
    (42) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (43) for -> . FOR LPAREN error RPAREN LCURL lineorBreak RCURL
    (110) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (111) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (175) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (176) while -> . WHILE LPAREN error RPAREN LCURL lineorBreak RCURL
    (116) condicionL -> . BOOLEAN opL BOOLEAN
    (117) condicionL -> . ID opL ID
    (118) condicionL -> . ID opL BOOLEAN
    (119) condicionL -> . BOOLEAN opL ID
    (120) condicionR -> . INT opR INT
    (121) condicionR -> . INT opR FLOAT
    (122) condicionR -> . INT opR LONG
    (123) condicionR -> . INT opR ID
    (124) condicionR -> . FLOAT opR FLOAT
    (125) condicionR -> . FLOAT opR INT
    (126) condicionR -> . FLOAT opR LONG
    (127) condicionR -> . FLOAT opR ID
    (128) condicionR -> . LONG opR LONG
    (129) condicionR -> . LONG opR INT
    (130) condicionR -> . LONG opR FLOAT
    (131) condicionR -> . LONG opR ID
    (132) condicionR -> . STRING_1 opR STRING_1
    (133) condicionR -> . STRING_1 opR ID
    (134) condicionR -> . CHAR opR CHAR
    (135) condicionR -> . CHAR opR ID
    (136) condicionR -> . ID opR ID
    (137) condicionR -> . ID opR INT
    (138) condicionR -> . ID opR FLOAT
    (139) condicionR -> . ID opR LONG
    (140) condicionR -> . ID opR STRING_1
    (141) condicionR -> . ID opR CHAR
    (142) condicionN -> . EXCL_WS BOOLEAN
    (143) condicionN -> . EXCL_WS ID
    (41) queue -> . keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (155) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (158) stack_actuar -> . ID DOT stack_funciones
    (157) instance_linkedlist -> . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (156) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (177) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (178) lsimplem -> . ID DOT Lmetod
    (179) lcomp -> . ID DOT Cmetod
    (89) factor -> . INT
    (90) factor -> . FLOAT
    (91) factor -> . LONG
    (92) factor -> . CHAR
    (93) factor -> . BOOLEAN
    (94) factor -> . ID
    (95) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 294
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 23
    LPAREN          shift and go to state 12
    VAR             shift and go to state 35
    VAL             shift and go to state 36
    ID              shift and go to state 24
    FOR             shift and go to state 37
    IF              shift and go to state 38
    WHILE           shift and go to state 39
    BOOLEAN         shift and go to state 41
    INT             shift and go to state 40
    FLOAT           shift and go to state 42
    LONG            shift and go to state 43
    STRING_1        shift and go to state 44
    CHAR            shift and go to state 45
    EXCL_WS         shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 343
    line                           shift and go to state 293
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    asignacion                     shift and go to state 6
    estructurasControl             shift and go to state 7
    condicion                      shift and go to state 8
    funcion                        shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    keywordVariables               shift and go to state 15
    asignacionSimple               shift and go to state 16
    for                            shift and go to state 17
    if                             shift and go to state 18
    while                          shift and go to state 19
    condicionL                     shift and go to state 20
    condicionR                     shift and go to state 21
    condicionN                     shift and go to state 22
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 340

    (175) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 175 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 175 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 175 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 175 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)


state 341

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (71) tipoDato -> . TINT
    (72) tipoDato -> . TLONG
    (73) tipoDato -> . TFLOAT
    (74) tipoDato -> . TDOUBLE
    (75) tipoDato -> . TBOOLEAN
    (76) tipoDato -> . TCHAR
    (77) tipoDato -> . TSTRING

    TINT            shift and go to state 194
    TLONG           shift and go to state 195
    TFLOAT          shift and go to state 196
    TDOUBLE         shift and go to state 197
    TBOOLEAN        shift and go to state 198
    TCHAR           shift and go to state 199
    TSTRING         shift and go to state 200

    tipoDato                       shift and go to state 344

state 342

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 345


state 343

    (112) else -> ELSE LCURL lineorBreak . RCURL

    RCURL           shift and go to state 346


state 344

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 347


state 345

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 348


state 346

    (112) else -> ELSE LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 112 (else -> ELSE LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 112 (else -> ELSE LCURL lineorBreak RCURL .)
    $end            reduce using rule 112 (else -> ELSE LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 112 (else -> ELSE LCURL lineorBreak RCURL .)


state 347

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 349


state 348

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 350


state 349

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 351


state 350

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 352


state 351

    (41) queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 41 (queue -> keywordVariables ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)


state 352

    (177) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 177 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 177 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 177 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 177 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINEBREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 53 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 54 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 104 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 105 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 202 resolved as shift
WARNING: reduce/reduce conflict in state 265 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 265
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

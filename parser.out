Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SEMICOLON
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> blocks
Rule 2     line -> blocks LINEBREAK
Rule 3     line -> blocks LINEBREAK line
Rule 4     line -> blocks LINEBREAK line LINEBREAK
Rule 5     line -> LINEBREAK
Rule 6     blocks -> impresion
Rule 7     blocks -> expression
Rule 8     blocks -> estructurasControl
Rule 9     blocks -> condicion
Rule 10    blocks -> funcion
Rule 11    blocks -> asignacion
Rule 12    blocks -> estructurasDatos
Rule 13    estructurasDatos -> queue
Rule 14    estructurasDatos -> queue_operations
Rule 15    estructurasDatos -> stack
Rule 16    estructurasDatos -> stack_actuar
Rule 17    estructurasDatos -> instance_linkedlist
Rule 18    estructurasDatos -> def_estruct_tipoDato
Rule 19    estructurasDatos -> lista
Rule 20    estructurasDatos -> lsimplem
Rule 21    estructurasDatos -> lcomp
Rule 22    estructurasControl -> for
Rule 23    estructurasControl -> if
Rule 24    estructurasControl -> while
Rule 25    queue_operations -> queue_add
Rule 26    queue_operations -> queue_peek
Rule 27    queue_operations -> queue_remove
Rule 28    queue_operations -> queue_poll
Rule 29    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 30    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 31    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 32    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 33    impresion -> PRINT LPAREN expression RPAREN
Rule 34    impresion -> PRINTLN LPAREN expression RPAREN
Rule 35    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 36    for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
Rule 37    iterable -> ID
Rule 38    iterable -> INT THREEDOTS INT
Rule 39    iterable -> ID DOT INDICES
Rule 40    asignacion -> keywordVariables asignacionSimple
Rule 41    asignacion -> asignacionSimple
Rule 42    keywordVariables -> VAR
Rule 43    keywordVariables -> VAL
Rule 44    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 45    asignacionSimple -> ID EQUAL valor
Rule 46    tipoDatoEspecifico -> TINT EQUAL INT
Rule 47    tipoDatoEspecifico -> TLONG EQUAL LONG
Rule 48    tipoDatoEspecifico -> TFLOAT EQUAL FLOAT
Rule 49    tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN
Rule 50    tipoDatoEspecifico -> TCHAR EQUAL CHAR
Rule 51    tipoDatoEspecifico -> TSTRING EQUAL STRING_1
Rule 52    tipoDato -> TINT
Rule 53    tipoDato -> TLONG
Rule 54    tipoDato -> TFLOAT
Rule 55    tipoDato -> TDOUBLE
Rule 56    tipoDato -> TBOOLEAN
Rule 57    tipoDato -> TCHAR
Rule 58    tipoDato -> TSTRING
Rule 59    valor -> expression
Rule 60    expression -> expression PLUS term
Rule 61    expression -> expression MINUS term
Rule 62    expression -> expression TIMES term
Rule 63    expression -> expression DIVIDE term
Rule 64    expression -> expression MOD term
Rule 65    expression -> expression INCREMENTONE
Rule 66    expression -> expression DECREMENTONE
Rule 67    expression -> term
Rule 68    term -> factor
Rule 69    term -> LPAREN expression RPAREN
Rule 70    factor -> INT
Rule 71    factor -> FLOAT
Rule 72    factor -> LONG
Rule 73    factor -> CHAR
Rule 74    factor -> BOOLEAN
Rule 75    factor -> ID
Rule 76    factor -> STRING_1
Rule 77    funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
Rule 78    funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
Rule 79    funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL
Rule 80    funcion -> FUN ID LPAREN RPAREN LCURL RCURL
Rule 81    lineorBreak -> line
Rule 82    lineorBreak -> LINEBREAK line LINEBREAK
Rule 83    lineorBreak -> LINEBREAK line
Rule 84    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
Rule 85    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
Rule 86    else -> ELSE LCURL lineorBreak RCURL
Rule 87    condicion -> condicionL
Rule 88    condicion -> condicionR
Rule 89    condicion -> condicionN
Rule 90    condicionL -> BOOLEAN opL BOOLEAN
Rule 91    condicionL -> ID opL ID
Rule 92    condicionL -> ID opL BOOLEAN
Rule 93    condicionL -> BOOLEAN opL ID
Rule 94    condicionR -> INT opR INT
Rule 95    condicionR -> INT opR FLOAT
Rule 96    condicionR -> INT opR LONG
Rule 97    condicionR -> FLOAT opR FLOAT
Rule 98    condicionR -> FLOAT opR INT
Rule 99    condicionR -> FLOAT opR LONG
Rule 100   condicionR -> LONG opR LONG
Rule 101   condicionR -> LONG opR INT
Rule 102   condicionR -> LONG opR FLOAT
Rule 103   condicionR -> STRING_1 opR STRING_1
Rule 104   condicionR -> CHAR opR CHAR
Rule 105   condicionR -> ID opR ID
Rule 106   condicionR -> ID opR INT
Rule 107   condicionR -> ID opR FLOAT
Rule 108   condicionR -> ID opR LONG
Rule 109   condicionN -> EXCL_WS BOOLEAN
Rule 110   condicionN -> EXCL_WS ID
Rule 111   opL -> CONJ
Rule 112   opL -> DISJ
Rule 113   opR -> LANGLE
Rule 114   opR -> RANGLE
Rule 115   opR -> LE
Rule 116   opR -> GE
Rule 117   opR -> EXCL_EQ
Rule 118   opR -> EXCL_EQEQ
Rule 119   opR -> AS_SAFE
Rule 120   opR -> EQEQ
Rule 121   opR -> EQEQEQ
Rule 122   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 123   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 124   instance_linkedlist -> LINKEDL LPAREN RPAREN
Rule 125   stack_actuar -> ID DOT stack_funciones
Rule 126   stack_funciones -> stack_isEmpty
Rule 127   stack_funciones -> stack_push
Rule 128   stack_funciones -> stack_pop
Rule 129   stack_funciones -> stack_peek
Rule 130   stack_funciones -> stack_size
Rule 131   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 132   stack_pop -> POP LPAREN RPAREN
Rule 133   stack_push -> PUSH LPAREN factor RPAREN
Rule 134   stack_peek -> PEEK LPAREN RPAREN
Rule 135   stack_size -> SIZE LPAREN RPAREN
Rule 136   Lmetod -> FIRST LPAREN RPAREN
Rule 137   Lmetod -> LAST LPAREN RPAREN
Rule 138   Lmetod -> REMOVEL LPAREN RPAREN
Rule 139   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 140   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 141   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 142   while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
Rule 143   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 144   lsimplem -> ID DOT Lmetod
Rule 145   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 29
ANNOTATION           : 
APPEND               : 139
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 119
AT_NO_WS             : 
BOOLEAN              : 49 74 90 90 92 93 109
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 50 73 104 104
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 111
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 66
DISJ                 : 112
DIVIDE               : 63
DIVIDEIN             : 
DO                   : 
DOT                  : 29 30 31 32 39 125 144 145
DOTS                 : 35 44 122 143
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 86
ENUM                 : 
EQEQ                 : 120
EQEQEQ               : 121
EQUAL                : 35 45 46 47 48 49 50 51 122 143
EXCL_EQ              : 117
EXCL_EQEQ            : 118
EXCL_NO_WS           : 
EXCL_WS              : 109 110
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 136
FLOAT                : 48 71 95 97 97 98 99 102 107
FOR                  : 36
FUN                  : 77 78 79 80
GE                   : 116
GET                  : 
HASH                 : 
ID                   : 29 30 31 32 35 36 37 39 44 45 75 77 78 78 79 79 80 91 91 92 93 105 105 106 107 108 110 122 125 142 143 144 145
IF                   : 84 85
IMPORT               : 
IN                   : 36
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 65
INCREMENTTIMES       : 
INDICES              : 39
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 38 38 46 70 94 94 95 96 98 101 106 142
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 131
LANGLE               : 35 35 113 123 143 143
LAST                 : 137
LATEINIT             : 
LCURL                : 36 77 78 79 80 84 85 86 142
LE                   : 115
LINEBREAK            : 2 3 4 4 5 82 82 83
LINKEDL              : 35 124 143 143
LISTOF               : 
LONG                 : 47 72 96 99 100 100 101 102 108
LPAREN               : 29 30 31 32 33 34 35 36 69 77 78 79 80 84 85 124 131 132 133 134 135 136 137 138 139 140 141 142 143
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 61
MOD                  : 64
MODIN                : 
NOINLINE             : 
OBJECT               : 139 140 143 143
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 30 134
PLUS                 : 60
POLL                 : 31
POP                  : 132
PRINT                : 33
PRINTLN              : 34
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 133
QUEST_WS             : 
QUEUE                : 35
RANGE                : 
RANGLE               : 35 35 114 123 143 143
RCURL                : 36 77 78 79 80 84 85 86 142
RECEIVER             : 
REIFIED              : 
REMOVE               : 32
REMOVEI              : 141
REMOVEL              : 138
REMOVEN              : 140
RETURN               : 
RPAREN               : 29 30 31 32 33 34 35 36 69 77 78 79 80 84 85 124 131 132 133 134 135 136 137 138 139 140 141 142 143
RSQUARE              : 
SEALED               : 
SEMICOLON            : 
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 135
STACK                : 123
STRING_1             : 51 76 103 103
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 49 56
TCHAR                : 50 57
TDOUBLE              : 55
TEMPLATE             : 
TFLOAT               : 48 54
THIS                 : 
THREEDOTS            : 38
THROW                : 
TIMES                : 62
TINT                 : 46 52 141
TLONG                : 47 53
TRY                  : 
TSTRING              : 51 58
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 35 43
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 42
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 142
error                : 

Nonterminals, with rules where they appear

Cmetod               : 145
Lmetod               : 144
asignacion           : 11
asignacionSimple     : 40 41
blocks               : 1 2 3 4
condicion            : 9 84 85
condicionL           : 87
condicionN           : 89
condicionR           : 88
def_estruct_tipoDato : 18 122
else                 : 85
estructurasControl   : 8
estructurasDatos     : 12
expression           : 7 33 34 59 60 61 62 63 64 65 66 69
factor               : 29 68 133
for                  : 22
funcion              : 10
if                   : 23
impresion            : 6
instance_linkedlist  : 17 122
iterable             : 36
keywordVariables     : 40 122 143
lcomp                : 21
line                 : 3 4 81 82 83 0
lineorBreak          : 36 77 78 84 85 86 142
lista                : 19
lsimplem             : 20
opL                  : 90 91 92 93
opR                  : 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 142
queue                : 13
queue_add            : 25
queue_operations     : 14
queue_peek           : 26
queue_poll           : 28
queue_remove         : 27
stack                : 15
stack_actuar         : 16
stack_funciones      : 125
stack_isEmpty        : 126
stack_peek           : 129
stack_pop            : 128
stack_push           : 127
stack_size           : 130
term                 : 60 61 62 63 64 67
tipoDato             : 35 35 123
tipoDatoEspecifico   : 44
valor                : 45
while                : 24

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 1
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 1

    (0) S' -> line .



state 2

    (1) line -> blocks .
    (2) line -> blocks . LINEBREAK
    (3) line -> blocks . LINEBREAK line
    (4) line -> blocks . LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 1 (line -> blocks .)
    RCURL           reduce using rule 1 (line -> blocks .)
    LINEBREAK       shift and go to state 53

  ! LINEBREAK       [ reduce using rule 1 (line -> blocks .) ]


state 3

    (5) line -> LINEBREAK .

    $end            reduce using rule 5 (line -> LINEBREAK .)
    LINEBREAK       reduce using rule 5 (line -> LINEBREAK .)
    RCURL           reduce using rule 5 (line -> LINEBREAK .)


state 4

    (6) blocks -> impresion .

    LINEBREAK       reduce using rule 6 (blocks -> impresion .)
    $end            reduce using rule 6 (blocks -> impresion .)
    RCURL           reduce using rule 6 (blocks -> impresion .)


state 5

    (7) blocks -> expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    LINEBREAK       reduce using rule 7 (blocks -> expression .)
    $end            reduce using rule 7 (blocks -> expression .)
    RCURL           reduce using rule 7 (blocks -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 6

    (8) blocks -> estructurasControl .

    LINEBREAK       reduce using rule 8 (blocks -> estructurasControl .)
    $end            reduce using rule 8 (blocks -> estructurasControl .)
    RCURL           reduce using rule 8 (blocks -> estructurasControl .)


state 7

    (9) blocks -> condicion .

    LINEBREAK       reduce using rule 9 (blocks -> condicion .)
    $end            reduce using rule 9 (blocks -> condicion .)
    RCURL           reduce using rule 9 (blocks -> condicion .)


state 8

    (10) blocks -> funcion .

    LINEBREAK       reduce using rule 10 (blocks -> funcion .)
    $end            reduce using rule 10 (blocks -> funcion .)
    RCURL           reduce using rule 10 (blocks -> funcion .)


state 9

    (11) blocks -> asignacion .

    LINEBREAK       reduce using rule 11 (blocks -> asignacion .)
    $end            reduce using rule 11 (blocks -> asignacion .)
    RCURL           reduce using rule 11 (blocks -> asignacion .)


state 10

    (12) blocks -> estructurasDatos .

    LINEBREAK       reduce using rule 12 (blocks -> estructurasDatos .)
    $end            reduce using rule 12 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 12 (blocks -> estructurasDatos .)


state 11

    (33) impresion -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 61


state 12

    (69) term -> LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    expression                     shift and go to state 62
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 13

    (34) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 70


state 14

    (67) expression -> term .

    PLUS            reduce using rule 67 (expression -> term .)
    MINUS           reduce using rule 67 (expression -> term .)
    TIMES           reduce using rule 67 (expression -> term .)
    DIVIDE          reduce using rule 67 (expression -> term .)
    MOD             reduce using rule 67 (expression -> term .)
    INCREMENTONE    reduce using rule 67 (expression -> term .)
    DECREMENTONE    reduce using rule 67 (expression -> term .)
    LINEBREAK       reduce using rule 67 (expression -> term .)
    $end            reduce using rule 67 (expression -> term .)
    RPAREN          reduce using rule 67 (expression -> term .)
    RCURL           reduce using rule 67 (expression -> term .)


state 15

    (22) estructurasControl -> for .

    LINEBREAK       reduce using rule 22 (estructurasControl -> for .)
    $end            reduce using rule 22 (estructurasControl -> for .)
    RCURL           reduce using rule 22 (estructurasControl -> for .)


state 16

    (23) estructurasControl -> if .

    LINEBREAK       reduce using rule 23 (estructurasControl -> if .)
    $end            reduce using rule 23 (estructurasControl -> if .)
    RCURL           reduce using rule 23 (estructurasControl -> if .)


state 17

    (24) estructurasControl -> while .

    LINEBREAK       reduce using rule 24 (estructurasControl -> while .)
    $end            reduce using rule 24 (estructurasControl -> while .)
    RCURL           reduce using rule 24 (estructurasControl -> while .)


state 18

    (87) condicion -> condicionL .

    LINEBREAK       reduce using rule 87 (condicion -> condicionL .)
    $end            reduce using rule 87 (condicion -> condicionL .)
    RCURL           reduce using rule 87 (condicion -> condicionL .)
    RPAREN          reduce using rule 87 (condicion -> condicionL .)


state 19

    (88) condicion -> condicionR .

    LINEBREAK       reduce using rule 88 (condicion -> condicionR .)
    $end            reduce using rule 88 (condicion -> condicionR .)
    RCURL           reduce using rule 88 (condicion -> condicionR .)
    RPAREN          reduce using rule 88 (condicion -> condicionR .)


state 20

    (89) condicion -> condicionN .

    LINEBREAK       reduce using rule 89 (condicion -> condicionN .)
    $end            reduce using rule 89 (condicion -> condicionN .)
    RCURL           reduce using rule 89 (condicion -> condicionN .)
    RPAREN          reduce using rule 89 (condicion -> condicionN .)


state 21

    (77) funcion -> FUN . ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> FUN . ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN . ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> FUN . ID LPAREN RPAREN LCURL RCURL

    ID              shift and go to state 71


state 22

    (91) condicionL -> ID . opL ID
    (92) condicionL -> ID . opL BOOLEAN
    (105) condicionR -> ID . opR ID
    (106) condicionR -> ID . opR INT
    (107) condicionR -> ID . opR FLOAT
    (108) condicionR -> ID . opR LONG
    (44) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (45) asignacionSimple -> ID . EQUAL valor
    (125) stack_actuar -> ID . DOT stack_funciones
    (144) lsimplem -> ID . DOT Lmetod
    (145) lcomp -> ID . DOT Cmetod
    (75) factor -> ID .
    (29) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (32) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (111) opL -> . CONJ
    (112) opL -> . DISJ
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    DOTS            shift and go to state 74
    EQUAL           shift and go to state 75
    DOT             shift and go to state 76
    PLUS            reduce using rule 75 (factor -> ID .)
    MINUS           reduce using rule 75 (factor -> ID .)
    TIMES           reduce using rule 75 (factor -> ID .)
    DIVIDE          reduce using rule 75 (factor -> ID .)
    MOD             reduce using rule 75 (factor -> ID .)
    INCREMENTONE    reduce using rule 75 (factor -> ID .)
    DECREMENTONE    reduce using rule 75 (factor -> ID .)
    LINEBREAK       reduce using rule 75 (factor -> ID .)
    $end            reduce using rule 75 (factor -> ID .)
    RCURL           reduce using rule 75 (factor -> ID .)
    CONJ            shift and go to state 77
    DISJ            shift and go to state 78
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opL                            shift and go to state 72
    opR                            shift and go to state 73

state 23

    (40) asignacion -> keywordVariables . asignacionSimple
    (122) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (143) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 89

    asignacionSimple               shift and go to state 88

state 24

    (41) asignacion -> asignacionSimple .

    LINEBREAK       reduce using rule 41 (asignacion -> asignacionSimple .)
    $end            reduce using rule 41 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 41 (asignacion -> asignacionSimple .)


state 25

    (13) estructurasDatos -> queue .

    LINEBREAK       reduce using rule 13 (estructurasDatos -> queue .)
    $end            reduce using rule 13 (estructurasDatos -> queue .)
    RCURL           reduce using rule 13 (estructurasDatos -> queue .)


state 26

    (14) estructurasDatos -> queue_operations .

    LINEBREAK       reduce using rule 14 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 14 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 14 (estructurasDatos -> queue_operations .)


state 27

    (15) estructurasDatos -> stack .

    LINEBREAK       reduce using rule 15 (estructurasDatos -> stack .)
    $end            reduce using rule 15 (estructurasDatos -> stack .)
    RCURL           reduce using rule 15 (estructurasDatos -> stack .)


state 28

    (16) estructurasDatos -> stack_actuar .

    LINEBREAK       reduce using rule 16 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 16 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 16 (estructurasDatos -> stack_actuar .)


state 29

    (17) estructurasDatos -> instance_linkedlist .

    LINEBREAK       reduce using rule 17 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 17 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 17 (estructurasDatos -> instance_linkedlist .)


state 30

    (18) estructurasDatos -> def_estruct_tipoDato .

    LINEBREAK       reduce using rule 18 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 18 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 18 (estructurasDatos -> def_estruct_tipoDato .)


state 31

    (19) estructurasDatos -> lista .

    LINEBREAK       reduce using rule 19 (estructurasDatos -> lista .)
    $end            reduce using rule 19 (estructurasDatos -> lista .)
    RCURL           reduce using rule 19 (estructurasDatos -> lista .)


state 32

    (20) estructurasDatos -> lsimplem .

    LINEBREAK       reduce using rule 20 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 20 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 20 (estructurasDatos -> lsimplem .)


state 33

    (21) estructurasDatos -> lcomp .

    LINEBREAK       reduce using rule 21 (estructurasDatos -> lcomp .)
    $end            reduce using rule 21 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 21 (estructurasDatos -> lcomp .)


state 34

    (68) term -> factor .

    PLUS            reduce using rule 68 (term -> factor .)
    MINUS           reduce using rule 68 (term -> factor .)
    TIMES           reduce using rule 68 (term -> factor .)
    DIVIDE          reduce using rule 68 (term -> factor .)
    MOD             reduce using rule 68 (term -> factor .)
    INCREMENTONE    reduce using rule 68 (term -> factor .)
    DECREMENTONE    reduce using rule 68 (term -> factor .)
    LINEBREAK       reduce using rule 68 (term -> factor .)
    $end            reduce using rule 68 (term -> factor .)
    RPAREN          reduce using rule 68 (term -> factor .)
    RCURL           reduce using rule 68 (term -> factor .)


state 35

    (36) for -> FOR . LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 90


state 36

    (84) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL else

    LPAREN          shift and go to state 91


state 37

    (142) while -> WHILE . LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 92


state 38

    (94) condicionR -> INT . opR INT
    (95) condicionR -> INT . opR FLOAT
    (96) condicionR -> INT . opR LONG
    (70) factor -> INT .
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    PLUS            reduce using rule 70 (factor -> INT .)
    MINUS           reduce using rule 70 (factor -> INT .)
    TIMES           reduce using rule 70 (factor -> INT .)
    DIVIDE          reduce using rule 70 (factor -> INT .)
    MOD             reduce using rule 70 (factor -> INT .)
    INCREMENTONE    reduce using rule 70 (factor -> INT .)
    DECREMENTONE    reduce using rule 70 (factor -> INT .)
    LINEBREAK       reduce using rule 70 (factor -> INT .)
    $end            reduce using rule 70 (factor -> INT .)
    RCURL           reduce using rule 70 (factor -> INT .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 93

state 39

    (90) condicionL -> BOOLEAN . opL BOOLEAN
    (93) condicionL -> BOOLEAN . opL ID
    (74) factor -> BOOLEAN .
    (111) opL -> . CONJ
    (112) opL -> . DISJ

    PLUS            reduce using rule 74 (factor -> BOOLEAN .)
    MINUS           reduce using rule 74 (factor -> BOOLEAN .)
    TIMES           reduce using rule 74 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 74 (factor -> BOOLEAN .)
    MOD             reduce using rule 74 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 74 (factor -> BOOLEAN .)
    $end            reduce using rule 74 (factor -> BOOLEAN .)
    RCURL           reduce using rule 74 (factor -> BOOLEAN .)
    CONJ            shift and go to state 77
    DISJ            shift and go to state 78

    opL                            shift and go to state 94

state 40

    (97) condicionR -> FLOAT . opR FLOAT
    (98) condicionR -> FLOAT . opR INT
    (99) condicionR -> FLOAT . opR LONG
    (71) factor -> FLOAT .
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    PLUS            reduce using rule 71 (factor -> FLOAT .)
    MINUS           reduce using rule 71 (factor -> FLOAT .)
    TIMES           reduce using rule 71 (factor -> FLOAT .)
    DIVIDE          reduce using rule 71 (factor -> FLOAT .)
    MOD             reduce using rule 71 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 71 (factor -> FLOAT .)
    $end            reduce using rule 71 (factor -> FLOAT .)
    RCURL           reduce using rule 71 (factor -> FLOAT .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 95

state 41

    (100) condicionR -> LONG . opR LONG
    (101) condicionR -> LONG . opR INT
    (102) condicionR -> LONG . opR FLOAT
    (72) factor -> LONG .
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    PLUS            reduce using rule 72 (factor -> LONG .)
    MINUS           reduce using rule 72 (factor -> LONG .)
    TIMES           reduce using rule 72 (factor -> LONG .)
    DIVIDE          reduce using rule 72 (factor -> LONG .)
    MOD             reduce using rule 72 (factor -> LONG .)
    INCREMENTONE    reduce using rule 72 (factor -> LONG .)
    DECREMENTONE    reduce using rule 72 (factor -> LONG .)
    LINEBREAK       reduce using rule 72 (factor -> LONG .)
    $end            reduce using rule 72 (factor -> LONG .)
    RCURL           reduce using rule 72 (factor -> LONG .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 96

state 42

    (103) condicionR -> STRING_1 . opR STRING_1
    (76) factor -> STRING_1 .
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    PLUS            reduce using rule 76 (factor -> STRING_1 .)
    MINUS           reduce using rule 76 (factor -> STRING_1 .)
    TIMES           reduce using rule 76 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 76 (factor -> STRING_1 .)
    MOD             reduce using rule 76 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 76 (factor -> STRING_1 .)
    $end            reduce using rule 76 (factor -> STRING_1 .)
    RCURL           reduce using rule 76 (factor -> STRING_1 .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 97

state 43

    (104) condicionR -> CHAR . opR CHAR
    (73) factor -> CHAR .
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    PLUS            reduce using rule 73 (factor -> CHAR .)
    MINUS           reduce using rule 73 (factor -> CHAR .)
    TIMES           reduce using rule 73 (factor -> CHAR .)
    DIVIDE          reduce using rule 73 (factor -> CHAR .)
    MOD             reduce using rule 73 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 73 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 73 (factor -> CHAR .)
    LINEBREAK       reduce using rule 73 (factor -> CHAR .)
    $end            reduce using rule 73 (factor -> CHAR .)
    RCURL           reduce using rule 73 (factor -> CHAR .)
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 98

state 44

    (109) condicionN -> EXCL_WS . BOOLEAN
    (110) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 99
    ID              shift and go to state 100


state 45

    (42) keywordVariables -> VAR .

    ID              reduce using rule 42 (keywordVariables -> VAR .)


state 46

    (43) keywordVariables -> VAL .
    (35) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101

  ! ID              [ reduce using rule 43 (keywordVariables -> VAL .) ]


state 47

    (124) instance_linkedlist -> LINKEDL . LPAREN RPAREN

    LPAREN          shift and go to state 102


state 48

    (25) queue_operations -> queue_add .

    LINEBREAK       reduce using rule 25 (queue_operations -> queue_add .)
    $end            reduce using rule 25 (queue_operations -> queue_add .)
    RCURL           reduce using rule 25 (queue_operations -> queue_add .)


state 49

    (26) queue_operations -> queue_peek .

    LINEBREAK       reduce using rule 26 (queue_operations -> queue_peek .)
    $end            reduce using rule 26 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 26 (queue_operations -> queue_peek .)


state 50

    (27) queue_operations -> queue_remove .

    LINEBREAK       reduce using rule 27 (queue_operations -> queue_remove .)
    $end            reduce using rule 27 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 27 (queue_operations -> queue_remove .)


state 51

    (28) queue_operations -> queue_poll .

    LINEBREAK       reduce using rule 28 (queue_operations -> queue_poll .)
    $end            reduce using rule 28 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 28 (queue_operations -> queue_poll .)


state 52

    (123) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 103


state 53

    (2) line -> blocks LINEBREAK .
    (3) line -> blocks LINEBREAK . line
    (4) line -> blocks LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 2 (line -> blocks LINEBREAK .)
    RCURL           reduce using rule 2 (line -> blocks LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 2 (line -> blocks LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 104
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 54

    (60) expression -> expression PLUS . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 105
    factor                         shift and go to state 34

state 55

    (61) expression -> expression MINUS . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 106
    factor                         shift and go to state 34

state 56

    (62) expression -> expression TIMES . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 107
    factor                         shift and go to state 34

state 57

    (63) expression -> expression DIVIDE . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 108
    factor                         shift and go to state 34

state 58

    (64) expression -> expression MOD . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    term                           shift and go to state 109
    factor                         shift and go to state 34

state 59

    (65) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 65 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 65 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 65 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 65 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 65 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 65 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 65 (expression -> expression INCREMENTONE .)
    LINEBREAK       reduce using rule 65 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 65 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 65 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 65 (expression -> expression INCREMENTONE .)


state 60

    (66) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 66 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 66 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 66 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 66 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 66 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 66 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 66 (expression -> expression DECREMENTONE .)
    LINEBREAK       reduce using rule 66 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 66 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 66 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 66 (expression -> expression DECREMENTONE .)


state 61

    (33) impresion -> PRINT LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    expression                     shift and go to state 110
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 62

    (69) term -> LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 63

    (70) factor -> INT .

    RPAREN          reduce using rule 70 (factor -> INT .)
    PLUS            reduce using rule 70 (factor -> INT .)
    MINUS           reduce using rule 70 (factor -> INT .)
    TIMES           reduce using rule 70 (factor -> INT .)
    DIVIDE          reduce using rule 70 (factor -> INT .)
    MOD             reduce using rule 70 (factor -> INT .)
    INCREMENTONE    reduce using rule 70 (factor -> INT .)
    DECREMENTONE    reduce using rule 70 (factor -> INT .)
    LINEBREAK       reduce using rule 70 (factor -> INT .)
    $end            reduce using rule 70 (factor -> INT .)
    RCURL           reduce using rule 70 (factor -> INT .)


state 64

    (71) factor -> FLOAT .

    RPAREN          reduce using rule 71 (factor -> FLOAT .)
    PLUS            reduce using rule 71 (factor -> FLOAT .)
    MINUS           reduce using rule 71 (factor -> FLOAT .)
    TIMES           reduce using rule 71 (factor -> FLOAT .)
    DIVIDE          reduce using rule 71 (factor -> FLOAT .)
    MOD             reduce using rule 71 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 71 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 71 (factor -> FLOAT .)
    $end            reduce using rule 71 (factor -> FLOAT .)
    RCURL           reduce using rule 71 (factor -> FLOAT .)


state 65

    (72) factor -> LONG .

    RPAREN          reduce using rule 72 (factor -> LONG .)
    PLUS            reduce using rule 72 (factor -> LONG .)
    MINUS           reduce using rule 72 (factor -> LONG .)
    TIMES           reduce using rule 72 (factor -> LONG .)
    DIVIDE          reduce using rule 72 (factor -> LONG .)
    MOD             reduce using rule 72 (factor -> LONG .)
    INCREMENTONE    reduce using rule 72 (factor -> LONG .)
    DECREMENTONE    reduce using rule 72 (factor -> LONG .)
    LINEBREAK       reduce using rule 72 (factor -> LONG .)
    $end            reduce using rule 72 (factor -> LONG .)
    RCURL           reduce using rule 72 (factor -> LONG .)


state 66

    (73) factor -> CHAR .

    RPAREN          reduce using rule 73 (factor -> CHAR .)
    PLUS            reduce using rule 73 (factor -> CHAR .)
    MINUS           reduce using rule 73 (factor -> CHAR .)
    TIMES           reduce using rule 73 (factor -> CHAR .)
    DIVIDE          reduce using rule 73 (factor -> CHAR .)
    MOD             reduce using rule 73 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 73 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 73 (factor -> CHAR .)
    LINEBREAK       reduce using rule 73 (factor -> CHAR .)
    $end            reduce using rule 73 (factor -> CHAR .)
    RCURL           reduce using rule 73 (factor -> CHAR .)


state 67

    (74) factor -> BOOLEAN .

    RPAREN          reduce using rule 74 (factor -> BOOLEAN .)
    PLUS            reduce using rule 74 (factor -> BOOLEAN .)
    MINUS           reduce using rule 74 (factor -> BOOLEAN .)
    TIMES           reduce using rule 74 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 74 (factor -> BOOLEAN .)
    MOD             reduce using rule 74 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 74 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 74 (factor -> BOOLEAN .)
    $end            reduce using rule 74 (factor -> BOOLEAN .)
    RCURL           reduce using rule 74 (factor -> BOOLEAN .)


state 68

    (75) factor -> ID .

    RPAREN          reduce using rule 75 (factor -> ID .)
    PLUS            reduce using rule 75 (factor -> ID .)
    MINUS           reduce using rule 75 (factor -> ID .)
    TIMES           reduce using rule 75 (factor -> ID .)
    DIVIDE          reduce using rule 75 (factor -> ID .)
    MOD             reduce using rule 75 (factor -> ID .)
    INCREMENTONE    reduce using rule 75 (factor -> ID .)
    DECREMENTONE    reduce using rule 75 (factor -> ID .)
    LINEBREAK       reduce using rule 75 (factor -> ID .)
    $end            reduce using rule 75 (factor -> ID .)
    RCURL           reduce using rule 75 (factor -> ID .)


state 69

    (76) factor -> STRING_1 .

    RPAREN          reduce using rule 76 (factor -> STRING_1 .)
    PLUS            reduce using rule 76 (factor -> STRING_1 .)
    MINUS           reduce using rule 76 (factor -> STRING_1 .)
    TIMES           reduce using rule 76 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 76 (factor -> STRING_1 .)
    MOD             reduce using rule 76 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 76 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 76 (factor -> STRING_1 .)
    $end            reduce using rule 76 (factor -> STRING_1 .)
    RCURL           reduce using rule 76 (factor -> STRING_1 .)


state 70

    (34) impresion -> PRINTLN LPAREN . expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    expression                     shift and go to state 112
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 71

    (77) funcion -> FUN ID . LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> FUN ID . LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN ID . LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> FUN ID . LPAREN RPAREN LCURL RCURL

    LPAREN          shift and go to state 113


state 72

    (91) condicionL -> ID opL . ID
    (92) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 114
    BOOLEAN         shift and go to state 115


state 73

    (105) condicionR -> ID opR . ID
    (106) condicionR -> ID opR . INT
    (107) condicionR -> ID opR . FLOAT
    (108) condicionR -> ID opR . LONG

    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    LONG            shift and go to state 119


state 74

    (44) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (46) tipoDatoEspecifico -> . TINT EQUAL INT
    (47) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (48) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (49) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (50) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (51) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    TINT            shift and go to state 121
    TLONG           shift and go to state 122
    TFLOAT          shift and go to state 123
    TBOOLEAN        shift and go to state 124
    TCHAR           shift and go to state 125
    TSTRING         shift and go to state 126

    tipoDatoEspecifico             shift and go to state 120

state 75

    (45) asignacionSimple -> ID EQUAL . valor
    (59) valor -> . expression
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    valor                          shift and go to state 127
    expression                     shift and go to state 128
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 76

    (125) stack_actuar -> ID DOT . stack_funciones
    (144) lsimplem -> ID DOT . Lmetod
    (145) lcomp -> ID DOT . Cmetod
    (29) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (30) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (32) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (31) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (126) stack_funciones -> . stack_isEmpty
    (127) stack_funciones -> . stack_push
    (128) stack_funciones -> . stack_pop
    (129) stack_funciones -> . stack_peek
    (130) stack_funciones -> . stack_size
    (136) Lmetod -> . FIRST LPAREN RPAREN
    (137) Lmetod -> . LAST LPAREN RPAREN
    (138) Lmetod -> . REMOVEL LPAREN RPAREN
    (139) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (140) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (141) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (131) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (133) stack_push -> . PUSH LPAREN factor RPAREN
    (132) stack_pop -> . POP LPAREN RPAREN
    (134) stack_peek -> . PEEK LPAREN RPAREN
    (135) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 132
    PEEK            shift and go to state 133
    REMOVE          shift and go to state 134
    POLL            shift and go to state 135
    FIRST           shift and go to state 141
    LAST            shift and go to state 142
    REMOVEL         shift and go to state 143
    APPEND          shift and go to state 144
    REMOVEN         shift and go to state 145
    REMOVEI         shift and go to state 146
    ISEMPTY         shift and go to state 147
    PUSH            shift and go to state 148
    POP             shift and go to state 149
    SIZE            shift and go to state 150

    stack_funciones                shift and go to state 129
    Lmetod                         shift and go to state 130
    Cmetod                         shift and go to state 131
    stack_isEmpty                  shift and go to state 136
    stack_push                     shift and go to state 137
    stack_pop                      shift and go to state 138
    stack_peek                     shift and go to state 139
    stack_size                     shift and go to state 140

state 77

    (111) opL -> CONJ .

    ID              reduce using rule 111 (opL -> CONJ .)
    BOOLEAN         reduce using rule 111 (opL -> CONJ .)


state 78

    (112) opL -> DISJ .

    ID              reduce using rule 112 (opL -> DISJ .)
    BOOLEAN         reduce using rule 112 (opL -> DISJ .)


state 79

    (113) opR -> LANGLE .

    ID              reduce using rule 113 (opR -> LANGLE .)
    INT             reduce using rule 113 (opR -> LANGLE .)
    FLOAT           reduce using rule 113 (opR -> LANGLE .)
    LONG            reduce using rule 113 (opR -> LANGLE .)
    STRING_1        reduce using rule 113 (opR -> LANGLE .)
    CHAR            reduce using rule 113 (opR -> LANGLE .)


state 80

    (114) opR -> RANGLE .

    ID              reduce using rule 114 (opR -> RANGLE .)
    INT             reduce using rule 114 (opR -> RANGLE .)
    FLOAT           reduce using rule 114 (opR -> RANGLE .)
    LONG            reduce using rule 114 (opR -> RANGLE .)
    STRING_1        reduce using rule 114 (opR -> RANGLE .)
    CHAR            reduce using rule 114 (opR -> RANGLE .)


state 81

    (115) opR -> LE .

    ID              reduce using rule 115 (opR -> LE .)
    INT             reduce using rule 115 (opR -> LE .)
    FLOAT           reduce using rule 115 (opR -> LE .)
    LONG            reduce using rule 115 (opR -> LE .)
    STRING_1        reduce using rule 115 (opR -> LE .)
    CHAR            reduce using rule 115 (opR -> LE .)


state 82

    (116) opR -> GE .

    ID              reduce using rule 116 (opR -> GE .)
    INT             reduce using rule 116 (opR -> GE .)
    FLOAT           reduce using rule 116 (opR -> GE .)
    LONG            reduce using rule 116 (opR -> GE .)
    STRING_1        reduce using rule 116 (opR -> GE .)
    CHAR            reduce using rule 116 (opR -> GE .)


state 83

    (117) opR -> EXCL_EQ .

    ID              reduce using rule 117 (opR -> EXCL_EQ .)
    INT             reduce using rule 117 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 117 (opR -> EXCL_EQ .)
    LONG            reduce using rule 117 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 117 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 117 (opR -> EXCL_EQ .)


state 84

    (118) opR -> EXCL_EQEQ .

    ID              reduce using rule 118 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 118 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 118 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 118 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 118 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 118 (opR -> EXCL_EQEQ .)


state 85

    (119) opR -> AS_SAFE .

    ID              reduce using rule 119 (opR -> AS_SAFE .)
    INT             reduce using rule 119 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 119 (opR -> AS_SAFE .)
    LONG            reduce using rule 119 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 119 (opR -> AS_SAFE .)
    CHAR            reduce using rule 119 (opR -> AS_SAFE .)


state 86

    (120) opR -> EQEQ .

    ID              reduce using rule 120 (opR -> EQEQ .)
    INT             reduce using rule 120 (opR -> EQEQ .)
    FLOAT           reduce using rule 120 (opR -> EQEQ .)
    LONG            reduce using rule 120 (opR -> EQEQ .)
    STRING_1        reduce using rule 120 (opR -> EQEQ .)
    CHAR            reduce using rule 120 (opR -> EQEQ .)


state 87

    (121) opR -> EQEQEQ .

    ID              reduce using rule 121 (opR -> EQEQEQ .)
    INT             reduce using rule 121 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 121 (opR -> EQEQEQ .)
    LONG            reduce using rule 121 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 121 (opR -> EQEQEQ .)
    CHAR            reduce using rule 121 (opR -> EQEQEQ .)


state 88

    (40) asignacion -> keywordVariables asignacionSimple .

    LINEBREAK       reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 40 (asignacion -> keywordVariables asignacionSimple .)


state 89

    (122) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (143) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (45) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 151
    EQUAL           shift and go to state 75


state 90

    (36) for -> FOR LPAREN . ID IN iterable RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 152


state 91

    (84) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL else
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 154
    ID              shift and go to state 155
    INT             shift and go to state 156
    FLOAT           shift and go to state 157
    LONG            shift and go to state 158
    STRING_1        shift and go to state 159
    CHAR            shift and go to state 160
    EXCL_WS         shift and go to state 44

    condicion                      shift and go to state 153
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20

state 92

    (142) while -> WHILE LPAREN . ID opR INT RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 161


state 93

    (94) condicionR -> INT opR . INT
    (95) condicionR -> INT opR . FLOAT
    (96) condicionR -> INT opR . LONG

    INT             shift and go to state 162
    FLOAT           shift and go to state 163
    LONG            shift and go to state 164


state 94

    (90) condicionL -> BOOLEAN opL . BOOLEAN
    (93) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 165
    ID              shift and go to state 166


state 95

    (97) condicionR -> FLOAT opR . FLOAT
    (98) condicionR -> FLOAT opR . INT
    (99) condicionR -> FLOAT opR . LONG

    FLOAT           shift and go to state 167
    INT             shift and go to state 168
    LONG            shift and go to state 169


state 96

    (100) condicionR -> LONG opR . LONG
    (101) condicionR -> LONG opR . INT
    (102) condicionR -> LONG opR . FLOAT

    LONG            shift and go to state 170
    INT             shift and go to state 171
    FLOAT           shift and go to state 172


state 97

    (103) condicionR -> STRING_1 opR . STRING_1

    STRING_1        shift and go to state 173


state 98

    (104) condicionR -> CHAR opR . CHAR

    CHAR            shift and go to state 174


state 99

    (109) condicionN -> EXCL_WS BOOLEAN .

    LINEBREAK       reduce using rule 109 (condicionN -> EXCL_WS BOOLEAN .)
    $end            reduce using rule 109 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 109 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 109 (condicionN -> EXCL_WS BOOLEAN .)


state 100

    (110) condicionN -> EXCL_WS ID .

    LINEBREAK       reduce using rule 110 (condicionN -> EXCL_WS ID .)
    $end            reduce using rule 110 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 110 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 110 (condicionN -> EXCL_WS ID .)


state 101

    (35) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 175


state 102

    (124) instance_linkedlist -> LINKEDL LPAREN . RPAREN

    RPAREN          shift and go to state 176


state 103

    (123) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 178
    TLONG           shift and go to state 179
    TFLOAT          shift and go to state 180
    TDOUBLE         shift and go to state 181
    TBOOLEAN        shift and go to state 182
    TCHAR           shift and go to state 183
    TSTRING         shift and go to state 184

    tipoDato                       shift and go to state 177

state 104

    (3) line -> blocks LINEBREAK line .
    (4) line -> blocks LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 3 (line -> blocks LINEBREAK line .)
    RCURL           reduce using rule 3 (line -> blocks LINEBREAK line .)
    LINEBREAK       shift and go to state 185

  ! LINEBREAK       [ reduce using rule 3 (line -> blocks LINEBREAK line .) ]


state 105

    (60) expression -> expression PLUS term .

    PLUS            reduce using rule 60 (expression -> expression PLUS term .)
    MINUS           reduce using rule 60 (expression -> expression PLUS term .)
    TIMES           reduce using rule 60 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 60 (expression -> expression PLUS term .)
    MOD             reduce using rule 60 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 60 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 60 (expression -> expression PLUS term .)
    LINEBREAK       reduce using rule 60 (expression -> expression PLUS term .)
    $end            reduce using rule 60 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 60 (expression -> expression PLUS term .)
    RCURL           reduce using rule 60 (expression -> expression PLUS term .)


state 106

    (61) expression -> expression MINUS term .

    PLUS            reduce using rule 61 (expression -> expression MINUS term .)
    MINUS           reduce using rule 61 (expression -> expression MINUS term .)
    TIMES           reduce using rule 61 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 61 (expression -> expression MINUS term .)
    MOD             reduce using rule 61 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 61 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 61 (expression -> expression MINUS term .)
    LINEBREAK       reduce using rule 61 (expression -> expression MINUS term .)
    $end            reduce using rule 61 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 61 (expression -> expression MINUS term .)
    RCURL           reduce using rule 61 (expression -> expression MINUS term .)


state 107

    (62) expression -> expression TIMES term .

    PLUS            reduce using rule 62 (expression -> expression TIMES term .)
    MINUS           reduce using rule 62 (expression -> expression TIMES term .)
    TIMES           reduce using rule 62 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 62 (expression -> expression TIMES term .)
    MOD             reduce using rule 62 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 62 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 62 (expression -> expression TIMES term .)
    LINEBREAK       reduce using rule 62 (expression -> expression TIMES term .)
    $end            reduce using rule 62 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 62 (expression -> expression TIMES term .)
    RCURL           reduce using rule 62 (expression -> expression TIMES term .)


state 108

    (63) expression -> expression DIVIDE term .

    PLUS            reduce using rule 63 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 63 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 63 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 63 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 63 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 63 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 63 (expression -> expression DIVIDE term .)
    LINEBREAK       reduce using rule 63 (expression -> expression DIVIDE term .)
    $end            reduce using rule 63 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 63 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 63 (expression -> expression DIVIDE term .)


state 109

    (64) expression -> expression MOD term .

    PLUS            reduce using rule 64 (expression -> expression MOD term .)
    MINUS           reduce using rule 64 (expression -> expression MOD term .)
    TIMES           reduce using rule 64 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 64 (expression -> expression MOD term .)
    MOD             reduce using rule 64 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 64 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 64 (expression -> expression MOD term .)
    LINEBREAK       reduce using rule 64 (expression -> expression MOD term .)
    $end            reduce using rule 64 (expression -> expression MOD term .)
    RPAREN          reduce using rule 64 (expression -> expression MOD term .)
    RCURL           reduce using rule 64 (expression -> expression MOD term .)


state 110

    (33) impresion -> PRINT LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 186
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 111

    (69) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 69 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 69 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 69 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 69 (term -> LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 69 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 69 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 69 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 69 (term -> LPAREN expression RPAREN .)


state 112

    (34) impresion -> PRINTLN LPAREN expression . RPAREN
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 187
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 113

    (77) funcion -> FUN ID LPAREN . RPAREN LCURL lineorBreak RCURL
    (78) funcion -> FUN ID LPAREN . ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN . ID RPAREN LCURL RCURL
    (80) funcion -> FUN ID LPAREN . RPAREN LCURL RCURL

    RPAREN          shift and go to state 189
    ID              shift and go to state 188


state 114

    (91) condicionL -> ID opL ID .

    LINEBREAK       reduce using rule 91 (condicionL -> ID opL ID .)
    $end            reduce using rule 91 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 91 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 91 (condicionL -> ID opL ID .)


state 115

    (92) condicionL -> ID opL BOOLEAN .

    LINEBREAK       reduce using rule 92 (condicionL -> ID opL BOOLEAN .)
    $end            reduce using rule 92 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 92 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 92 (condicionL -> ID opL BOOLEAN .)


state 116

    (105) condicionR -> ID opR ID .

    LINEBREAK       reduce using rule 105 (condicionR -> ID opR ID .)
    $end            reduce using rule 105 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 105 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 105 (condicionR -> ID opR ID .)


state 117

    (106) condicionR -> ID opR INT .

    LINEBREAK       reduce using rule 106 (condicionR -> ID opR INT .)
    $end            reduce using rule 106 (condicionR -> ID opR INT .)
    RCURL           reduce using rule 106 (condicionR -> ID opR INT .)
    RPAREN          reduce using rule 106 (condicionR -> ID opR INT .)


state 118

    (107) condicionR -> ID opR FLOAT .

    LINEBREAK       reduce using rule 107 (condicionR -> ID opR FLOAT .)
    $end            reduce using rule 107 (condicionR -> ID opR FLOAT .)
    RCURL           reduce using rule 107 (condicionR -> ID opR FLOAT .)
    RPAREN          reduce using rule 107 (condicionR -> ID opR FLOAT .)


state 119

    (108) condicionR -> ID opR LONG .

    LINEBREAK       reduce using rule 108 (condicionR -> ID opR LONG .)
    $end            reduce using rule 108 (condicionR -> ID opR LONG .)
    RCURL           reduce using rule 108 (condicionR -> ID opR LONG .)
    RPAREN          reduce using rule 108 (condicionR -> ID opR LONG .)


state 120

    (44) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    LINEBREAK       reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 44 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 121

    (46) tipoDatoEspecifico -> TINT . EQUAL INT

    EQUAL           shift and go to state 190


state 122

    (47) tipoDatoEspecifico -> TLONG . EQUAL LONG

    EQUAL           shift and go to state 191


state 123

    (48) tipoDatoEspecifico -> TFLOAT . EQUAL FLOAT

    EQUAL           shift and go to state 192


state 124

    (49) tipoDatoEspecifico -> TBOOLEAN . EQUAL BOOLEAN

    EQUAL           shift and go to state 193


state 125

    (50) tipoDatoEspecifico -> TCHAR . EQUAL CHAR

    EQUAL           shift and go to state 194


state 126

    (51) tipoDatoEspecifico -> TSTRING . EQUAL STRING_1

    EQUAL           shift and go to state 195


state 127

    (45) asignacionSimple -> ID EQUAL valor .

    LINEBREAK       reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 45 (asignacionSimple -> ID EQUAL valor .)


state 128

    (59) valor -> expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term
    (62) expression -> expression . TIMES term
    (63) expression -> expression . DIVIDE term
    (64) expression -> expression . MOD term
    (65) expression -> expression . INCREMENTONE
    (66) expression -> expression . DECREMENTONE

    LINEBREAK       reduce using rule 59 (valor -> expression .)
    $end            reduce using rule 59 (valor -> expression .)
    RCURL           reduce using rule 59 (valor -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    INCREMENTONE    shift and go to state 59
    DECREMENTONE    shift and go to state 60


state 129

    (125) stack_actuar -> ID DOT stack_funciones .

    LINEBREAK       reduce using rule 125 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 125 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 125 (stack_actuar -> ID DOT stack_funciones .)


state 130

    (144) lsimplem -> ID DOT Lmetod .

    LINEBREAK       reduce using rule 144 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 144 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 144 (lsimplem -> ID DOT Lmetod .)


state 131

    (145) lcomp -> ID DOT Cmetod .

    LINEBREAK       reduce using rule 145 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 145 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 145 (lcomp -> ID DOT Cmetod .)


state 132

    (29) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 196


state 133

    (30) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (134) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 197


state 134

    (32) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 198


state 135

    (31) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 199


state 136

    (126) stack_funciones -> stack_isEmpty .

    LINEBREAK       reduce using rule 126 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 126 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 126 (stack_funciones -> stack_isEmpty .)


state 137

    (127) stack_funciones -> stack_push .

    LINEBREAK       reduce using rule 127 (stack_funciones -> stack_push .)
    $end            reduce using rule 127 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 127 (stack_funciones -> stack_push .)


state 138

    (128) stack_funciones -> stack_pop .

    LINEBREAK       reduce using rule 128 (stack_funciones -> stack_pop .)
    $end            reduce using rule 128 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 128 (stack_funciones -> stack_pop .)


state 139

    (129) stack_funciones -> stack_peek .

    LINEBREAK       reduce using rule 129 (stack_funciones -> stack_peek .)
    $end            reduce using rule 129 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 129 (stack_funciones -> stack_peek .)


state 140

    (130) stack_funciones -> stack_size .

    LINEBREAK       reduce using rule 130 (stack_funciones -> stack_size .)
    $end            reduce using rule 130 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 130 (stack_funciones -> stack_size .)


state 141

    (136) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 200


state 142

    (137) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 201


state 143

    (138) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 202


state 144

    (139) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 203


state 145

    (140) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 204


state 146

    (141) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 205


state 147

    (131) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 206


state 148

    (133) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 207


state 149

    (132) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 208


state 150

    (135) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 209


state 151

    (122) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (143) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (44) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (46) tipoDatoEspecifico -> . TINT EQUAL INT
    (47) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (48) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (49) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (50) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (51) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    LINKEDL         shift and go to state 211
    STACK           shift and go to state 52
    TINT            shift and go to state 121
    TLONG           shift and go to state 122
    TFLOAT          shift and go to state 123
    TBOOLEAN        shift and go to state 124
    TCHAR           shift and go to state 125
    TSTRING         shift and go to state 126

    def_estruct_tipoDato           shift and go to state 210
    tipoDatoEspecifico             shift and go to state 120

state 152

    (36) for -> FOR LPAREN ID . IN iterable RPAREN LCURL lineorBreak RCURL

    IN              shift and go to state 212


state 153

    (84) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL
    (85) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL else

    RPAREN          shift and go to state 213


state 154

    (90) condicionL -> BOOLEAN . opL BOOLEAN
    (93) condicionL -> BOOLEAN . opL ID
    (111) opL -> . CONJ
    (112) opL -> . DISJ

    CONJ            shift and go to state 77
    DISJ            shift and go to state 78

    opL                            shift and go to state 94

state 155

    (91) condicionL -> ID . opL ID
    (92) condicionL -> ID . opL BOOLEAN
    (105) condicionR -> ID . opR ID
    (106) condicionR -> ID . opR INT
    (107) condicionR -> ID . opR FLOAT
    (108) condicionR -> ID . opR LONG
    (111) opL -> . CONJ
    (112) opL -> . DISJ
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    CONJ            shift and go to state 77
    DISJ            shift and go to state 78
    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opL                            shift and go to state 72
    opR                            shift and go to state 73

state 156

    (94) condicionR -> INT . opR INT
    (95) condicionR -> INT . opR FLOAT
    (96) condicionR -> INT . opR LONG
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 93

state 157

    (97) condicionR -> FLOAT . opR FLOAT
    (98) condicionR -> FLOAT . opR INT
    (99) condicionR -> FLOAT . opR LONG
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 95

state 158

    (100) condicionR -> LONG . opR LONG
    (101) condicionR -> LONG . opR INT
    (102) condicionR -> LONG . opR FLOAT
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 96

state 159

    (103) condicionR -> STRING_1 . opR STRING_1
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 97

state 160

    (104) condicionR -> CHAR . opR CHAR
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 98

state 161

    (142) while -> WHILE LPAREN ID . opR INT RPAREN LCURL lineorBreak RCURL
    (113) opR -> . LANGLE
    (114) opR -> . RANGLE
    (115) opR -> . LE
    (116) opR -> . GE
    (117) opR -> . EXCL_EQ
    (118) opR -> . EXCL_EQEQ
    (119) opR -> . AS_SAFE
    (120) opR -> . EQEQ
    (121) opR -> . EQEQEQ

    LANGLE          shift and go to state 79
    RANGLE          shift and go to state 80
    LE              shift and go to state 81
    GE              shift and go to state 82
    EXCL_EQ         shift and go to state 83
    EXCL_EQEQ       shift and go to state 84
    AS_SAFE         shift and go to state 85
    EQEQ            shift and go to state 86
    EQEQEQ          shift and go to state 87

    opR                            shift and go to state 214

state 162

    (94) condicionR -> INT opR INT .

    LINEBREAK       reduce using rule 94 (condicionR -> INT opR INT .)
    $end            reduce using rule 94 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 94 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 94 (condicionR -> INT opR INT .)


state 163

    (95) condicionR -> INT opR FLOAT .

    LINEBREAK       reduce using rule 95 (condicionR -> INT opR FLOAT .)
    $end            reduce using rule 95 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 95 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 95 (condicionR -> INT opR FLOAT .)


state 164

    (96) condicionR -> INT opR LONG .

    LINEBREAK       reduce using rule 96 (condicionR -> INT opR LONG .)
    $end            reduce using rule 96 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 96 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 96 (condicionR -> INT opR LONG .)


state 165

    (90) condicionL -> BOOLEAN opL BOOLEAN .

    LINEBREAK       reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)
    $end            reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 90 (condicionL -> BOOLEAN opL BOOLEAN .)


state 166

    (93) condicionL -> BOOLEAN opL ID .

    LINEBREAK       reduce using rule 93 (condicionL -> BOOLEAN opL ID .)
    $end            reduce using rule 93 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 93 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 93 (condicionL -> BOOLEAN opL ID .)


state 167

    (97) condicionR -> FLOAT opR FLOAT .

    LINEBREAK       reduce using rule 97 (condicionR -> FLOAT opR FLOAT .)
    $end            reduce using rule 97 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 97 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 97 (condicionR -> FLOAT opR FLOAT .)


state 168

    (98) condicionR -> FLOAT opR INT .

    LINEBREAK       reduce using rule 98 (condicionR -> FLOAT opR INT .)
    $end            reduce using rule 98 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 98 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 98 (condicionR -> FLOAT opR INT .)


state 169

    (99) condicionR -> FLOAT opR LONG .

    LINEBREAK       reduce using rule 99 (condicionR -> FLOAT opR LONG .)
    $end            reduce using rule 99 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 99 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 99 (condicionR -> FLOAT opR LONG .)


state 170

    (100) condicionR -> LONG opR LONG .

    LINEBREAK       reduce using rule 100 (condicionR -> LONG opR LONG .)
    $end            reduce using rule 100 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 100 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 100 (condicionR -> LONG opR LONG .)


state 171

    (101) condicionR -> LONG opR INT .

    LINEBREAK       reduce using rule 101 (condicionR -> LONG opR INT .)
    $end            reduce using rule 101 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 101 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 101 (condicionR -> LONG opR INT .)


state 172

    (102) condicionR -> LONG opR FLOAT .

    LINEBREAK       reduce using rule 102 (condicionR -> LONG opR FLOAT .)
    $end            reduce using rule 102 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 102 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 102 (condicionR -> LONG opR FLOAT .)


state 173

    (103) condicionR -> STRING_1 opR STRING_1 .

    LINEBREAK       reduce using rule 103 (condicionR -> STRING_1 opR STRING_1 .)
    $end            reduce using rule 103 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 103 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 103 (condicionR -> STRING_1 opR STRING_1 .)


state 174

    (104) condicionR -> CHAR opR CHAR .

    LINEBREAK       reduce using rule 104 (condicionR -> CHAR opR CHAR .)
    $end            reduce using rule 104 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 104 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 104 (condicionR -> CHAR opR CHAR .)


state 175

    (35) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 215


state 176

    (124) instance_linkedlist -> LINKEDL LPAREN RPAREN .

    LINEBREAK       reduce using rule 124 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    $end            reduce using rule 124 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    RCURL           reduce using rule 124 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)


state 177

    (123) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 216


state 178

    (52) tipoDato -> TINT .

    RANGLE          reduce using rule 52 (tipoDato -> TINT .)


state 179

    (53) tipoDato -> TLONG .

    RANGLE          reduce using rule 53 (tipoDato -> TLONG .)


state 180

    (54) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 54 (tipoDato -> TFLOAT .)


state 181

    (55) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 55 (tipoDato -> TDOUBLE .)


state 182

    (56) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 56 (tipoDato -> TBOOLEAN .)


state 183

    (57) tipoDato -> TCHAR .

    RANGLE          reduce using rule 57 (tipoDato -> TCHAR .)


state 184

    (58) tipoDato -> TSTRING .

    RANGLE          reduce using rule 58 (tipoDato -> TSTRING .)


state 185

    (4) line -> blocks LINEBREAK line LINEBREAK .

    $end            reduce using rule 4 (line -> blocks LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 4 (line -> blocks LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 4 (line -> blocks LINEBREAK line LINEBREAK .)


state 186

    (33) impresion -> PRINT LPAREN expression RPAREN .

    LINEBREAK       reduce using rule 33 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 33 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 33 (impresion -> PRINT LPAREN expression RPAREN .)


state 187

    (34) impresion -> PRINTLN LPAREN expression RPAREN .

    LINEBREAK       reduce using rule 34 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 34 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 34 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 188

    (78) funcion -> FUN ID LPAREN ID . RPAREN LCURL lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN ID . RPAREN LCURL RCURL

    RPAREN          shift and go to state 217


state 189

    (77) funcion -> FUN ID LPAREN RPAREN . LCURL lineorBreak RCURL
    (80) funcion -> FUN ID LPAREN RPAREN . LCURL RCURL

    LCURL           shift and go to state 218


state 190

    (46) tipoDatoEspecifico -> TINT EQUAL . INT

    INT             shift and go to state 219


state 191

    (47) tipoDatoEspecifico -> TLONG EQUAL . LONG

    LONG            shift and go to state 220


state 192

    (48) tipoDatoEspecifico -> TFLOAT EQUAL . FLOAT

    FLOAT           shift and go to state 221


state 193

    (49) tipoDatoEspecifico -> TBOOLEAN EQUAL . BOOLEAN

    BOOLEAN         shift and go to state 222


state 194

    (50) tipoDatoEspecifico -> TCHAR EQUAL . CHAR

    CHAR            shift and go to state 223


state 195

    (51) tipoDatoEspecifico -> TSTRING EQUAL . STRING_1

    STRING_1        shift and go to state 224


state 196

    (29) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    factor                         shift and go to state 225

state 197

    (30) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (134) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 226


state 198

    (32) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 227


state 199

    (31) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 228


state 200

    (136) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 229


state 201

    (137) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 230


state 202

    (138) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 231


state 203

    (139) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 232


state 204

    (140) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 233


state 205

    (141) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 234


state 206

    (131) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 235


state 207

    (133) stack_push -> PUSH LPAREN . factor RPAREN
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1

    INT             shift and go to state 63
    FLOAT           shift and go to state 64
    LONG            shift and go to state 65
    CHAR            shift and go to state 66
    BOOLEAN         shift and go to state 67
    ID              shift and go to state 68
    STRING_1        shift and go to state 69

    factor                         shift and go to state 236

state 208

    (132) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 237


state 209

    (135) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 238


state 210

    (122) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 239


state 211

    (143) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 240


state 212

    (36) for -> FOR LPAREN ID IN . iterable RPAREN LCURL lineorBreak RCURL
    (37) iterable -> . ID
    (38) iterable -> . INT THREEDOTS INT
    (39) iterable -> . ID DOT INDICES

    ID              shift and go to state 241
    INT             shift and go to state 243

    iterable                       shift and go to state 242

state 213

    (84) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL
    (85) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL else

    LCURL           shift and go to state 244


state 214

    (142) while -> WHILE LPAREN ID opR . INT RPAREN LCURL lineorBreak RCURL

    INT             shift and go to state 245


state 215

    (35) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 246


state 216

    (123) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    LINEBREAK       reduce using rule 123 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 123 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 123 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 123 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 217

    (78) funcion -> FUN ID LPAREN ID RPAREN . LCURL lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN ID RPAREN . LCURL RCURL

    LCURL           shift and go to state 247


state 218

    (77) funcion -> FUN ID LPAREN RPAREN LCURL . lineorBreak RCURL
    (80) funcion -> FUN ID LPAREN RPAREN LCURL . RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 249
    LINEBREAK       shift and go to state 251
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 248
    line                           shift and go to state 250
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 219

    (46) tipoDatoEspecifico -> TINT EQUAL INT .

    LINEBREAK       reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    $end            reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)
    RCURL           reduce using rule 46 (tipoDatoEspecifico -> TINT EQUAL INT .)


state 220

    (47) tipoDatoEspecifico -> TLONG EQUAL LONG .

    LINEBREAK       reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    $end            reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 47 (tipoDatoEspecifico -> TLONG EQUAL LONG .)


state 221

    (48) tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .

    LINEBREAK       reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 48 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)


state 222

    (49) tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .

    LINEBREAK       reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 49 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)


state 223

    (50) tipoDatoEspecifico -> TCHAR EQUAL CHAR .

    LINEBREAK       reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 50 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)


state 224

    (51) tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .

    LINEBREAK       reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 51 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)


state 225

    (29) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 252


state 226

    (30) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (134) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for LINEBREAK resolved using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINEBREAK       reduce using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 30 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! LINEBREAK       [ reduce using rule 134 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 134 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 134 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 227

    (32) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    LINEBREAK       reduce using rule 32 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 32 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 32 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 228

    (31) queue_poll -> ID DOT POLL LPAREN RPAREN .

    LINEBREAK       reduce using rule 31 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 31 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 31 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 229

    (136) Lmetod -> FIRST LPAREN RPAREN .

    LINEBREAK       reduce using rule 136 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 136 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 136 (Lmetod -> FIRST LPAREN RPAREN .)


state 230

    (137) Lmetod -> LAST LPAREN RPAREN .

    LINEBREAK       reduce using rule 137 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 137 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 137 (Lmetod -> LAST LPAREN RPAREN .)


state 231

    (138) Lmetod -> REMOVEL LPAREN RPAREN .

    LINEBREAK       reduce using rule 138 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 138 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 138 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 232

    (139) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 253


state 233

    (140) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 254


state 234

    (141) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 255


state 235

    (131) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    LINEBREAK       reduce using rule 131 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 131 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 131 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 236

    (133) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 256


state 237

    (132) stack_pop -> POP LPAREN RPAREN .

    LINEBREAK       reduce using rule 132 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 132 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 132 (stack_pop -> POP LPAREN RPAREN .)


state 238

    (135) stack_size -> SIZE LPAREN RPAREN .

    LINEBREAK       reduce using rule 135 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 135 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 135 (stack_size -> SIZE LPAREN RPAREN .)


state 239

    (122) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN

    LINKEDL         shift and go to state 47

    instance_linkedlist            shift and go to state 257

state 240

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 258


state 241

    (37) iterable -> ID .
    (39) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 37 (iterable -> ID .)
    DOT             shift and go to state 259


state 242

    (36) for -> FOR LPAREN ID IN iterable . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 260


state 243

    (38) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 261


state 244

    (84) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL
    (85) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL else
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 251
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    condicion                      shift and go to state 7
    lineorBreak                    shift and go to state 262
    line                           shift and go to state 250
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 245

    (142) while -> WHILE LPAREN ID opR INT . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 263


state 246

    (35) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 178
    TLONG           shift and go to state 179
    TFLOAT          shift and go to state 180
    TDOUBLE         shift and go to state 181
    TBOOLEAN        shift and go to state 182
    TCHAR           shift and go to state 183
    TSTRING         shift and go to state 184

    tipoDato                       shift and go to state 264

state 247

    (78) funcion -> FUN ID LPAREN ID RPAREN LCURL . lineorBreak RCURL
    (79) funcion -> FUN ID LPAREN ID RPAREN LCURL . RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 266
    LINEBREAK       shift and go to state 251
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 265
    line                           shift and go to state 250
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 248

    (77) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 267


state 249

    (80) funcion -> FUN ID LPAREN RPAREN LCURL RCURL .

    LINEBREAK       reduce using rule 80 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    $end            reduce using rule 80 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    RCURL           reduce using rule 80 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)


state 250

    (81) lineorBreak -> line .

    RCURL           reduce using rule 81 (lineorBreak -> line .)


state 251

    (82) lineorBreak -> LINEBREAK . line LINEBREAK
    (83) lineorBreak -> LINEBREAK . line
    (5) line -> LINEBREAK .
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 5 (line -> LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 268
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 252

    (29) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    LINEBREAK       reduce using rule 29 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 29 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 29 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 253

    (139) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    LINEBREAK       reduce using rule 139 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 139 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 139 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 254

    (140) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    LINEBREAK       reduce using rule 140 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 140 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 140 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 255

    (141) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    LINEBREAK       reduce using rule 141 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 141 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 141 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 256

    (133) stack_push -> PUSH LPAREN factor RPAREN .

    LINEBREAK       reduce using rule 133 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 133 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 133 (stack_push -> PUSH LPAREN factor RPAREN .)


state 257

    (122) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    LINEBREAK       reduce using rule 122 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 122 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 122 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 258

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 269


state 259

    (39) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 270


state 260

    (36) for -> FOR LPAREN ID IN iterable RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 271


state 261

    (38) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 272


state 262

    (84) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL
    (85) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL else

    RCURL           shift and go to state 273


state 263

    (142) while -> WHILE LPAREN ID opR INT RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 274


state 264

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 275


state 265

    (78) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 276


state 266

    (79) funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .

    LINEBREAK       reduce using rule 79 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    $end            reduce using rule 79 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    RCURL           reduce using rule 79 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)


state 267

    (77) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 77 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 77 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 77 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)


state 268

    (82) lineorBreak -> LINEBREAK line . LINEBREAK
    (83) lineorBreak -> LINEBREAK line .

    LINEBREAK       shift and go to state 277
    RCURL           reduce using rule 83 (lineorBreak -> LINEBREAK line .)


state 269

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 278


state 270

    (39) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 39 (iterable -> ID DOT INDICES .)


state 271

    (36) for -> FOR LPAREN ID IN iterable RPAREN LCURL . lineorBreak RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 251
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 279
    line                           shift and go to state 250
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 272

    (38) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 38 (iterable -> INT THREEDOTS INT .)


state 273

    (84) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .
    (85) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL . else
    (86) else -> . ELSE LCURL lineorBreak RCURL

    LINEBREAK       reduce using rule 84 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 84 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 84 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    ELSE            shift and go to state 281

    else                           shift and go to state 280

state 274

    (142) while -> WHILE LPAREN ID opR INT RPAREN LCURL . lineorBreak RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 251
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 282
    line                           shift and go to state 250
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 275

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 283


state 276

    (78) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 78 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 78 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 78 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)


state 277

    (82) lineorBreak -> LINEBREAK line LINEBREAK .

    RCURL           reduce using rule 82 (lineorBreak -> LINEBREAK line LINEBREAK .)


state 278

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 284


state 279

    (36) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 285


state 280

    (85) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .

    LINEBREAK       reduce using rule 85 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    $end            reduce using rule 85 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    RCURL           reduce using rule 85 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)


state 281

    (86) else -> ELSE . LCURL lineorBreak RCURL

    LCURL           shift and go to state 286


state 282

    (142) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 287


state 283

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 288


state 284

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 289


state 285

    (36) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 36 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 36 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 36 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)


state 286

    (86) else -> ELSE LCURL . lineorBreak RCURL
    (81) lineorBreak -> . line
    (82) lineorBreak -> . LINEBREAK line LINEBREAK
    (83) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks LINEBREAK
    (3) line -> . blocks LINEBREAK line
    (4) line -> . blocks LINEBREAK line LINEBREAK
    (5) line -> . LINEBREAK
    (6) blocks -> . impresion
    (7) blocks -> . expression
    (8) blocks -> . estructurasControl
    (9) blocks -> . condicion
    (10) blocks -> . funcion
    (11) blocks -> . asignacion
    (12) blocks -> . estructurasDatos
    (33) impresion -> . PRINT LPAREN expression RPAREN
    (34) impresion -> . PRINTLN LPAREN expression RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . expression TIMES term
    (63) expression -> . expression DIVIDE term
    (64) expression -> . expression MOD term
    (65) expression -> . expression INCREMENTONE
    (66) expression -> . expression DECREMENTONE
    (67) expression -> . term
    (22) estructurasControl -> . for
    (23) estructurasControl -> . if
    (24) estructurasControl -> . while
    (87) condicion -> . condicionL
    (88) condicion -> . condicionR
    (89) condicion -> . condicionN
    (77) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (78) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (79) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (80) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (40) asignacion -> . keywordVariables asignacionSimple
    (41) asignacion -> . asignacionSimple
    (13) estructurasDatos -> . queue
    (14) estructurasDatos -> . queue_operations
    (15) estructurasDatos -> . stack
    (16) estructurasDatos -> . stack_actuar
    (17) estructurasDatos -> . instance_linkedlist
    (18) estructurasDatos -> . def_estruct_tipoDato
    (19) estructurasDatos -> . lista
    (20) estructurasDatos -> . lsimplem
    (21) estructurasDatos -> . lcomp
    (68) term -> . factor
    (69) term -> . LPAREN expression RPAREN
    (36) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (84) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (85) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (142) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (90) condicionL -> . BOOLEAN opL BOOLEAN
    (91) condicionL -> . ID opL ID
    (92) condicionL -> . ID opL BOOLEAN
    (93) condicionL -> . BOOLEAN opL ID
    (94) condicionR -> . INT opR INT
    (95) condicionR -> . INT opR FLOAT
    (96) condicionR -> . INT opR LONG
    (97) condicionR -> . FLOAT opR FLOAT
    (98) condicionR -> . FLOAT opR INT
    (99) condicionR -> . FLOAT opR LONG
    (100) condicionR -> . LONG opR LONG
    (101) condicionR -> . LONG opR INT
    (102) condicionR -> . LONG opR FLOAT
    (103) condicionR -> . STRING_1 opR STRING_1
    (104) condicionR -> . CHAR opR CHAR
    (105) condicionR -> . ID opR ID
    (106) condicionR -> . ID opR INT
    (107) condicionR -> . ID opR FLOAT
    (108) condicionR -> . ID opR LONG
    (109) condicionN -> . EXCL_WS BOOLEAN
    (110) condicionN -> . EXCL_WS ID
    (42) keywordVariables -> . VAR
    (43) keywordVariables -> . VAL
    (44) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (45) asignacionSimple -> . ID EQUAL valor
    (35) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (25) queue_operations -> . queue_add
    (26) queue_operations -> . queue_peek
    (27) queue_operations -> . queue_remove
    (28) queue_operations -> . queue_poll
    (122) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (125) stack_actuar -> . ID DOT stack_funciones
    (124) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (123) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (143) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (144) lsimplem -> . ID DOT Lmetod
    (145) lcomp -> . ID DOT Cmetod
    (70) factor -> . INT
    (71) factor -> . FLOAT
    (72) factor -> . LONG
    (73) factor -> . CHAR
    (74) factor -> . BOOLEAN
    (75) factor -> . ID
    (76) factor -> . STRING_1
    (29) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (30) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (32) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (31) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 251
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 290
    line                           shift and go to state 250
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 287

    (142) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 142 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 142 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 142 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)


state 288

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 291


state 289

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 292


state 290

    (86) else -> ELSE LCURL lineorBreak . RCURL

    RCURL           shift and go to state 293


state 291

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (52) tipoDato -> . TINT
    (53) tipoDato -> . TLONG
    (54) tipoDato -> . TFLOAT
    (55) tipoDato -> . TDOUBLE
    (56) tipoDato -> . TBOOLEAN
    (57) tipoDato -> . TCHAR
    (58) tipoDato -> . TSTRING

    TINT            shift and go to state 178
    TLONG           shift and go to state 179
    TFLOAT          shift and go to state 180
    TDOUBLE         shift and go to state 181
    TBOOLEAN        shift and go to state 182
    TCHAR           shift and go to state 183
    TSTRING         shift and go to state 184

    tipoDato                       shift and go to state 294

state 292

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 295


state 293

    (86) else -> ELSE LCURL lineorBreak RCURL .

    LINEBREAK       reduce using rule 86 (else -> ELSE LCURL lineorBreak RCURL .)
    $end            reduce using rule 86 (else -> ELSE LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 86 (else -> ELSE LCURL lineorBreak RCURL .)


state 294

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 296


state 295

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 297


state 296

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 298


state 297

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 299


state 298

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 300


state 299

    (143) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    LINEBREAK       reduce using rule 143 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 143 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 143 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 300

    (35) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    LINEBREAK       reduce using rule 35 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 35 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 35 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINEBREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 53 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 104 resolved as shift
WARNING: reduce/reduce conflict in state 226 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 226
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    FUN
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LINEBREAK
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> impresion SEMICOLON
Rule 2     line -> asignacion SEMICOLON
Rule 3     line -> expression
Rule 4     line -> estructurasControl
Rule 5     line -> estructurasDatos SEMICOLON
Rule 6     line -> condicion
Rule 7     estructurasDatos -> queue
Rule 8     estructurasDatos -> queue_operations
Rule 9     estructurasDatos -> stack
Rule 10    estructurasDatos -> stack_actuar
Rule 11    estructurasDatos -> instance_arraylist
Rule 12    estructurasDatos -> def_estruct_tipoDato
Rule 13    estructurasDatos -> lista
Rule 14    estructurasDatos -> lsimplem
Rule 15    estructurasDatos -> lcomp
Rule 16    estructurasDatos -> <empty>
Rule 17    estructurasControl -> for
Rule 18    estructurasControl -> if
Rule 19    estructurasControl -> while
Rule 20    queue_operations -> queue_add
Rule 21    queue_operations -> queue_peek
Rule 22    queue_operations -> queue_remove
Rule 23    queue_operations -> queue_poll
Rule 24    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 25    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 26    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 27    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 28    impresion -> PRINT LPAREN expression RPAREN
Rule 29    impresion -> PRINTLN LPAREN expression RPAREN
Rule 30    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 31    for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL
Rule 32    morelines -> line
Rule 33    morelines -> line morelines
Rule 34    asignacion -> keywordVariables asignacionSimple
Rule 35    asignacion -> asignacionSimple
Rule 36    keywordVariables -> VAR
Rule 37    keywordVariables -> VAL
Rule 38    asignacionSimple -> ID DOTS tipoDato EQUAL valor
Rule 39    asignacionSimple -> ID EQUAL valor
Rule 40    tipoDato -> TINT
Rule 41    tipoDato -> TLONG
Rule 42    tipoDato -> TFLOAT
Rule 43    tipoDato -> TDOUBLE
Rule 44    tipoDato -> TBOOLEAN
Rule 45    tipoDato -> TCHAR
Rule 46    tipoDato -> TSTRING
Rule 47    valor -> expression
Rule 48    expression -> expression PLUS term
Rule 49    expression -> expression MINUS term
Rule 50    expression -> expression TIMES term
Rule 51    expression -> expression DIVIDE term
Rule 52    expression -> expression MOD term
Rule 53    expression -> expression INCREMENTONE
Rule 54    expression -> expression DECREMENTONE
Rule 55    expression -> term
Rule 56    term -> factor
Rule 57    term -> LPAREN expression RPAREN
Rule 58    factor -> INT
Rule 59    factor -> FLOAT
Rule 60    factor -> LONG
Rule 61    factor -> CHAR
Rule 62    factor -> BOOLEAN
Rule 63    factor -> ID
Rule 64    factor -> STRING_1
Rule 65    if -> IF LPAREN condicion RPAREN LCURL morelines RCURL
Rule 66    if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else
Rule 67    else -> ELSE LCURL line RCURL
Rule 68    condicion -> condicionL
Rule 69    condicion -> condicionR
Rule 70    condicion -> condicionN
Rule 71    condicionL -> term opL term
Rule 72    condicionR -> term opR term
Rule 73    condicionN -> EXCL_WS term
Rule 74    opL -> CONJ
Rule 75    opL -> DISJ
Rule 76    opR -> LANGLE
Rule 77    opR -> RANGLE
Rule 78    opR -> LE
Rule 79    opR -> GE
Rule 80    opR -> EXCL_EQ
Rule 81    opR -> EXCL_EQEQ
Rule 82    opR -> AS_SAFE
Rule 83    opR -> EQEQ
Rule 84    opR -> EQEQEQ
Rule 85    stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
Rule 86    def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 87    instance_arraylist -> ARRAYLIST LPAREN RPAREN
Rule 88    stack_actuar -> ID DOT stack_funciones
Rule 89    stack_funciones -> stack_isEmpty
Rule 90    stack_funciones -> stack_push
Rule 91    stack_funciones -> stack_pop
Rule 92    stack_funciones -> stack_peek
Rule 93    stack_funciones -> stack_size
Rule 94    stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 95    stack_pop -> POP LPAREN RPAREN
Rule 96    stack_push -> PUSH LPAREN ID RPAREN
Rule 97    stack_peek -> PEEK LPAREN RPAREN
Rule 98    stack_size -> SIZE LPAREN RPAREN
Rule 99    Lmetod -> FIRST LPAREN RPAREN
Rule 100   Lmetod -> LAST LPAREN RPAREN
Rule 101   Lmetod -> REMOVEL LPAREN RPAREN
Rule 102   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 103   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 104   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 105   while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
Rule 106   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 107   lsimplem -> ID DOT Lmetod
Rule 108   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 24
ANNOTATION           : 
APPEND               : 102
ARRAYLIST            : 87
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 82
AT_NO_WS             : 
BOOLEAN              : 62
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 61
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 74
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 54
DISJ                 : 75
DIVIDE               : 51
DIVIDEIN             : 
DO                   : 
DOT                  : 24 25 26 27 88 107 108
DOTS                 : 30 38 85 106
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 67
ENUM                 : 
EQEQ                 : 83
EQEQEQ               : 84
EQUAL                : 30 38 39 85 106
EXCL_EQ              : 80
EXCL_EQEQ            : 81
EXCL_NO_WS           : 
EXCL_WS              : 73
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 99
FLOAT                : 59
FOR                  : 31
FUN                  : 
GE                   : 79
GET                  : 
HASH                 : 
ID                   : 24 25 26 27 30 31 31 38 39 63 85 88 96 105 106 107 108
IF                   : 65 66
IMPORT               : 
IN                   : 31
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 53
INCREMENTTIMES       : 
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 58 105
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 94
LANGLE               : 30 30 76 86 106 106
LAST                 : 100
LATEINIT             : 
LCURL                : 31 65 66 67 105
LE                   : 78
LINEBREAK            : 
LINKEDL              : 30 106 106
LISTOF               : 
LONG                 : 60
LPAREN               : 24 25 26 27 28 29 30 31 57 65 66 87 94 95 96 97 98 99 100 101 102 103 104 105 106
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 49
MOD                  : 52
MODIN                : 
NOINLINE             : 
OBJECT               : 102 103 106 106
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 25 97
PLUS                 : 48
POLL                 : 26
POP                  : 95
PRINT                : 28
PRINTLN              : 29
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 96
QUEST_WS             : 
QUEUE                : 30
RANGE                : 
RANGLE               : 30 30 77 86 106 106
RCURL                : 31 65 66 67 105
RECEIVER             : 
REIFIED              : 
REMOVE               : 27
REMOVEI              : 104
REMOVEL              : 101
REMOVEN              : 103
RETURN               : 
RPAREN               : 24 25 26 27 28 29 30 31 57 65 66 87 94 95 96 97 98 99 100 101 102 103 104 105 106
RSQUARE              : 
SEALED               : 
SEMICOLON            : 1 2 5
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 98
STACK                : 86
STRING_1             : 64
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 44
TCHAR                : 45
TDOUBLE              : 43
TEMPLATE             : 
TFLOAT               : 42
THIS                 : 
THROW                : 
TIMES                : 50
TINT                 : 40 104
TLONG                : 41
TRY                  : 
TSTRING              : 46
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 30 37
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 36
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 105
error                : 

Nonterminals, with rules where they appear

Cmetod               : 108
Lmetod               : 107
asignacion           : 2
asignacionSimple     : 34 35
condicion            : 6 65 66
condicionL           : 68
condicionN           : 70
condicionR           : 69
def_estruct_tipoDato : 12 85
else                 : 66
estructurasControl   : 4
estructurasDatos     : 5
expression           : 3 28 29 47 48 49 50 51 52 53 54 57
factor               : 24 56
for                  : 17
if                   : 18
impresion            : 1
instance_arraylist   : 11 85
keywordVariables     : 34 85 106
lcomp                : 15
line                 : 32 33 67 0
lista                : 13
lsimplem             : 14
morelines            : 31 33 65 66 105
opL                  : 71
opR                  : 72 105
queue                : 7
queue_add            : 20
queue_operations     : 8
queue_peek           : 21
queue_poll           : 23
queue_remove         : 22
stack                : 9
stack_actuar         : 10
stack_funciones      : 88
stack_isEmpty        : 89
stack_peek           : 92
stack_pop            : 91
stack_push           : 90
stack_size           : 93
term                 : 48 49 50 51 52 55 71 71 72 72 73
tipoDato             : 30 30 38 86
valor                : 38 39
while                : 19

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . impresion SEMICOLON
    (2) line -> . asignacion SEMICOLON
    (3) line -> . expression
    (4) line -> . estructurasControl
    (5) line -> . estructurasDatos SEMICOLON
    (6) line -> . condicion
    (28) impresion -> . PRINT LPAREN expression RPAREN
    (29) impresion -> . PRINTLN LPAREN expression RPAREN
    (34) asignacion -> . keywordVariables asignacionSimple
    (35) asignacion -> . asignacionSimple
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (17) estructurasControl -> . for
    (18) estructurasControl -> . if
    (19) estructurasControl -> . while
    (7) estructurasDatos -> . queue
    (8) estructurasDatos -> . queue_operations
    (9) estructurasDatos -> . stack
    (10) estructurasDatos -> . stack_actuar
    (11) estructurasDatos -> . instance_arraylist
    (12) estructurasDatos -> . def_estruct_tipoDato
    (13) estructurasDatos -> . lista
    (14) estructurasDatos -> . lsimplem
    (15) estructurasDatos -> . lcomp
    (16) estructurasDatos -> .
    (68) condicion -> . condicionL
    (69) condicion -> . condicionR
    (70) condicion -> . condicionN
    (36) keywordVariables -> . VAR
    (37) keywordVariables -> . VAL
    (38) asignacionSimple -> . ID DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> . ID EQUAL valor
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (31) for -> . FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL
    (65) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (66) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (105) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (30) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (20) queue_operations -> . queue_add
    (21) queue_operations -> . queue_peek
    (22) queue_operations -> . queue_remove
    (23) queue_operations -> . queue_poll
    (85) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (88) stack_actuar -> . ID DOT stack_funciones
    (87) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (86) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (106) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (107) lsimplem -> . ID DOT Lmetod
    (108) lcomp -> . ID DOT Cmetod
    (71) condicionL -> . term opL term
    (72) condicionR -> . term opR term
    (73) condicionN -> . EXCL_WS term
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1
    (24) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (25) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (27) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (26) queue_poll -> . ID DOT POLL LPAREN RPAREN

    PRINT           shift and go to state 8
    PRINTLN         shift and go to state 10
    SEMICOLON       reduce using rule 16 (estructurasDatos -> .)
    VAR             shift and go to state 29
    VAL             shift and go to state 30
    ID              shift and go to state 31
    LPAREN          shift and go to state 9
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    ARRAYLIST       shift and go to state 41
    STACK           shift and go to state 42
    EXCL_WS         shift and go to state 43
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    STRING_1        shift and go to state 48

    line                           shift and go to state 1
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    expression                     shift and go to state 4
    estructurasControl             shift and go to state 5
    estructurasDatos               shift and go to state 6
    condicion                      shift and go to state 7
    keywordVariables               shift and go to state 11
    asignacionSimple               shift and go to state 12
    term                           shift and go to state 13
    for                            shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    queue                          shift and go to state 17
    queue_operations               shift and go to state 18
    stack                          shift and go to state 19
    stack_actuar                   shift and go to state 20
    instance_arraylist             shift and go to state 21
    def_estruct_tipoDato           shift and go to state 22
    lista                          shift and go to state 23
    lsimplem                       shift and go to state 24
    lcomp                          shift and go to state 25
    condicionL                     shift and go to state 26
    condicionR                     shift and go to state 27
    condicionN                     shift and go to state 28
    factor                         shift and go to state 32
    queue_add                      shift and go to state 37
    queue_peek                     shift and go to state 38
    queue_remove                   shift and go to state 39
    queue_poll                     shift and go to state 40

state 1

    (0) S' -> line .



state 2

    (1) line -> impresion . SEMICOLON

    SEMICOLON       shift and go to state 49


state 3

    (2) line -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 50


state 4

    (3) line -> expression .
    (48) expression -> expression . PLUS term
    (49) expression -> expression . MINUS term
    (50) expression -> expression . TIMES term
    (51) expression -> expression . DIVIDE term
    (52) expression -> expression . MOD term
    (53) expression -> expression . INCREMENTONE
    (54) expression -> expression . DECREMENTONE

    $end            reduce using rule 3 (line -> expression .)
    PRINT           reduce using rule 3 (line -> expression .)
    PRINTLN         reduce using rule 3 (line -> expression .)
    VAR             reduce using rule 3 (line -> expression .)
    VAL             reduce using rule 3 (line -> expression .)
    ID              reduce using rule 3 (line -> expression .)
    LPAREN          reduce using rule 3 (line -> expression .)
    FOR             reduce using rule 3 (line -> expression .)
    IF              reduce using rule 3 (line -> expression .)
    WHILE           reduce using rule 3 (line -> expression .)
    ARRAYLIST       reduce using rule 3 (line -> expression .)
    STACK           reduce using rule 3 (line -> expression .)
    EXCL_WS         reduce using rule 3 (line -> expression .)
    INT             reduce using rule 3 (line -> expression .)
    FLOAT           reduce using rule 3 (line -> expression .)
    LONG            reduce using rule 3 (line -> expression .)
    CHAR            reduce using rule 3 (line -> expression .)
    BOOLEAN         reduce using rule 3 (line -> expression .)
    STRING_1        reduce using rule 3 (line -> expression .)
    SEMICOLON       reduce using rule 3 (line -> expression .)
    RCURL           reduce using rule 3 (line -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 5

    (4) line -> estructurasControl .

    $end            reduce using rule 4 (line -> estructurasControl .)
    PRINT           reduce using rule 4 (line -> estructurasControl .)
    PRINTLN         reduce using rule 4 (line -> estructurasControl .)
    VAR             reduce using rule 4 (line -> estructurasControl .)
    VAL             reduce using rule 4 (line -> estructurasControl .)
    ID              reduce using rule 4 (line -> estructurasControl .)
    LPAREN          reduce using rule 4 (line -> estructurasControl .)
    FOR             reduce using rule 4 (line -> estructurasControl .)
    IF              reduce using rule 4 (line -> estructurasControl .)
    WHILE           reduce using rule 4 (line -> estructurasControl .)
    ARRAYLIST       reduce using rule 4 (line -> estructurasControl .)
    STACK           reduce using rule 4 (line -> estructurasControl .)
    EXCL_WS         reduce using rule 4 (line -> estructurasControl .)
    INT             reduce using rule 4 (line -> estructurasControl .)
    FLOAT           reduce using rule 4 (line -> estructurasControl .)
    LONG            reduce using rule 4 (line -> estructurasControl .)
    CHAR            reduce using rule 4 (line -> estructurasControl .)
    BOOLEAN         reduce using rule 4 (line -> estructurasControl .)
    STRING_1        reduce using rule 4 (line -> estructurasControl .)
    SEMICOLON       reduce using rule 4 (line -> estructurasControl .)
    RCURL           reduce using rule 4 (line -> estructurasControl .)


state 6

    (5) line -> estructurasDatos . SEMICOLON

    SEMICOLON       shift and go to state 58


state 7

    (6) line -> condicion .

    $end            reduce using rule 6 (line -> condicion .)
    PRINT           reduce using rule 6 (line -> condicion .)
    PRINTLN         reduce using rule 6 (line -> condicion .)
    VAR             reduce using rule 6 (line -> condicion .)
    VAL             reduce using rule 6 (line -> condicion .)
    ID              reduce using rule 6 (line -> condicion .)
    LPAREN          reduce using rule 6 (line -> condicion .)
    FOR             reduce using rule 6 (line -> condicion .)
    IF              reduce using rule 6 (line -> condicion .)
    WHILE           reduce using rule 6 (line -> condicion .)
    ARRAYLIST       reduce using rule 6 (line -> condicion .)
    STACK           reduce using rule 6 (line -> condicion .)
    EXCL_WS         reduce using rule 6 (line -> condicion .)
    INT             reduce using rule 6 (line -> condicion .)
    FLOAT           reduce using rule 6 (line -> condicion .)
    LONG            reduce using rule 6 (line -> condicion .)
    CHAR            reduce using rule 6 (line -> condicion .)
    BOOLEAN         reduce using rule 6 (line -> condicion .)
    STRING_1        reduce using rule 6 (line -> condicion .)
    SEMICOLON       reduce using rule 6 (line -> condicion .)
    RCURL           reduce using rule 6 (line -> condicion .)


state 8

    (28) impresion -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 59


state 9

    (57) term -> LPAREN . expression RPAREN
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    expression                     shift and go to state 60
    term                           shift and go to state 61
    factor                         shift and go to state 32

state 10

    (29) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 63


state 11

    (34) asignacion -> keywordVariables . asignacionSimple
    (85) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (106) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (38) asignacionSimple -> . ID DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 65

    asignacionSimple               shift and go to state 64

state 12

    (35) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 35 (asignacion -> asignacionSimple .)


state 13

    (55) expression -> term .
    (71) condicionL -> term . opL term
    (72) condicionR -> term . opR term
    (74) opL -> . CONJ
    (75) opL -> . DISJ
    (76) opR -> . LANGLE
    (77) opR -> . RANGLE
    (78) opR -> . LE
    (79) opR -> . GE
    (80) opR -> . EXCL_EQ
    (81) opR -> . EXCL_EQEQ
    (82) opR -> . AS_SAFE
    (83) opR -> . EQEQ
    (84) opR -> . EQEQEQ

    PLUS            reduce using rule 55 (expression -> term .)
    MINUS           reduce using rule 55 (expression -> term .)
    TIMES           reduce using rule 55 (expression -> term .)
    DIVIDE          reduce using rule 55 (expression -> term .)
    MOD             reduce using rule 55 (expression -> term .)
    INCREMENTONE    reduce using rule 55 (expression -> term .)
    DECREMENTONE    reduce using rule 55 (expression -> term .)
    $end            reduce using rule 55 (expression -> term .)
    PRINT           reduce using rule 55 (expression -> term .)
    PRINTLN         reduce using rule 55 (expression -> term .)
    VAR             reduce using rule 55 (expression -> term .)
    VAL             reduce using rule 55 (expression -> term .)
    ID              reduce using rule 55 (expression -> term .)
    LPAREN          reduce using rule 55 (expression -> term .)
    FOR             reduce using rule 55 (expression -> term .)
    IF              reduce using rule 55 (expression -> term .)
    WHILE           reduce using rule 55 (expression -> term .)
    ARRAYLIST       reduce using rule 55 (expression -> term .)
    STACK           reduce using rule 55 (expression -> term .)
    EXCL_WS         reduce using rule 55 (expression -> term .)
    INT             reduce using rule 55 (expression -> term .)
    FLOAT           reduce using rule 55 (expression -> term .)
    LONG            reduce using rule 55 (expression -> term .)
    CHAR            reduce using rule 55 (expression -> term .)
    BOOLEAN         reduce using rule 55 (expression -> term .)
    STRING_1        reduce using rule 55 (expression -> term .)
    SEMICOLON       reduce using rule 55 (expression -> term .)
    RCURL           reduce using rule 55 (expression -> term .)
    CONJ            shift and go to state 68
    DISJ            shift and go to state 69
    LANGLE          shift and go to state 70
    RANGLE          shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    EXCL_EQ         shift and go to state 74
    EXCL_EQEQ       shift and go to state 75
    AS_SAFE         shift and go to state 76
    EQEQ            shift and go to state 77
    EQEQEQ          shift and go to state 78

    opL                            shift and go to state 66
    opR                            shift and go to state 67

state 14

    (17) estructurasControl -> for .

    $end            reduce using rule 17 (estructurasControl -> for .)
    PRINT           reduce using rule 17 (estructurasControl -> for .)
    PRINTLN         reduce using rule 17 (estructurasControl -> for .)
    VAR             reduce using rule 17 (estructurasControl -> for .)
    VAL             reduce using rule 17 (estructurasControl -> for .)
    ID              reduce using rule 17 (estructurasControl -> for .)
    LPAREN          reduce using rule 17 (estructurasControl -> for .)
    FOR             reduce using rule 17 (estructurasControl -> for .)
    IF              reduce using rule 17 (estructurasControl -> for .)
    WHILE           reduce using rule 17 (estructurasControl -> for .)
    ARRAYLIST       reduce using rule 17 (estructurasControl -> for .)
    STACK           reduce using rule 17 (estructurasControl -> for .)
    EXCL_WS         reduce using rule 17 (estructurasControl -> for .)
    INT             reduce using rule 17 (estructurasControl -> for .)
    FLOAT           reduce using rule 17 (estructurasControl -> for .)
    LONG            reduce using rule 17 (estructurasControl -> for .)
    CHAR            reduce using rule 17 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 17 (estructurasControl -> for .)
    STRING_1        reduce using rule 17 (estructurasControl -> for .)
    SEMICOLON       reduce using rule 17 (estructurasControl -> for .)
    RCURL           reduce using rule 17 (estructurasControl -> for .)


state 15

    (18) estructurasControl -> if .

    $end            reduce using rule 18 (estructurasControl -> if .)
    PRINT           reduce using rule 18 (estructurasControl -> if .)
    PRINTLN         reduce using rule 18 (estructurasControl -> if .)
    VAR             reduce using rule 18 (estructurasControl -> if .)
    VAL             reduce using rule 18 (estructurasControl -> if .)
    ID              reduce using rule 18 (estructurasControl -> if .)
    LPAREN          reduce using rule 18 (estructurasControl -> if .)
    FOR             reduce using rule 18 (estructurasControl -> if .)
    IF              reduce using rule 18 (estructurasControl -> if .)
    WHILE           reduce using rule 18 (estructurasControl -> if .)
    ARRAYLIST       reduce using rule 18 (estructurasControl -> if .)
    STACK           reduce using rule 18 (estructurasControl -> if .)
    EXCL_WS         reduce using rule 18 (estructurasControl -> if .)
    INT             reduce using rule 18 (estructurasControl -> if .)
    FLOAT           reduce using rule 18 (estructurasControl -> if .)
    LONG            reduce using rule 18 (estructurasControl -> if .)
    CHAR            reduce using rule 18 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 18 (estructurasControl -> if .)
    STRING_1        reduce using rule 18 (estructurasControl -> if .)
    SEMICOLON       reduce using rule 18 (estructurasControl -> if .)
    RCURL           reduce using rule 18 (estructurasControl -> if .)


state 16

    (19) estructurasControl -> while .

    $end            reduce using rule 19 (estructurasControl -> while .)
    PRINT           reduce using rule 19 (estructurasControl -> while .)
    PRINTLN         reduce using rule 19 (estructurasControl -> while .)
    VAR             reduce using rule 19 (estructurasControl -> while .)
    VAL             reduce using rule 19 (estructurasControl -> while .)
    ID              reduce using rule 19 (estructurasControl -> while .)
    LPAREN          reduce using rule 19 (estructurasControl -> while .)
    FOR             reduce using rule 19 (estructurasControl -> while .)
    IF              reduce using rule 19 (estructurasControl -> while .)
    WHILE           reduce using rule 19 (estructurasControl -> while .)
    ARRAYLIST       reduce using rule 19 (estructurasControl -> while .)
    STACK           reduce using rule 19 (estructurasControl -> while .)
    EXCL_WS         reduce using rule 19 (estructurasControl -> while .)
    INT             reduce using rule 19 (estructurasControl -> while .)
    FLOAT           reduce using rule 19 (estructurasControl -> while .)
    LONG            reduce using rule 19 (estructurasControl -> while .)
    CHAR            reduce using rule 19 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 19 (estructurasControl -> while .)
    STRING_1        reduce using rule 19 (estructurasControl -> while .)
    SEMICOLON       reduce using rule 19 (estructurasControl -> while .)
    RCURL           reduce using rule 19 (estructurasControl -> while .)


state 17

    (7) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 7 (estructurasDatos -> queue .)


state 18

    (8) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 8 (estructurasDatos -> queue_operations .)


state 19

    (9) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 9 (estructurasDatos -> stack .)


state 20

    (10) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 10 (estructurasDatos -> stack_actuar .)


state 21

    (11) estructurasDatos -> instance_arraylist .

    SEMICOLON       reduce using rule 11 (estructurasDatos -> instance_arraylist .)


state 22

    (12) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 12 (estructurasDatos -> def_estruct_tipoDato .)


state 23

    (13) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 13 (estructurasDatos -> lista .)


state 24

    (14) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 14 (estructurasDatos -> lsimplem .)


state 25

    (15) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 15 (estructurasDatos -> lcomp .)


state 26

    (68) condicion -> condicionL .

    $end            reduce using rule 68 (condicion -> condicionL .)
    RPAREN          reduce using rule 68 (condicion -> condicionL .)
    PRINT           reduce using rule 68 (condicion -> condicionL .)
    PRINTLN         reduce using rule 68 (condicion -> condicionL .)
    VAR             reduce using rule 68 (condicion -> condicionL .)
    VAL             reduce using rule 68 (condicion -> condicionL .)
    ID              reduce using rule 68 (condicion -> condicionL .)
    LPAREN          reduce using rule 68 (condicion -> condicionL .)
    FOR             reduce using rule 68 (condicion -> condicionL .)
    IF              reduce using rule 68 (condicion -> condicionL .)
    WHILE           reduce using rule 68 (condicion -> condicionL .)
    ARRAYLIST       reduce using rule 68 (condicion -> condicionL .)
    STACK           reduce using rule 68 (condicion -> condicionL .)
    EXCL_WS         reduce using rule 68 (condicion -> condicionL .)
    INT             reduce using rule 68 (condicion -> condicionL .)
    FLOAT           reduce using rule 68 (condicion -> condicionL .)
    LONG            reduce using rule 68 (condicion -> condicionL .)
    CHAR            reduce using rule 68 (condicion -> condicionL .)
    BOOLEAN         reduce using rule 68 (condicion -> condicionL .)
    STRING_1        reduce using rule 68 (condicion -> condicionL .)
    SEMICOLON       reduce using rule 68 (condicion -> condicionL .)
    RCURL           reduce using rule 68 (condicion -> condicionL .)


state 27

    (69) condicion -> condicionR .

    $end            reduce using rule 69 (condicion -> condicionR .)
    RPAREN          reduce using rule 69 (condicion -> condicionR .)
    PRINT           reduce using rule 69 (condicion -> condicionR .)
    PRINTLN         reduce using rule 69 (condicion -> condicionR .)
    VAR             reduce using rule 69 (condicion -> condicionR .)
    VAL             reduce using rule 69 (condicion -> condicionR .)
    ID              reduce using rule 69 (condicion -> condicionR .)
    LPAREN          reduce using rule 69 (condicion -> condicionR .)
    FOR             reduce using rule 69 (condicion -> condicionR .)
    IF              reduce using rule 69 (condicion -> condicionR .)
    WHILE           reduce using rule 69 (condicion -> condicionR .)
    ARRAYLIST       reduce using rule 69 (condicion -> condicionR .)
    STACK           reduce using rule 69 (condicion -> condicionR .)
    EXCL_WS         reduce using rule 69 (condicion -> condicionR .)
    INT             reduce using rule 69 (condicion -> condicionR .)
    FLOAT           reduce using rule 69 (condicion -> condicionR .)
    LONG            reduce using rule 69 (condicion -> condicionR .)
    CHAR            reduce using rule 69 (condicion -> condicionR .)
    BOOLEAN         reduce using rule 69 (condicion -> condicionR .)
    STRING_1        reduce using rule 69 (condicion -> condicionR .)
    SEMICOLON       reduce using rule 69 (condicion -> condicionR .)
    RCURL           reduce using rule 69 (condicion -> condicionR .)


state 28

    (70) condicion -> condicionN .

    $end            reduce using rule 70 (condicion -> condicionN .)
    RPAREN          reduce using rule 70 (condicion -> condicionN .)
    PRINT           reduce using rule 70 (condicion -> condicionN .)
    PRINTLN         reduce using rule 70 (condicion -> condicionN .)
    VAR             reduce using rule 70 (condicion -> condicionN .)
    VAL             reduce using rule 70 (condicion -> condicionN .)
    ID              reduce using rule 70 (condicion -> condicionN .)
    LPAREN          reduce using rule 70 (condicion -> condicionN .)
    FOR             reduce using rule 70 (condicion -> condicionN .)
    IF              reduce using rule 70 (condicion -> condicionN .)
    WHILE           reduce using rule 70 (condicion -> condicionN .)
    ARRAYLIST       reduce using rule 70 (condicion -> condicionN .)
    STACK           reduce using rule 70 (condicion -> condicionN .)
    EXCL_WS         reduce using rule 70 (condicion -> condicionN .)
    INT             reduce using rule 70 (condicion -> condicionN .)
    FLOAT           reduce using rule 70 (condicion -> condicionN .)
    LONG            reduce using rule 70 (condicion -> condicionN .)
    CHAR            reduce using rule 70 (condicion -> condicionN .)
    BOOLEAN         reduce using rule 70 (condicion -> condicionN .)
    STRING_1        reduce using rule 70 (condicion -> condicionN .)
    SEMICOLON       reduce using rule 70 (condicion -> condicionN .)
    RCURL           reduce using rule 70 (condicion -> condicionN .)


state 29

    (36) keywordVariables -> VAR .

    ID              reduce using rule 36 (keywordVariables -> VAR .)


state 30

    (37) keywordVariables -> VAL .
    (30) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 79

  ! ID              [ reduce using rule 37 (keywordVariables -> VAL .) ]


state 31

    (38) asignacionSimple -> ID . DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> ID . EQUAL valor
    (88) stack_actuar -> ID . DOT stack_funciones
    (107) lsimplem -> ID . DOT Lmetod
    (108) lcomp -> ID . DOT Cmetod
    (63) factor -> ID .
    (24) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (25) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (27) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (26) queue_poll -> ID . DOT POLL LPAREN RPAREN

    DOTS            shift and go to state 80
    EQUAL           shift and go to state 81
    DOT             shift and go to state 82
    CONJ            reduce using rule 63 (factor -> ID .)
    DISJ            reduce using rule 63 (factor -> ID .)
    LANGLE          reduce using rule 63 (factor -> ID .)
    RANGLE          reduce using rule 63 (factor -> ID .)
    LE              reduce using rule 63 (factor -> ID .)
    GE              reduce using rule 63 (factor -> ID .)
    EXCL_EQ         reduce using rule 63 (factor -> ID .)
    EXCL_EQEQ       reduce using rule 63 (factor -> ID .)
    AS_SAFE         reduce using rule 63 (factor -> ID .)
    EQEQ            reduce using rule 63 (factor -> ID .)
    EQEQEQ          reduce using rule 63 (factor -> ID .)
    PLUS            reduce using rule 63 (factor -> ID .)
    MINUS           reduce using rule 63 (factor -> ID .)
    TIMES           reduce using rule 63 (factor -> ID .)
    DIVIDE          reduce using rule 63 (factor -> ID .)
    MOD             reduce using rule 63 (factor -> ID .)
    INCREMENTONE    reduce using rule 63 (factor -> ID .)
    DECREMENTONE    reduce using rule 63 (factor -> ID .)
    $end            reduce using rule 63 (factor -> ID .)
    PRINT           reduce using rule 63 (factor -> ID .)
    PRINTLN         reduce using rule 63 (factor -> ID .)
    VAR             reduce using rule 63 (factor -> ID .)
    VAL             reduce using rule 63 (factor -> ID .)
    ID              reduce using rule 63 (factor -> ID .)
    LPAREN          reduce using rule 63 (factor -> ID .)
    FOR             reduce using rule 63 (factor -> ID .)
    IF              reduce using rule 63 (factor -> ID .)
    WHILE           reduce using rule 63 (factor -> ID .)
    ARRAYLIST       reduce using rule 63 (factor -> ID .)
    STACK           reduce using rule 63 (factor -> ID .)
    EXCL_WS         reduce using rule 63 (factor -> ID .)
    INT             reduce using rule 63 (factor -> ID .)
    FLOAT           reduce using rule 63 (factor -> ID .)
    LONG            reduce using rule 63 (factor -> ID .)
    CHAR            reduce using rule 63 (factor -> ID .)
    BOOLEAN         reduce using rule 63 (factor -> ID .)
    STRING_1        reduce using rule 63 (factor -> ID .)
    SEMICOLON       reduce using rule 63 (factor -> ID .)
    RCURL           reduce using rule 63 (factor -> ID .)


state 32

    (56) term -> factor .

    CONJ            reduce using rule 56 (term -> factor .)
    DISJ            reduce using rule 56 (term -> factor .)
    LANGLE          reduce using rule 56 (term -> factor .)
    RANGLE          reduce using rule 56 (term -> factor .)
    LE              reduce using rule 56 (term -> factor .)
    GE              reduce using rule 56 (term -> factor .)
    EXCL_EQ         reduce using rule 56 (term -> factor .)
    EXCL_EQEQ       reduce using rule 56 (term -> factor .)
    AS_SAFE         reduce using rule 56 (term -> factor .)
    EQEQ            reduce using rule 56 (term -> factor .)
    EQEQEQ          reduce using rule 56 (term -> factor .)
    PLUS            reduce using rule 56 (term -> factor .)
    MINUS           reduce using rule 56 (term -> factor .)
    TIMES           reduce using rule 56 (term -> factor .)
    DIVIDE          reduce using rule 56 (term -> factor .)
    MOD             reduce using rule 56 (term -> factor .)
    INCREMENTONE    reduce using rule 56 (term -> factor .)
    DECREMENTONE    reduce using rule 56 (term -> factor .)
    $end            reduce using rule 56 (term -> factor .)
    RPAREN          reduce using rule 56 (term -> factor .)
    PRINT           reduce using rule 56 (term -> factor .)
    PRINTLN         reduce using rule 56 (term -> factor .)
    VAR             reduce using rule 56 (term -> factor .)
    VAL             reduce using rule 56 (term -> factor .)
    ID              reduce using rule 56 (term -> factor .)
    LPAREN          reduce using rule 56 (term -> factor .)
    FOR             reduce using rule 56 (term -> factor .)
    IF              reduce using rule 56 (term -> factor .)
    WHILE           reduce using rule 56 (term -> factor .)
    ARRAYLIST       reduce using rule 56 (term -> factor .)
    STACK           reduce using rule 56 (term -> factor .)
    EXCL_WS         reduce using rule 56 (term -> factor .)
    INT             reduce using rule 56 (term -> factor .)
    FLOAT           reduce using rule 56 (term -> factor .)
    LONG            reduce using rule 56 (term -> factor .)
    CHAR            reduce using rule 56 (term -> factor .)
    BOOLEAN         reduce using rule 56 (term -> factor .)
    STRING_1        reduce using rule 56 (term -> factor .)
    SEMICOLON       reduce using rule 56 (term -> factor .)
    RCURL           reduce using rule 56 (term -> factor .)


state 33

    (31) for -> FOR . LPAREN ID IN ID RPAREN LCURL morelines RCURL

    LPAREN          shift and go to state 83


state 34

    (65) if -> IF . LPAREN condicion RPAREN LCURL morelines RCURL
    (66) if -> IF . LPAREN condicion RPAREN LCURL morelines RCURL else

    LPAREN          shift and go to state 84


state 35

    (105) while -> WHILE . LPAREN ID opR INT RPAREN LCURL morelines RCURL

    LPAREN          shift and go to state 85


state 36

    (58) factor -> INT .

    CONJ            reduce using rule 58 (factor -> INT .)
    DISJ            reduce using rule 58 (factor -> INT .)
    LANGLE          reduce using rule 58 (factor -> INT .)
    RANGLE          reduce using rule 58 (factor -> INT .)
    LE              reduce using rule 58 (factor -> INT .)
    GE              reduce using rule 58 (factor -> INT .)
    EXCL_EQ         reduce using rule 58 (factor -> INT .)
    EXCL_EQEQ       reduce using rule 58 (factor -> INT .)
    AS_SAFE         reduce using rule 58 (factor -> INT .)
    EQEQ            reduce using rule 58 (factor -> INT .)
    EQEQEQ          reduce using rule 58 (factor -> INT .)
    PLUS            reduce using rule 58 (factor -> INT .)
    MINUS           reduce using rule 58 (factor -> INT .)
    TIMES           reduce using rule 58 (factor -> INT .)
    DIVIDE          reduce using rule 58 (factor -> INT .)
    MOD             reduce using rule 58 (factor -> INT .)
    INCREMENTONE    reduce using rule 58 (factor -> INT .)
    DECREMENTONE    reduce using rule 58 (factor -> INT .)
    $end            reduce using rule 58 (factor -> INT .)
    RPAREN          reduce using rule 58 (factor -> INT .)
    PRINT           reduce using rule 58 (factor -> INT .)
    PRINTLN         reduce using rule 58 (factor -> INT .)
    VAR             reduce using rule 58 (factor -> INT .)
    VAL             reduce using rule 58 (factor -> INT .)
    ID              reduce using rule 58 (factor -> INT .)
    LPAREN          reduce using rule 58 (factor -> INT .)
    FOR             reduce using rule 58 (factor -> INT .)
    IF              reduce using rule 58 (factor -> INT .)
    WHILE           reduce using rule 58 (factor -> INT .)
    ARRAYLIST       reduce using rule 58 (factor -> INT .)
    STACK           reduce using rule 58 (factor -> INT .)
    EXCL_WS         reduce using rule 58 (factor -> INT .)
    INT             reduce using rule 58 (factor -> INT .)
    FLOAT           reduce using rule 58 (factor -> INT .)
    LONG            reduce using rule 58 (factor -> INT .)
    CHAR            reduce using rule 58 (factor -> INT .)
    BOOLEAN         reduce using rule 58 (factor -> INT .)
    STRING_1        reduce using rule 58 (factor -> INT .)
    SEMICOLON       reduce using rule 58 (factor -> INT .)
    RCURL           reduce using rule 58 (factor -> INT .)


state 37

    (20) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 20 (queue_operations -> queue_add .)


state 38

    (21) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 21 (queue_operations -> queue_peek .)


state 39

    (22) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 22 (queue_operations -> queue_remove .)


state 40

    (23) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 23 (queue_operations -> queue_poll .)


state 41

    (87) instance_arraylist -> ARRAYLIST . LPAREN RPAREN

    LPAREN          shift and go to state 86


state 42

    (86) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 87


state 43

    (73) condicionN -> EXCL_WS . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 88
    factor                         shift and go to state 32

state 44

    (59) factor -> FLOAT .

    CONJ            reduce using rule 59 (factor -> FLOAT .)
    DISJ            reduce using rule 59 (factor -> FLOAT .)
    LANGLE          reduce using rule 59 (factor -> FLOAT .)
    RANGLE          reduce using rule 59 (factor -> FLOAT .)
    LE              reduce using rule 59 (factor -> FLOAT .)
    GE              reduce using rule 59 (factor -> FLOAT .)
    EXCL_EQ         reduce using rule 59 (factor -> FLOAT .)
    EXCL_EQEQ       reduce using rule 59 (factor -> FLOAT .)
    AS_SAFE         reduce using rule 59 (factor -> FLOAT .)
    EQEQ            reduce using rule 59 (factor -> FLOAT .)
    EQEQEQ          reduce using rule 59 (factor -> FLOAT .)
    PLUS            reduce using rule 59 (factor -> FLOAT .)
    MINUS           reduce using rule 59 (factor -> FLOAT .)
    TIMES           reduce using rule 59 (factor -> FLOAT .)
    DIVIDE          reduce using rule 59 (factor -> FLOAT .)
    MOD             reduce using rule 59 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 59 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 59 (factor -> FLOAT .)
    $end            reduce using rule 59 (factor -> FLOAT .)
    RPAREN          reduce using rule 59 (factor -> FLOAT .)
    PRINT           reduce using rule 59 (factor -> FLOAT .)
    PRINTLN         reduce using rule 59 (factor -> FLOAT .)
    VAR             reduce using rule 59 (factor -> FLOAT .)
    VAL             reduce using rule 59 (factor -> FLOAT .)
    ID              reduce using rule 59 (factor -> FLOAT .)
    LPAREN          reduce using rule 59 (factor -> FLOAT .)
    FOR             reduce using rule 59 (factor -> FLOAT .)
    IF              reduce using rule 59 (factor -> FLOAT .)
    WHILE           reduce using rule 59 (factor -> FLOAT .)
    ARRAYLIST       reduce using rule 59 (factor -> FLOAT .)
    STACK           reduce using rule 59 (factor -> FLOAT .)
    EXCL_WS         reduce using rule 59 (factor -> FLOAT .)
    INT             reduce using rule 59 (factor -> FLOAT .)
    FLOAT           reduce using rule 59 (factor -> FLOAT .)
    LONG            reduce using rule 59 (factor -> FLOAT .)
    CHAR            reduce using rule 59 (factor -> FLOAT .)
    BOOLEAN         reduce using rule 59 (factor -> FLOAT .)
    STRING_1        reduce using rule 59 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 59 (factor -> FLOAT .)
    RCURL           reduce using rule 59 (factor -> FLOAT .)


state 45

    (60) factor -> LONG .

    CONJ            reduce using rule 60 (factor -> LONG .)
    DISJ            reduce using rule 60 (factor -> LONG .)
    LANGLE          reduce using rule 60 (factor -> LONG .)
    RANGLE          reduce using rule 60 (factor -> LONG .)
    LE              reduce using rule 60 (factor -> LONG .)
    GE              reduce using rule 60 (factor -> LONG .)
    EXCL_EQ         reduce using rule 60 (factor -> LONG .)
    EXCL_EQEQ       reduce using rule 60 (factor -> LONG .)
    AS_SAFE         reduce using rule 60 (factor -> LONG .)
    EQEQ            reduce using rule 60 (factor -> LONG .)
    EQEQEQ          reduce using rule 60 (factor -> LONG .)
    PLUS            reduce using rule 60 (factor -> LONG .)
    MINUS           reduce using rule 60 (factor -> LONG .)
    TIMES           reduce using rule 60 (factor -> LONG .)
    DIVIDE          reduce using rule 60 (factor -> LONG .)
    MOD             reduce using rule 60 (factor -> LONG .)
    INCREMENTONE    reduce using rule 60 (factor -> LONG .)
    DECREMENTONE    reduce using rule 60 (factor -> LONG .)
    $end            reduce using rule 60 (factor -> LONG .)
    RPAREN          reduce using rule 60 (factor -> LONG .)
    PRINT           reduce using rule 60 (factor -> LONG .)
    PRINTLN         reduce using rule 60 (factor -> LONG .)
    VAR             reduce using rule 60 (factor -> LONG .)
    VAL             reduce using rule 60 (factor -> LONG .)
    ID              reduce using rule 60 (factor -> LONG .)
    LPAREN          reduce using rule 60 (factor -> LONG .)
    FOR             reduce using rule 60 (factor -> LONG .)
    IF              reduce using rule 60 (factor -> LONG .)
    WHILE           reduce using rule 60 (factor -> LONG .)
    ARRAYLIST       reduce using rule 60 (factor -> LONG .)
    STACK           reduce using rule 60 (factor -> LONG .)
    EXCL_WS         reduce using rule 60 (factor -> LONG .)
    INT             reduce using rule 60 (factor -> LONG .)
    FLOAT           reduce using rule 60 (factor -> LONG .)
    LONG            reduce using rule 60 (factor -> LONG .)
    CHAR            reduce using rule 60 (factor -> LONG .)
    BOOLEAN         reduce using rule 60 (factor -> LONG .)
    STRING_1        reduce using rule 60 (factor -> LONG .)
    SEMICOLON       reduce using rule 60 (factor -> LONG .)
    RCURL           reduce using rule 60 (factor -> LONG .)


state 46

    (61) factor -> CHAR .

    CONJ            reduce using rule 61 (factor -> CHAR .)
    DISJ            reduce using rule 61 (factor -> CHAR .)
    LANGLE          reduce using rule 61 (factor -> CHAR .)
    RANGLE          reduce using rule 61 (factor -> CHAR .)
    LE              reduce using rule 61 (factor -> CHAR .)
    GE              reduce using rule 61 (factor -> CHAR .)
    EXCL_EQ         reduce using rule 61 (factor -> CHAR .)
    EXCL_EQEQ       reduce using rule 61 (factor -> CHAR .)
    AS_SAFE         reduce using rule 61 (factor -> CHAR .)
    EQEQ            reduce using rule 61 (factor -> CHAR .)
    EQEQEQ          reduce using rule 61 (factor -> CHAR .)
    PLUS            reduce using rule 61 (factor -> CHAR .)
    MINUS           reduce using rule 61 (factor -> CHAR .)
    TIMES           reduce using rule 61 (factor -> CHAR .)
    DIVIDE          reduce using rule 61 (factor -> CHAR .)
    MOD             reduce using rule 61 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 61 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 61 (factor -> CHAR .)
    $end            reduce using rule 61 (factor -> CHAR .)
    RPAREN          reduce using rule 61 (factor -> CHAR .)
    PRINT           reduce using rule 61 (factor -> CHAR .)
    PRINTLN         reduce using rule 61 (factor -> CHAR .)
    VAR             reduce using rule 61 (factor -> CHAR .)
    VAL             reduce using rule 61 (factor -> CHAR .)
    ID              reduce using rule 61 (factor -> CHAR .)
    LPAREN          reduce using rule 61 (factor -> CHAR .)
    FOR             reduce using rule 61 (factor -> CHAR .)
    IF              reduce using rule 61 (factor -> CHAR .)
    WHILE           reduce using rule 61 (factor -> CHAR .)
    ARRAYLIST       reduce using rule 61 (factor -> CHAR .)
    STACK           reduce using rule 61 (factor -> CHAR .)
    EXCL_WS         reduce using rule 61 (factor -> CHAR .)
    INT             reduce using rule 61 (factor -> CHAR .)
    FLOAT           reduce using rule 61 (factor -> CHAR .)
    LONG            reduce using rule 61 (factor -> CHAR .)
    CHAR            reduce using rule 61 (factor -> CHAR .)
    BOOLEAN         reduce using rule 61 (factor -> CHAR .)
    STRING_1        reduce using rule 61 (factor -> CHAR .)
    SEMICOLON       reduce using rule 61 (factor -> CHAR .)
    RCURL           reduce using rule 61 (factor -> CHAR .)


state 47

    (62) factor -> BOOLEAN .

    CONJ            reduce using rule 62 (factor -> BOOLEAN .)
    DISJ            reduce using rule 62 (factor -> BOOLEAN .)
    LANGLE          reduce using rule 62 (factor -> BOOLEAN .)
    RANGLE          reduce using rule 62 (factor -> BOOLEAN .)
    LE              reduce using rule 62 (factor -> BOOLEAN .)
    GE              reduce using rule 62 (factor -> BOOLEAN .)
    EXCL_EQ         reduce using rule 62 (factor -> BOOLEAN .)
    EXCL_EQEQ       reduce using rule 62 (factor -> BOOLEAN .)
    AS_SAFE         reduce using rule 62 (factor -> BOOLEAN .)
    EQEQ            reduce using rule 62 (factor -> BOOLEAN .)
    EQEQEQ          reduce using rule 62 (factor -> BOOLEAN .)
    PLUS            reduce using rule 62 (factor -> BOOLEAN .)
    MINUS           reduce using rule 62 (factor -> BOOLEAN .)
    TIMES           reduce using rule 62 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 62 (factor -> BOOLEAN .)
    MOD             reduce using rule 62 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 62 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 62 (factor -> BOOLEAN .)
    $end            reduce using rule 62 (factor -> BOOLEAN .)
    RPAREN          reduce using rule 62 (factor -> BOOLEAN .)
    PRINT           reduce using rule 62 (factor -> BOOLEAN .)
    PRINTLN         reduce using rule 62 (factor -> BOOLEAN .)
    VAR             reduce using rule 62 (factor -> BOOLEAN .)
    VAL             reduce using rule 62 (factor -> BOOLEAN .)
    ID              reduce using rule 62 (factor -> BOOLEAN .)
    LPAREN          reduce using rule 62 (factor -> BOOLEAN .)
    FOR             reduce using rule 62 (factor -> BOOLEAN .)
    IF              reduce using rule 62 (factor -> BOOLEAN .)
    WHILE           reduce using rule 62 (factor -> BOOLEAN .)
    ARRAYLIST       reduce using rule 62 (factor -> BOOLEAN .)
    STACK           reduce using rule 62 (factor -> BOOLEAN .)
    EXCL_WS         reduce using rule 62 (factor -> BOOLEAN .)
    INT             reduce using rule 62 (factor -> BOOLEAN .)
    FLOAT           reduce using rule 62 (factor -> BOOLEAN .)
    LONG            reduce using rule 62 (factor -> BOOLEAN .)
    CHAR            reduce using rule 62 (factor -> BOOLEAN .)
    BOOLEAN         reduce using rule 62 (factor -> BOOLEAN .)
    STRING_1        reduce using rule 62 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 62 (factor -> BOOLEAN .)
    RCURL           reduce using rule 62 (factor -> BOOLEAN .)


state 48

    (64) factor -> STRING_1 .

    CONJ            reduce using rule 64 (factor -> STRING_1 .)
    DISJ            reduce using rule 64 (factor -> STRING_1 .)
    LANGLE          reduce using rule 64 (factor -> STRING_1 .)
    RANGLE          reduce using rule 64 (factor -> STRING_1 .)
    LE              reduce using rule 64 (factor -> STRING_1 .)
    GE              reduce using rule 64 (factor -> STRING_1 .)
    EXCL_EQ         reduce using rule 64 (factor -> STRING_1 .)
    EXCL_EQEQ       reduce using rule 64 (factor -> STRING_1 .)
    AS_SAFE         reduce using rule 64 (factor -> STRING_1 .)
    EQEQ            reduce using rule 64 (factor -> STRING_1 .)
    EQEQEQ          reduce using rule 64 (factor -> STRING_1 .)
    PLUS            reduce using rule 64 (factor -> STRING_1 .)
    MINUS           reduce using rule 64 (factor -> STRING_1 .)
    TIMES           reduce using rule 64 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 64 (factor -> STRING_1 .)
    MOD             reduce using rule 64 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 64 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 64 (factor -> STRING_1 .)
    $end            reduce using rule 64 (factor -> STRING_1 .)
    RPAREN          reduce using rule 64 (factor -> STRING_1 .)
    PRINT           reduce using rule 64 (factor -> STRING_1 .)
    PRINTLN         reduce using rule 64 (factor -> STRING_1 .)
    VAR             reduce using rule 64 (factor -> STRING_1 .)
    VAL             reduce using rule 64 (factor -> STRING_1 .)
    ID              reduce using rule 64 (factor -> STRING_1 .)
    LPAREN          reduce using rule 64 (factor -> STRING_1 .)
    FOR             reduce using rule 64 (factor -> STRING_1 .)
    IF              reduce using rule 64 (factor -> STRING_1 .)
    WHILE           reduce using rule 64 (factor -> STRING_1 .)
    ARRAYLIST       reduce using rule 64 (factor -> STRING_1 .)
    STACK           reduce using rule 64 (factor -> STRING_1 .)
    EXCL_WS         reduce using rule 64 (factor -> STRING_1 .)
    INT             reduce using rule 64 (factor -> STRING_1 .)
    FLOAT           reduce using rule 64 (factor -> STRING_1 .)
    LONG            reduce using rule 64 (factor -> STRING_1 .)
    CHAR            reduce using rule 64 (factor -> STRING_1 .)
    BOOLEAN         reduce using rule 64 (factor -> STRING_1 .)
    STRING_1        reduce using rule 64 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 64 (factor -> STRING_1 .)
    RCURL           reduce using rule 64 (factor -> STRING_1 .)


state 49

    (1) line -> impresion SEMICOLON .

    $end            reduce using rule 1 (line -> impresion SEMICOLON .)
    PRINT           reduce using rule 1 (line -> impresion SEMICOLON .)
    PRINTLN         reduce using rule 1 (line -> impresion SEMICOLON .)
    VAR             reduce using rule 1 (line -> impresion SEMICOLON .)
    VAL             reduce using rule 1 (line -> impresion SEMICOLON .)
    ID              reduce using rule 1 (line -> impresion SEMICOLON .)
    LPAREN          reduce using rule 1 (line -> impresion SEMICOLON .)
    FOR             reduce using rule 1 (line -> impresion SEMICOLON .)
    IF              reduce using rule 1 (line -> impresion SEMICOLON .)
    WHILE           reduce using rule 1 (line -> impresion SEMICOLON .)
    ARRAYLIST       reduce using rule 1 (line -> impresion SEMICOLON .)
    STACK           reduce using rule 1 (line -> impresion SEMICOLON .)
    EXCL_WS         reduce using rule 1 (line -> impresion SEMICOLON .)
    INT             reduce using rule 1 (line -> impresion SEMICOLON .)
    FLOAT           reduce using rule 1 (line -> impresion SEMICOLON .)
    LONG            reduce using rule 1 (line -> impresion SEMICOLON .)
    CHAR            reduce using rule 1 (line -> impresion SEMICOLON .)
    BOOLEAN         reduce using rule 1 (line -> impresion SEMICOLON .)
    STRING_1        reduce using rule 1 (line -> impresion SEMICOLON .)
    SEMICOLON       reduce using rule 1 (line -> impresion SEMICOLON .)
    RCURL           reduce using rule 1 (line -> impresion SEMICOLON .)


state 50

    (2) line -> asignacion SEMICOLON .

    $end            reduce using rule 2 (line -> asignacion SEMICOLON .)
    PRINT           reduce using rule 2 (line -> asignacion SEMICOLON .)
    PRINTLN         reduce using rule 2 (line -> asignacion SEMICOLON .)
    VAR             reduce using rule 2 (line -> asignacion SEMICOLON .)
    VAL             reduce using rule 2 (line -> asignacion SEMICOLON .)
    ID              reduce using rule 2 (line -> asignacion SEMICOLON .)
    LPAREN          reduce using rule 2 (line -> asignacion SEMICOLON .)
    FOR             reduce using rule 2 (line -> asignacion SEMICOLON .)
    IF              reduce using rule 2 (line -> asignacion SEMICOLON .)
    WHILE           reduce using rule 2 (line -> asignacion SEMICOLON .)
    ARRAYLIST       reduce using rule 2 (line -> asignacion SEMICOLON .)
    STACK           reduce using rule 2 (line -> asignacion SEMICOLON .)
    EXCL_WS         reduce using rule 2 (line -> asignacion SEMICOLON .)
    INT             reduce using rule 2 (line -> asignacion SEMICOLON .)
    FLOAT           reduce using rule 2 (line -> asignacion SEMICOLON .)
    LONG            reduce using rule 2 (line -> asignacion SEMICOLON .)
    CHAR            reduce using rule 2 (line -> asignacion SEMICOLON .)
    BOOLEAN         reduce using rule 2 (line -> asignacion SEMICOLON .)
    STRING_1        reduce using rule 2 (line -> asignacion SEMICOLON .)
    SEMICOLON       reduce using rule 2 (line -> asignacion SEMICOLON .)
    RCURL           reduce using rule 2 (line -> asignacion SEMICOLON .)


state 51

    (48) expression -> expression PLUS . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 89
    factor                         shift and go to state 32

state 52

    (49) expression -> expression MINUS . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 90
    factor                         shift and go to state 32

state 53

    (50) expression -> expression TIMES . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 91
    factor                         shift and go to state 32

state 54

    (51) expression -> expression DIVIDE . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 92
    factor                         shift and go to state 32

state 55

    (52) expression -> expression MOD . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 93
    factor                         shift and go to state 32

state 56

    (53) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 53 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 53 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 53 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 53 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 53 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 53 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 53 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 53 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 53 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 53 (expression -> expression INCREMENTONE .)
    PRINT           reduce using rule 53 (expression -> expression INCREMENTONE .)
    PRINTLN         reduce using rule 53 (expression -> expression INCREMENTONE .)
    VAR             reduce using rule 53 (expression -> expression INCREMENTONE .)
    VAL             reduce using rule 53 (expression -> expression INCREMENTONE .)
    ID              reduce using rule 53 (expression -> expression INCREMENTONE .)
    LPAREN          reduce using rule 53 (expression -> expression INCREMENTONE .)
    FOR             reduce using rule 53 (expression -> expression INCREMENTONE .)
    IF              reduce using rule 53 (expression -> expression INCREMENTONE .)
    WHILE           reduce using rule 53 (expression -> expression INCREMENTONE .)
    ARRAYLIST       reduce using rule 53 (expression -> expression INCREMENTONE .)
    STACK           reduce using rule 53 (expression -> expression INCREMENTONE .)
    EXCL_WS         reduce using rule 53 (expression -> expression INCREMENTONE .)
    INT             reduce using rule 53 (expression -> expression INCREMENTONE .)
    FLOAT           reduce using rule 53 (expression -> expression INCREMENTONE .)
    LONG            reduce using rule 53 (expression -> expression INCREMENTONE .)
    CHAR            reduce using rule 53 (expression -> expression INCREMENTONE .)
    BOOLEAN         reduce using rule 53 (expression -> expression INCREMENTONE .)
    STRING_1        reduce using rule 53 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 53 (expression -> expression INCREMENTONE .)


state 57

    (54) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 54 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 54 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 54 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 54 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 54 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 54 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 54 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 54 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 54 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 54 (expression -> expression DECREMENTONE .)
    PRINT           reduce using rule 54 (expression -> expression DECREMENTONE .)
    PRINTLN         reduce using rule 54 (expression -> expression DECREMENTONE .)
    VAR             reduce using rule 54 (expression -> expression DECREMENTONE .)
    VAL             reduce using rule 54 (expression -> expression DECREMENTONE .)
    ID              reduce using rule 54 (expression -> expression DECREMENTONE .)
    LPAREN          reduce using rule 54 (expression -> expression DECREMENTONE .)
    FOR             reduce using rule 54 (expression -> expression DECREMENTONE .)
    IF              reduce using rule 54 (expression -> expression DECREMENTONE .)
    WHILE           reduce using rule 54 (expression -> expression DECREMENTONE .)
    ARRAYLIST       reduce using rule 54 (expression -> expression DECREMENTONE .)
    STACK           reduce using rule 54 (expression -> expression DECREMENTONE .)
    EXCL_WS         reduce using rule 54 (expression -> expression DECREMENTONE .)
    INT             reduce using rule 54 (expression -> expression DECREMENTONE .)
    FLOAT           reduce using rule 54 (expression -> expression DECREMENTONE .)
    LONG            reduce using rule 54 (expression -> expression DECREMENTONE .)
    CHAR            reduce using rule 54 (expression -> expression DECREMENTONE .)
    BOOLEAN         reduce using rule 54 (expression -> expression DECREMENTONE .)
    STRING_1        reduce using rule 54 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 54 (expression -> expression DECREMENTONE .)


state 58

    (5) line -> estructurasDatos SEMICOLON .

    $end            reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    PRINT           reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    PRINTLN         reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    VAR             reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    VAL             reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    ID              reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    LPAREN          reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    FOR             reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    IF              reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    WHILE           reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    ARRAYLIST       reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    STACK           reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    EXCL_WS         reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    INT             reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    FLOAT           reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    LONG            reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    CHAR            reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    BOOLEAN         reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    STRING_1        reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    SEMICOLON       reduce using rule 5 (line -> estructurasDatos SEMICOLON .)
    RCURL           reduce using rule 5 (line -> estructurasDatos SEMICOLON .)


state 59

    (28) impresion -> PRINT LPAREN . expression RPAREN
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    expression                     shift and go to state 94
    term                           shift and go to state 61
    factor                         shift and go to state 32

state 60

    (57) term -> LPAREN expression . RPAREN
    (48) expression -> expression . PLUS term
    (49) expression -> expression . MINUS term
    (50) expression -> expression . TIMES term
    (51) expression -> expression . DIVIDE term
    (52) expression -> expression . MOD term
    (53) expression -> expression . INCREMENTONE
    (54) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 61

    (55) expression -> term .

    RPAREN          reduce using rule 55 (expression -> term .)
    PLUS            reduce using rule 55 (expression -> term .)
    MINUS           reduce using rule 55 (expression -> term .)
    TIMES           reduce using rule 55 (expression -> term .)
    DIVIDE          reduce using rule 55 (expression -> term .)
    MOD             reduce using rule 55 (expression -> term .)
    INCREMENTONE    reduce using rule 55 (expression -> term .)
    DECREMENTONE    reduce using rule 55 (expression -> term .)
    SEMICOLON       reduce using rule 55 (expression -> term .)


state 62

    (63) factor -> ID .

    RPAREN          reduce using rule 63 (factor -> ID .)
    PLUS            reduce using rule 63 (factor -> ID .)
    MINUS           reduce using rule 63 (factor -> ID .)
    TIMES           reduce using rule 63 (factor -> ID .)
    DIVIDE          reduce using rule 63 (factor -> ID .)
    MOD             reduce using rule 63 (factor -> ID .)
    INCREMENTONE    reduce using rule 63 (factor -> ID .)
    DECREMENTONE    reduce using rule 63 (factor -> ID .)
    $end            reduce using rule 63 (factor -> ID .)
    PRINT           reduce using rule 63 (factor -> ID .)
    PRINTLN         reduce using rule 63 (factor -> ID .)
    VAR             reduce using rule 63 (factor -> ID .)
    VAL             reduce using rule 63 (factor -> ID .)
    ID              reduce using rule 63 (factor -> ID .)
    LPAREN          reduce using rule 63 (factor -> ID .)
    FOR             reduce using rule 63 (factor -> ID .)
    IF              reduce using rule 63 (factor -> ID .)
    WHILE           reduce using rule 63 (factor -> ID .)
    ARRAYLIST       reduce using rule 63 (factor -> ID .)
    STACK           reduce using rule 63 (factor -> ID .)
    EXCL_WS         reduce using rule 63 (factor -> ID .)
    INT             reduce using rule 63 (factor -> ID .)
    FLOAT           reduce using rule 63 (factor -> ID .)
    LONG            reduce using rule 63 (factor -> ID .)
    CHAR            reduce using rule 63 (factor -> ID .)
    BOOLEAN         reduce using rule 63 (factor -> ID .)
    STRING_1        reduce using rule 63 (factor -> ID .)
    SEMICOLON       reduce using rule 63 (factor -> ID .)
    RCURL           reduce using rule 63 (factor -> ID .)
    CONJ            reduce using rule 63 (factor -> ID .)
    DISJ            reduce using rule 63 (factor -> ID .)
    LANGLE          reduce using rule 63 (factor -> ID .)
    RANGLE          reduce using rule 63 (factor -> ID .)
    LE              reduce using rule 63 (factor -> ID .)
    GE              reduce using rule 63 (factor -> ID .)
    EXCL_EQ         reduce using rule 63 (factor -> ID .)
    EXCL_EQEQ       reduce using rule 63 (factor -> ID .)
    AS_SAFE         reduce using rule 63 (factor -> ID .)
    EQEQ            reduce using rule 63 (factor -> ID .)
    EQEQEQ          reduce using rule 63 (factor -> ID .)


state 63

    (29) impresion -> PRINTLN LPAREN . expression RPAREN
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    expression                     shift and go to state 96
    term                           shift and go to state 61
    factor                         shift and go to state 32

state 64

    (34) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 34 (asignacion -> keywordVariables asignacionSimple .)


state 65

    (85) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (106) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (38) asignacionSimple -> ID . DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 97
    EQUAL           shift and go to state 81


state 66

    (71) condicionL -> term opL . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 98
    factor                         shift and go to state 32

state 67

    (72) condicionR -> term opR . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    term                           shift and go to state 99
    factor                         shift and go to state 32

state 68

    (74) opL -> CONJ .

    LPAREN          reduce using rule 74 (opL -> CONJ .)
    INT             reduce using rule 74 (opL -> CONJ .)
    FLOAT           reduce using rule 74 (opL -> CONJ .)
    LONG            reduce using rule 74 (opL -> CONJ .)
    CHAR            reduce using rule 74 (opL -> CONJ .)
    BOOLEAN         reduce using rule 74 (opL -> CONJ .)
    ID              reduce using rule 74 (opL -> CONJ .)
    STRING_1        reduce using rule 74 (opL -> CONJ .)


state 69

    (75) opL -> DISJ .

    LPAREN          reduce using rule 75 (opL -> DISJ .)
    INT             reduce using rule 75 (opL -> DISJ .)
    FLOAT           reduce using rule 75 (opL -> DISJ .)
    LONG            reduce using rule 75 (opL -> DISJ .)
    CHAR            reduce using rule 75 (opL -> DISJ .)
    BOOLEAN         reduce using rule 75 (opL -> DISJ .)
    ID              reduce using rule 75 (opL -> DISJ .)
    STRING_1        reduce using rule 75 (opL -> DISJ .)


state 70

    (76) opR -> LANGLE .

    LPAREN          reduce using rule 76 (opR -> LANGLE .)
    INT             reduce using rule 76 (opR -> LANGLE .)
    FLOAT           reduce using rule 76 (opR -> LANGLE .)
    LONG            reduce using rule 76 (opR -> LANGLE .)
    CHAR            reduce using rule 76 (opR -> LANGLE .)
    BOOLEAN         reduce using rule 76 (opR -> LANGLE .)
    ID              reduce using rule 76 (opR -> LANGLE .)
    STRING_1        reduce using rule 76 (opR -> LANGLE .)


state 71

    (77) opR -> RANGLE .

    LPAREN          reduce using rule 77 (opR -> RANGLE .)
    INT             reduce using rule 77 (opR -> RANGLE .)
    FLOAT           reduce using rule 77 (opR -> RANGLE .)
    LONG            reduce using rule 77 (opR -> RANGLE .)
    CHAR            reduce using rule 77 (opR -> RANGLE .)
    BOOLEAN         reduce using rule 77 (opR -> RANGLE .)
    ID              reduce using rule 77 (opR -> RANGLE .)
    STRING_1        reduce using rule 77 (opR -> RANGLE .)


state 72

    (78) opR -> LE .

    LPAREN          reduce using rule 78 (opR -> LE .)
    INT             reduce using rule 78 (opR -> LE .)
    FLOAT           reduce using rule 78 (opR -> LE .)
    LONG            reduce using rule 78 (opR -> LE .)
    CHAR            reduce using rule 78 (opR -> LE .)
    BOOLEAN         reduce using rule 78 (opR -> LE .)
    ID              reduce using rule 78 (opR -> LE .)
    STRING_1        reduce using rule 78 (opR -> LE .)


state 73

    (79) opR -> GE .

    LPAREN          reduce using rule 79 (opR -> GE .)
    INT             reduce using rule 79 (opR -> GE .)
    FLOAT           reduce using rule 79 (opR -> GE .)
    LONG            reduce using rule 79 (opR -> GE .)
    CHAR            reduce using rule 79 (opR -> GE .)
    BOOLEAN         reduce using rule 79 (opR -> GE .)
    ID              reduce using rule 79 (opR -> GE .)
    STRING_1        reduce using rule 79 (opR -> GE .)


state 74

    (80) opR -> EXCL_EQ .

    LPAREN          reduce using rule 80 (opR -> EXCL_EQ .)
    INT             reduce using rule 80 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 80 (opR -> EXCL_EQ .)
    LONG            reduce using rule 80 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 80 (opR -> EXCL_EQ .)
    BOOLEAN         reduce using rule 80 (opR -> EXCL_EQ .)
    ID              reduce using rule 80 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 80 (opR -> EXCL_EQ .)


state 75

    (81) opR -> EXCL_EQEQ .

    LPAREN          reduce using rule 81 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 81 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 81 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 81 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 81 (opR -> EXCL_EQEQ .)
    BOOLEAN         reduce using rule 81 (opR -> EXCL_EQEQ .)
    ID              reduce using rule 81 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 81 (opR -> EXCL_EQEQ .)


state 76

    (82) opR -> AS_SAFE .

    LPAREN          reduce using rule 82 (opR -> AS_SAFE .)
    INT             reduce using rule 82 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 82 (opR -> AS_SAFE .)
    LONG            reduce using rule 82 (opR -> AS_SAFE .)
    CHAR            reduce using rule 82 (opR -> AS_SAFE .)
    BOOLEAN         reduce using rule 82 (opR -> AS_SAFE .)
    ID              reduce using rule 82 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 82 (opR -> AS_SAFE .)


state 77

    (83) opR -> EQEQ .

    LPAREN          reduce using rule 83 (opR -> EQEQ .)
    INT             reduce using rule 83 (opR -> EQEQ .)
    FLOAT           reduce using rule 83 (opR -> EQEQ .)
    LONG            reduce using rule 83 (opR -> EQEQ .)
    CHAR            reduce using rule 83 (opR -> EQEQ .)
    BOOLEAN         reduce using rule 83 (opR -> EQEQ .)
    ID              reduce using rule 83 (opR -> EQEQ .)
    STRING_1        reduce using rule 83 (opR -> EQEQ .)


state 78

    (84) opR -> EQEQEQ .

    LPAREN          reduce using rule 84 (opR -> EQEQEQ .)
    INT             reduce using rule 84 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 84 (opR -> EQEQEQ .)
    LONG            reduce using rule 84 (opR -> EQEQEQ .)
    CHAR            reduce using rule 84 (opR -> EQEQEQ .)
    BOOLEAN         reduce using rule 84 (opR -> EQEQEQ .)
    ID              reduce using rule 84 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 84 (opR -> EQEQEQ .)


state 79

    (30) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 100


state 80

    (38) asignacionSimple -> ID DOTS . tipoDato EQUAL valor
    (40) tipoDato -> . TINT
    (41) tipoDato -> . TLONG
    (42) tipoDato -> . TFLOAT
    (43) tipoDato -> . TDOUBLE
    (44) tipoDato -> . TBOOLEAN
    (45) tipoDato -> . TCHAR
    (46) tipoDato -> . TSTRING

    TINT            shift and go to state 102
    TLONG           shift and go to state 103
    TFLOAT          shift and go to state 104
    TDOUBLE         shift and go to state 105
    TBOOLEAN        shift and go to state 106
    TCHAR           shift and go to state 107
    TSTRING         shift and go to state 108

    tipoDato                       shift and go to state 101

state 81

    (39) asignacionSimple -> ID EQUAL . valor
    (47) valor -> . expression
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    valor                          shift and go to state 109
    expression                     shift and go to state 110
    term                           shift and go to state 61
    factor                         shift and go to state 32

state 82

    (88) stack_actuar -> ID DOT . stack_funciones
    (107) lsimplem -> ID DOT . Lmetod
    (108) lcomp -> ID DOT . Cmetod
    (24) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (25) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (27) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (26) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (89) stack_funciones -> . stack_isEmpty
    (90) stack_funciones -> . stack_push
    (91) stack_funciones -> . stack_pop
    (92) stack_funciones -> . stack_peek
    (93) stack_funciones -> . stack_size
    (99) Lmetod -> . FIRST LPAREN RPAREN
    (100) Lmetod -> . LAST LPAREN RPAREN
    (101) Lmetod -> . REMOVEL LPAREN RPAREN
    (102) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (103) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (104) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (94) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (96) stack_push -> . PUSH LPAREN ID RPAREN
    (95) stack_pop -> . POP LPAREN RPAREN
    (97) stack_peek -> . PEEK LPAREN RPAREN
    (98) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 114
    PEEK            shift and go to state 115
    REMOVE          shift and go to state 116
    POLL            shift and go to state 117
    FIRST           shift and go to state 123
    LAST            shift and go to state 124
    REMOVEL         shift and go to state 125
    APPEND          shift and go to state 126
    REMOVEN         shift and go to state 127
    REMOVEI         shift and go to state 128
    ISEMPTY         shift and go to state 129
    PUSH            shift and go to state 130
    POP             shift and go to state 131
    SIZE            shift and go to state 132

    stack_funciones                shift and go to state 111
    Lmetod                         shift and go to state 112
    Cmetod                         shift and go to state 113
    stack_isEmpty                  shift and go to state 118
    stack_push                     shift and go to state 119
    stack_pop                      shift and go to state 120
    stack_peek                     shift and go to state 121
    stack_size                     shift and go to state 122

state 83

    (31) for -> FOR LPAREN . ID IN ID RPAREN LCURL morelines RCURL

    ID              shift and go to state 133


state 84

    (65) if -> IF LPAREN . condicion RPAREN LCURL morelines RCURL
    (66) if -> IF LPAREN . condicion RPAREN LCURL morelines RCURL else
    (68) condicion -> . condicionL
    (69) condicion -> . condicionR
    (70) condicion -> . condicionN
    (71) condicionL -> . term opL term
    (72) condicionR -> . term opR term
    (73) condicionN -> . EXCL_WS term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    EXCL_WS         shift and go to state 43
    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    condicion                      shift and go to state 134
    condicionL                     shift and go to state 26
    condicionR                     shift and go to state 27
    condicionN                     shift and go to state 28
    term                           shift and go to state 135
    factor                         shift and go to state 32

state 85

    (105) while -> WHILE LPAREN . ID opR INT RPAREN LCURL morelines RCURL

    ID              shift and go to state 136


state 86

    (87) instance_arraylist -> ARRAYLIST LPAREN . RPAREN

    RPAREN          shift and go to state 137


state 87

    (86) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (40) tipoDato -> . TINT
    (41) tipoDato -> . TLONG
    (42) tipoDato -> . TFLOAT
    (43) tipoDato -> . TDOUBLE
    (44) tipoDato -> . TBOOLEAN
    (45) tipoDato -> . TCHAR
    (46) tipoDato -> . TSTRING

    TINT            shift and go to state 102
    TLONG           shift and go to state 103
    TFLOAT          shift and go to state 104
    TDOUBLE         shift and go to state 105
    TBOOLEAN        shift and go to state 106
    TCHAR           shift and go to state 107
    TSTRING         shift and go to state 108

    tipoDato                       shift and go to state 138

state 88

    (73) condicionN -> EXCL_WS term .

    $end            reduce using rule 73 (condicionN -> EXCL_WS term .)
    RPAREN          reduce using rule 73 (condicionN -> EXCL_WS term .)
    PRINT           reduce using rule 73 (condicionN -> EXCL_WS term .)
    PRINTLN         reduce using rule 73 (condicionN -> EXCL_WS term .)
    VAR             reduce using rule 73 (condicionN -> EXCL_WS term .)
    VAL             reduce using rule 73 (condicionN -> EXCL_WS term .)
    ID              reduce using rule 73 (condicionN -> EXCL_WS term .)
    LPAREN          reduce using rule 73 (condicionN -> EXCL_WS term .)
    FOR             reduce using rule 73 (condicionN -> EXCL_WS term .)
    IF              reduce using rule 73 (condicionN -> EXCL_WS term .)
    WHILE           reduce using rule 73 (condicionN -> EXCL_WS term .)
    ARRAYLIST       reduce using rule 73 (condicionN -> EXCL_WS term .)
    STACK           reduce using rule 73 (condicionN -> EXCL_WS term .)
    EXCL_WS         reduce using rule 73 (condicionN -> EXCL_WS term .)
    INT             reduce using rule 73 (condicionN -> EXCL_WS term .)
    FLOAT           reduce using rule 73 (condicionN -> EXCL_WS term .)
    LONG            reduce using rule 73 (condicionN -> EXCL_WS term .)
    CHAR            reduce using rule 73 (condicionN -> EXCL_WS term .)
    BOOLEAN         reduce using rule 73 (condicionN -> EXCL_WS term .)
    STRING_1        reduce using rule 73 (condicionN -> EXCL_WS term .)
    SEMICOLON       reduce using rule 73 (condicionN -> EXCL_WS term .)
    RCURL           reduce using rule 73 (condicionN -> EXCL_WS term .)


state 89

    (48) expression -> expression PLUS term .

    PLUS            reduce using rule 48 (expression -> expression PLUS term .)
    MINUS           reduce using rule 48 (expression -> expression PLUS term .)
    TIMES           reduce using rule 48 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 48 (expression -> expression PLUS term .)
    MOD             reduce using rule 48 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 48 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 48 (expression -> expression PLUS term .)
    $end            reduce using rule 48 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 48 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 48 (expression -> expression PLUS term .)
    PRINT           reduce using rule 48 (expression -> expression PLUS term .)
    PRINTLN         reduce using rule 48 (expression -> expression PLUS term .)
    VAR             reduce using rule 48 (expression -> expression PLUS term .)
    VAL             reduce using rule 48 (expression -> expression PLUS term .)
    ID              reduce using rule 48 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 48 (expression -> expression PLUS term .)
    FOR             reduce using rule 48 (expression -> expression PLUS term .)
    IF              reduce using rule 48 (expression -> expression PLUS term .)
    WHILE           reduce using rule 48 (expression -> expression PLUS term .)
    ARRAYLIST       reduce using rule 48 (expression -> expression PLUS term .)
    STACK           reduce using rule 48 (expression -> expression PLUS term .)
    EXCL_WS         reduce using rule 48 (expression -> expression PLUS term .)
    INT             reduce using rule 48 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 48 (expression -> expression PLUS term .)
    LONG            reduce using rule 48 (expression -> expression PLUS term .)
    CHAR            reduce using rule 48 (expression -> expression PLUS term .)
    BOOLEAN         reduce using rule 48 (expression -> expression PLUS term .)
    STRING_1        reduce using rule 48 (expression -> expression PLUS term .)
    RCURL           reduce using rule 48 (expression -> expression PLUS term .)


state 90

    (49) expression -> expression MINUS term .

    PLUS            reduce using rule 49 (expression -> expression MINUS term .)
    MINUS           reduce using rule 49 (expression -> expression MINUS term .)
    TIMES           reduce using rule 49 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 49 (expression -> expression MINUS term .)
    MOD             reduce using rule 49 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 49 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 49 (expression -> expression MINUS term .)
    $end            reduce using rule 49 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 49 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 49 (expression -> expression MINUS term .)
    PRINT           reduce using rule 49 (expression -> expression MINUS term .)
    PRINTLN         reduce using rule 49 (expression -> expression MINUS term .)
    VAR             reduce using rule 49 (expression -> expression MINUS term .)
    VAL             reduce using rule 49 (expression -> expression MINUS term .)
    ID              reduce using rule 49 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 49 (expression -> expression MINUS term .)
    FOR             reduce using rule 49 (expression -> expression MINUS term .)
    IF              reduce using rule 49 (expression -> expression MINUS term .)
    WHILE           reduce using rule 49 (expression -> expression MINUS term .)
    ARRAYLIST       reduce using rule 49 (expression -> expression MINUS term .)
    STACK           reduce using rule 49 (expression -> expression MINUS term .)
    EXCL_WS         reduce using rule 49 (expression -> expression MINUS term .)
    INT             reduce using rule 49 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 49 (expression -> expression MINUS term .)
    LONG            reduce using rule 49 (expression -> expression MINUS term .)
    CHAR            reduce using rule 49 (expression -> expression MINUS term .)
    BOOLEAN         reduce using rule 49 (expression -> expression MINUS term .)
    STRING_1        reduce using rule 49 (expression -> expression MINUS term .)
    RCURL           reduce using rule 49 (expression -> expression MINUS term .)


state 91

    (50) expression -> expression TIMES term .

    PLUS            reduce using rule 50 (expression -> expression TIMES term .)
    MINUS           reduce using rule 50 (expression -> expression TIMES term .)
    TIMES           reduce using rule 50 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 50 (expression -> expression TIMES term .)
    MOD             reduce using rule 50 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 50 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 50 (expression -> expression TIMES term .)
    $end            reduce using rule 50 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 50 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 50 (expression -> expression TIMES term .)
    PRINT           reduce using rule 50 (expression -> expression TIMES term .)
    PRINTLN         reduce using rule 50 (expression -> expression TIMES term .)
    VAR             reduce using rule 50 (expression -> expression TIMES term .)
    VAL             reduce using rule 50 (expression -> expression TIMES term .)
    ID              reduce using rule 50 (expression -> expression TIMES term .)
    LPAREN          reduce using rule 50 (expression -> expression TIMES term .)
    FOR             reduce using rule 50 (expression -> expression TIMES term .)
    IF              reduce using rule 50 (expression -> expression TIMES term .)
    WHILE           reduce using rule 50 (expression -> expression TIMES term .)
    ARRAYLIST       reduce using rule 50 (expression -> expression TIMES term .)
    STACK           reduce using rule 50 (expression -> expression TIMES term .)
    EXCL_WS         reduce using rule 50 (expression -> expression TIMES term .)
    INT             reduce using rule 50 (expression -> expression TIMES term .)
    FLOAT           reduce using rule 50 (expression -> expression TIMES term .)
    LONG            reduce using rule 50 (expression -> expression TIMES term .)
    CHAR            reduce using rule 50 (expression -> expression TIMES term .)
    BOOLEAN         reduce using rule 50 (expression -> expression TIMES term .)
    STRING_1        reduce using rule 50 (expression -> expression TIMES term .)
    RCURL           reduce using rule 50 (expression -> expression TIMES term .)


state 92

    (51) expression -> expression DIVIDE term .

    PLUS            reduce using rule 51 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 51 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 51 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 51 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 51 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 51 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 51 (expression -> expression DIVIDE term .)
    $end            reduce using rule 51 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 51 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 51 (expression -> expression DIVIDE term .)
    PRINT           reduce using rule 51 (expression -> expression DIVIDE term .)
    PRINTLN         reduce using rule 51 (expression -> expression DIVIDE term .)
    VAR             reduce using rule 51 (expression -> expression DIVIDE term .)
    VAL             reduce using rule 51 (expression -> expression DIVIDE term .)
    ID              reduce using rule 51 (expression -> expression DIVIDE term .)
    LPAREN          reduce using rule 51 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 51 (expression -> expression DIVIDE term .)
    IF              reduce using rule 51 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 51 (expression -> expression DIVIDE term .)
    ARRAYLIST       reduce using rule 51 (expression -> expression DIVIDE term .)
    STACK           reduce using rule 51 (expression -> expression DIVIDE term .)
    EXCL_WS         reduce using rule 51 (expression -> expression DIVIDE term .)
    INT             reduce using rule 51 (expression -> expression DIVIDE term .)
    FLOAT           reduce using rule 51 (expression -> expression DIVIDE term .)
    LONG            reduce using rule 51 (expression -> expression DIVIDE term .)
    CHAR            reduce using rule 51 (expression -> expression DIVIDE term .)
    BOOLEAN         reduce using rule 51 (expression -> expression DIVIDE term .)
    STRING_1        reduce using rule 51 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 51 (expression -> expression DIVIDE term .)


state 93

    (52) expression -> expression MOD term .

    PLUS            reduce using rule 52 (expression -> expression MOD term .)
    MINUS           reduce using rule 52 (expression -> expression MOD term .)
    TIMES           reduce using rule 52 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 52 (expression -> expression MOD term .)
    MOD             reduce using rule 52 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 52 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 52 (expression -> expression MOD term .)
    $end            reduce using rule 52 (expression -> expression MOD term .)
    RPAREN          reduce using rule 52 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 52 (expression -> expression MOD term .)
    PRINT           reduce using rule 52 (expression -> expression MOD term .)
    PRINTLN         reduce using rule 52 (expression -> expression MOD term .)
    VAR             reduce using rule 52 (expression -> expression MOD term .)
    VAL             reduce using rule 52 (expression -> expression MOD term .)
    ID              reduce using rule 52 (expression -> expression MOD term .)
    LPAREN          reduce using rule 52 (expression -> expression MOD term .)
    FOR             reduce using rule 52 (expression -> expression MOD term .)
    IF              reduce using rule 52 (expression -> expression MOD term .)
    WHILE           reduce using rule 52 (expression -> expression MOD term .)
    ARRAYLIST       reduce using rule 52 (expression -> expression MOD term .)
    STACK           reduce using rule 52 (expression -> expression MOD term .)
    EXCL_WS         reduce using rule 52 (expression -> expression MOD term .)
    INT             reduce using rule 52 (expression -> expression MOD term .)
    FLOAT           reduce using rule 52 (expression -> expression MOD term .)
    LONG            reduce using rule 52 (expression -> expression MOD term .)
    CHAR            reduce using rule 52 (expression -> expression MOD term .)
    BOOLEAN         reduce using rule 52 (expression -> expression MOD term .)
    STRING_1        reduce using rule 52 (expression -> expression MOD term .)
    RCURL           reduce using rule 52 (expression -> expression MOD term .)


state 94

    (28) impresion -> PRINT LPAREN expression . RPAREN
    (48) expression -> expression . PLUS term
    (49) expression -> expression . MINUS term
    (50) expression -> expression . TIMES term
    (51) expression -> expression . DIVIDE term
    (52) expression -> expression . MOD term
    (53) expression -> expression . INCREMENTONE
    (54) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 139
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 95

    (57) term -> LPAREN expression RPAREN .

    CONJ            reduce using rule 57 (term -> LPAREN expression RPAREN .)
    DISJ            reduce using rule 57 (term -> LPAREN expression RPAREN .)
    LANGLE          reduce using rule 57 (term -> LPAREN expression RPAREN .)
    RANGLE          reduce using rule 57 (term -> LPAREN expression RPAREN .)
    LE              reduce using rule 57 (term -> LPAREN expression RPAREN .)
    GE              reduce using rule 57 (term -> LPAREN expression RPAREN .)
    EXCL_EQ         reduce using rule 57 (term -> LPAREN expression RPAREN .)
    EXCL_EQEQ       reduce using rule 57 (term -> LPAREN expression RPAREN .)
    AS_SAFE         reduce using rule 57 (term -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 57 (term -> LPAREN expression RPAREN .)
    EQEQEQ          reduce using rule 57 (term -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 57 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 57 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 57 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 57 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 57 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 57 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 57 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 57 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 57 (term -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 57 (term -> LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 57 (term -> LPAREN expression RPAREN .)
    VAR             reduce using rule 57 (term -> LPAREN expression RPAREN .)
    VAL             reduce using rule 57 (term -> LPAREN expression RPAREN .)
    ID              reduce using rule 57 (term -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 57 (term -> LPAREN expression RPAREN .)
    FOR             reduce using rule 57 (term -> LPAREN expression RPAREN .)
    IF              reduce using rule 57 (term -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 57 (term -> LPAREN expression RPAREN .)
    ARRAYLIST       reduce using rule 57 (term -> LPAREN expression RPAREN .)
    STACK           reduce using rule 57 (term -> LPAREN expression RPAREN .)
    EXCL_WS         reduce using rule 57 (term -> LPAREN expression RPAREN .)
    INT             reduce using rule 57 (term -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 57 (term -> LPAREN expression RPAREN .)
    LONG            reduce using rule 57 (term -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 57 (term -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 57 (term -> LPAREN expression RPAREN .)
    STRING_1        reduce using rule 57 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 57 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 57 (term -> LPAREN expression RPAREN .)


state 96

    (29) impresion -> PRINTLN LPAREN expression . RPAREN
    (48) expression -> expression . PLUS term
    (49) expression -> expression . MINUS term
    (50) expression -> expression . TIMES term
    (51) expression -> expression . DIVIDE term
    (52) expression -> expression . MOD term
    (53) expression -> expression . INCREMENTONE
    (54) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 140
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 97

    (85) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_arraylist
    (106) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (38) asignacionSimple -> ID DOTS . tipoDato EQUAL valor
    (86) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (40) tipoDato -> . TINT
    (41) tipoDato -> . TLONG
    (42) tipoDato -> . TFLOAT
    (43) tipoDato -> . TDOUBLE
    (44) tipoDato -> . TBOOLEAN
    (45) tipoDato -> . TCHAR
    (46) tipoDato -> . TSTRING

    LINKEDL         shift and go to state 142
    STACK           shift and go to state 42
    TINT            shift and go to state 102
    TLONG           shift and go to state 103
    TFLOAT          shift and go to state 104
    TDOUBLE         shift and go to state 105
    TBOOLEAN        shift and go to state 106
    TCHAR           shift and go to state 107
    TSTRING         shift and go to state 108

    def_estruct_tipoDato           shift and go to state 141
    tipoDato                       shift and go to state 101

state 98

    (71) condicionL -> term opL term .

    $end            reduce using rule 71 (condicionL -> term opL term .)
    RPAREN          reduce using rule 71 (condicionL -> term opL term .)
    PRINT           reduce using rule 71 (condicionL -> term opL term .)
    PRINTLN         reduce using rule 71 (condicionL -> term opL term .)
    VAR             reduce using rule 71 (condicionL -> term opL term .)
    VAL             reduce using rule 71 (condicionL -> term opL term .)
    ID              reduce using rule 71 (condicionL -> term opL term .)
    LPAREN          reduce using rule 71 (condicionL -> term opL term .)
    FOR             reduce using rule 71 (condicionL -> term opL term .)
    IF              reduce using rule 71 (condicionL -> term opL term .)
    WHILE           reduce using rule 71 (condicionL -> term opL term .)
    ARRAYLIST       reduce using rule 71 (condicionL -> term opL term .)
    STACK           reduce using rule 71 (condicionL -> term opL term .)
    EXCL_WS         reduce using rule 71 (condicionL -> term opL term .)
    INT             reduce using rule 71 (condicionL -> term opL term .)
    FLOAT           reduce using rule 71 (condicionL -> term opL term .)
    LONG            reduce using rule 71 (condicionL -> term opL term .)
    CHAR            reduce using rule 71 (condicionL -> term opL term .)
    BOOLEAN         reduce using rule 71 (condicionL -> term opL term .)
    STRING_1        reduce using rule 71 (condicionL -> term opL term .)
    SEMICOLON       reduce using rule 71 (condicionL -> term opL term .)
    RCURL           reduce using rule 71 (condicionL -> term opL term .)


state 99

    (72) condicionR -> term opR term .

    $end            reduce using rule 72 (condicionR -> term opR term .)
    RPAREN          reduce using rule 72 (condicionR -> term opR term .)
    PRINT           reduce using rule 72 (condicionR -> term opR term .)
    PRINTLN         reduce using rule 72 (condicionR -> term opR term .)
    VAR             reduce using rule 72 (condicionR -> term opR term .)
    VAL             reduce using rule 72 (condicionR -> term opR term .)
    ID              reduce using rule 72 (condicionR -> term opR term .)
    LPAREN          reduce using rule 72 (condicionR -> term opR term .)
    FOR             reduce using rule 72 (condicionR -> term opR term .)
    IF              reduce using rule 72 (condicionR -> term opR term .)
    WHILE           reduce using rule 72 (condicionR -> term opR term .)
    ARRAYLIST       reduce using rule 72 (condicionR -> term opR term .)
    STACK           reduce using rule 72 (condicionR -> term opR term .)
    EXCL_WS         reduce using rule 72 (condicionR -> term opR term .)
    INT             reduce using rule 72 (condicionR -> term opR term .)
    FLOAT           reduce using rule 72 (condicionR -> term opR term .)
    LONG            reduce using rule 72 (condicionR -> term opR term .)
    CHAR            reduce using rule 72 (condicionR -> term opR term .)
    BOOLEAN         reduce using rule 72 (condicionR -> term opR term .)
    STRING_1        reduce using rule 72 (condicionR -> term opR term .)
    SEMICOLON       reduce using rule 72 (condicionR -> term opR term .)
    RCURL           reduce using rule 72 (condicionR -> term opR term .)


state 100

    (30) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 143


state 101

    (38) asignacionSimple -> ID DOTS tipoDato . EQUAL valor

    EQUAL           shift and go to state 144


state 102

    (40) tipoDato -> TINT .

    EQUAL           reduce using rule 40 (tipoDato -> TINT .)
    RANGLE          reduce using rule 40 (tipoDato -> TINT .)


state 103

    (41) tipoDato -> TLONG .

    EQUAL           reduce using rule 41 (tipoDato -> TLONG .)
    RANGLE          reduce using rule 41 (tipoDato -> TLONG .)


state 104

    (42) tipoDato -> TFLOAT .

    EQUAL           reduce using rule 42 (tipoDato -> TFLOAT .)
    RANGLE          reduce using rule 42 (tipoDato -> TFLOAT .)


state 105

    (43) tipoDato -> TDOUBLE .

    EQUAL           reduce using rule 43 (tipoDato -> TDOUBLE .)
    RANGLE          reduce using rule 43 (tipoDato -> TDOUBLE .)


state 106

    (44) tipoDato -> TBOOLEAN .

    EQUAL           reduce using rule 44 (tipoDato -> TBOOLEAN .)
    RANGLE          reduce using rule 44 (tipoDato -> TBOOLEAN .)


state 107

    (45) tipoDato -> TCHAR .

    EQUAL           reduce using rule 45 (tipoDato -> TCHAR .)
    RANGLE          reduce using rule 45 (tipoDato -> TCHAR .)


state 108

    (46) tipoDato -> TSTRING .

    EQUAL           reduce using rule 46 (tipoDato -> TSTRING .)
    RANGLE          reduce using rule 46 (tipoDato -> TSTRING .)


state 109

    (39) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 39 (asignacionSimple -> ID EQUAL valor .)


state 110

    (47) valor -> expression .
    (48) expression -> expression . PLUS term
    (49) expression -> expression . MINUS term
    (50) expression -> expression . TIMES term
    (51) expression -> expression . DIVIDE term
    (52) expression -> expression . MOD term
    (53) expression -> expression . INCREMENTONE
    (54) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 47 (valor -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    INCREMENTONE    shift and go to state 56
    DECREMENTONE    shift and go to state 57


state 111

    (88) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 88 (stack_actuar -> ID DOT stack_funciones .)


state 112

    (107) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 107 (lsimplem -> ID DOT Lmetod .)


state 113

    (108) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 108 (lcomp -> ID DOT Cmetod .)


state 114

    (24) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 145


state 115

    (25) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (97) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 146


state 116

    (27) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 147


state 117

    (26) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 148


state 118

    (89) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 89 (stack_funciones -> stack_isEmpty .)


state 119

    (90) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 90 (stack_funciones -> stack_push .)


state 120

    (91) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 91 (stack_funciones -> stack_pop .)


state 121

    (92) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 92 (stack_funciones -> stack_peek .)


state 122

    (93) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 93 (stack_funciones -> stack_size .)


state 123

    (99) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 149


state 124

    (100) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 150


state 125

    (101) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 151


state 126

    (102) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 152


state 127

    (103) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 153


state 128

    (104) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 154


state 129

    (94) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 155


state 130

    (96) stack_push -> PUSH . LPAREN ID RPAREN

    LPAREN          shift and go to state 156


state 131

    (95) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 157


state 132

    (98) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 158


state 133

    (31) for -> FOR LPAREN ID . IN ID RPAREN LCURL morelines RCURL

    IN              shift and go to state 159


state 134

    (65) if -> IF LPAREN condicion . RPAREN LCURL morelines RCURL
    (66) if -> IF LPAREN condicion . RPAREN LCURL morelines RCURL else

    RPAREN          shift and go to state 160


state 135

    (71) condicionL -> term . opL term
    (72) condicionR -> term . opR term
    (74) opL -> . CONJ
    (75) opL -> . DISJ
    (76) opR -> . LANGLE
    (77) opR -> . RANGLE
    (78) opR -> . LE
    (79) opR -> . GE
    (80) opR -> . EXCL_EQ
    (81) opR -> . EXCL_EQEQ
    (82) opR -> . AS_SAFE
    (83) opR -> . EQEQ
    (84) opR -> . EQEQEQ

    CONJ            shift and go to state 68
    DISJ            shift and go to state 69
    LANGLE          shift and go to state 70
    RANGLE          shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    EXCL_EQ         shift and go to state 74
    EXCL_EQEQ       shift and go to state 75
    AS_SAFE         shift and go to state 76
    EQEQ            shift and go to state 77
    EQEQEQ          shift and go to state 78

    opL                            shift and go to state 66
    opR                            shift and go to state 67

state 136

    (105) while -> WHILE LPAREN ID . opR INT RPAREN LCURL morelines RCURL
    (76) opR -> . LANGLE
    (77) opR -> . RANGLE
    (78) opR -> . LE
    (79) opR -> . GE
    (80) opR -> . EXCL_EQ
    (81) opR -> . EXCL_EQEQ
    (82) opR -> . AS_SAFE
    (83) opR -> . EQEQ
    (84) opR -> . EQEQEQ

    LANGLE          shift and go to state 70
    RANGLE          shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    EXCL_EQ         shift and go to state 74
    EXCL_EQEQ       shift and go to state 75
    AS_SAFE         shift and go to state 76
    EQEQ            shift and go to state 77
    EQEQEQ          shift and go to state 78

    opR                            shift and go to state 161

state 137

    (87) instance_arraylist -> ARRAYLIST LPAREN RPAREN .

    SEMICOLON       reduce using rule 87 (instance_arraylist -> ARRAYLIST LPAREN RPAREN .)


state 138

    (86) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 162


state 139

    (28) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 28 (impresion -> PRINT LPAREN expression RPAREN .)


state 140

    (29) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 29 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 141

    (85) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_arraylist

    EQUAL           shift and go to state 163


state 142

    (106) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 164


state 143

    (30) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 165


state 144

    (38) asignacionSimple -> ID DOTS tipoDato EQUAL . valor
    (47) valor -> . expression
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    LPAREN          shift and go to state 9
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    valor                          shift and go to state 166
    expression                     shift and go to state 110
    term                           shift and go to state 61
    factor                         shift and go to state 32

state 145

    (24) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1

    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    ID              shift and go to state 62
    STRING_1        shift and go to state 48

    factor                         shift and go to state 167

state 146

    (25) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (97) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 168


state 147

    (27) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 169


state 148

    (26) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 170


state 149

    (99) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 171


state 150

    (100) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 172


state 151

    (101) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 173


state 152

    (102) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 174


state 153

    (103) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 175


state 154

    (104) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 176


state 155

    (94) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 177


state 156

    (96) stack_push -> PUSH LPAREN . ID RPAREN

    ID              shift and go to state 178


state 157

    (95) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 179


state 158

    (98) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 180


state 159

    (31) for -> FOR LPAREN ID IN . ID RPAREN LCURL morelines RCURL

    ID              shift and go to state 181


state 160

    (65) if -> IF LPAREN condicion RPAREN . LCURL morelines RCURL
    (66) if -> IF LPAREN condicion RPAREN . LCURL morelines RCURL else

    LCURL           shift and go to state 182


state 161

    (105) while -> WHILE LPAREN ID opR . INT RPAREN LCURL morelines RCURL

    INT             shift and go to state 183


state 162

    (86) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 86 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 86 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 163

    (85) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_arraylist
    (87) instance_arraylist -> . ARRAYLIST LPAREN RPAREN

    ARRAYLIST       shift and go to state 41

    instance_arraylist             shift and go to state 184

state 164

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 185


state 165

    (30) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (40) tipoDato -> . TINT
    (41) tipoDato -> . TLONG
    (42) tipoDato -> . TFLOAT
    (43) tipoDato -> . TDOUBLE
    (44) tipoDato -> . TBOOLEAN
    (45) tipoDato -> . TCHAR
    (46) tipoDato -> . TSTRING

    TINT            shift and go to state 102
    TLONG           shift and go to state 103
    TFLOAT          shift and go to state 104
    TDOUBLE         shift and go to state 105
    TBOOLEAN        shift and go to state 106
    TCHAR           shift and go to state 107
    TSTRING         shift and go to state 108

    tipoDato                       shift and go to state 186

state 166

    (38) asignacionSimple -> ID DOTS tipoDato EQUAL valor .

    SEMICOLON       reduce using rule 38 (asignacionSimple -> ID DOTS tipoDato EQUAL valor .)


state 167

    (24) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 187


state 168

    (25) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (97) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 25 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 25 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 97 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 169

    (27) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 27 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 170

    (26) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 26 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 171

    (99) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 99 (Lmetod -> FIRST LPAREN RPAREN .)


state 172

    (100) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 100 (Lmetod -> LAST LPAREN RPAREN .)


state 173

    (101) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 101 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 174

    (102) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 188


state 175

    (103) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 189


state 176

    (104) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 190


state 177

    (94) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 94 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 178

    (96) stack_push -> PUSH LPAREN ID . RPAREN

    RPAREN          shift and go to state 191


state 179

    (95) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 95 (stack_pop -> POP LPAREN RPAREN .)


state 180

    (98) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 98 (stack_size -> SIZE LPAREN RPAREN .)


state 181

    (31) for -> FOR LPAREN ID IN ID . RPAREN LCURL morelines RCURL

    RPAREN          shift and go to state 192


state 182

    (65) if -> IF LPAREN condicion RPAREN LCURL . morelines RCURL
    (66) if -> IF LPAREN condicion RPAREN LCURL . morelines RCURL else
    (32) morelines -> . line
    (33) morelines -> . line morelines
    (1) line -> . impresion SEMICOLON
    (2) line -> . asignacion SEMICOLON
    (3) line -> . expression
    (4) line -> . estructurasControl
    (5) line -> . estructurasDatos SEMICOLON
    (6) line -> . condicion
    (28) impresion -> . PRINT LPAREN expression RPAREN
    (29) impresion -> . PRINTLN LPAREN expression RPAREN
    (34) asignacion -> . keywordVariables asignacionSimple
    (35) asignacion -> . asignacionSimple
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (17) estructurasControl -> . for
    (18) estructurasControl -> . if
    (19) estructurasControl -> . while
    (7) estructurasDatos -> . queue
    (8) estructurasDatos -> . queue_operations
    (9) estructurasDatos -> . stack
    (10) estructurasDatos -> . stack_actuar
    (11) estructurasDatos -> . instance_arraylist
    (12) estructurasDatos -> . def_estruct_tipoDato
    (13) estructurasDatos -> . lista
    (14) estructurasDatos -> . lsimplem
    (15) estructurasDatos -> . lcomp
    (16) estructurasDatos -> .
    (68) condicion -> . condicionL
    (69) condicion -> . condicionR
    (70) condicion -> . condicionN
    (36) keywordVariables -> . VAR
    (37) keywordVariables -> . VAL
    (38) asignacionSimple -> . ID DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> . ID EQUAL valor
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (31) for -> . FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL
    (65) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (66) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (105) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (30) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (20) queue_operations -> . queue_add
    (21) queue_operations -> . queue_peek
    (22) queue_operations -> . queue_remove
    (23) queue_operations -> . queue_poll
    (85) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (88) stack_actuar -> . ID DOT stack_funciones
    (87) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (86) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (106) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (107) lsimplem -> . ID DOT Lmetod
    (108) lcomp -> . ID DOT Cmetod
    (71) condicionL -> . term opL term
    (72) condicionR -> . term opR term
    (73) condicionN -> . EXCL_WS term
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1
    (24) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (25) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (27) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (26) queue_poll -> . ID DOT POLL LPAREN RPAREN

    PRINT           shift and go to state 8
    PRINTLN         shift and go to state 10
    SEMICOLON       reduce using rule 16 (estructurasDatos -> .)
    VAR             shift and go to state 29
    VAL             shift and go to state 30
    ID              shift and go to state 31
    LPAREN          shift and go to state 9
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    ARRAYLIST       shift and go to state 41
    STACK           shift and go to state 42
    EXCL_WS         shift and go to state 43
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    STRING_1        shift and go to state 48

    condicion                      shift and go to state 7
    morelines                      shift and go to state 193
    line                           shift and go to state 194
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    expression                     shift and go to state 4
    estructurasControl             shift and go to state 5
    estructurasDatos               shift and go to state 6
    keywordVariables               shift and go to state 11
    asignacionSimple               shift and go to state 12
    term                           shift and go to state 13
    for                            shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    queue                          shift and go to state 17
    queue_operations               shift and go to state 18
    stack                          shift and go to state 19
    stack_actuar                   shift and go to state 20
    instance_arraylist             shift and go to state 21
    def_estruct_tipoDato           shift and go to state 22
    lista                          shift and go to state 23
    lsimplem                       shift and go to state 24
    lcomp                          shift and go to state 25
    condicionL                     shift and go to state 26
    condicionR                     shift and go to state 27
    condicionN                     shift and go to state 28
    factor                         shift and go to state 32
    queue_add                      shift and go to state 37
    queue_peek                     shift and go to state 38
    queue_remove                   shift and go to state 39
    queue_poll                     shift and go to state 40

state 183

    (105) while -> WHILE LPAREN ID opR INT . RPAREN LCURL morelines RCURL

    RPAREN          shift and go to state 195


state 184

    (85) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .

    SEMICOLON       reduce using rule 85 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist .)


state 185

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 196


state 186

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 197


state 187

    (24) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 24 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 188

    (102) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 102 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 189

    (103) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 103 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 190

    (104) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 104 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 191

    (96) stack_push -> PUSH LPAREN ID RPAREN .

    SEMICOLON       reduce using rule 96 (stack_push -> PUSH LPAREN ID RPAREN .)


state 192

    (31) for -> FOR LPAREN ID IN ID RPAREN . LCURL morelines RCURL

    LCURL           shift and go to state 198


state 193

    (65) if -> IF LPAREN condicion RPAREN LCURL morelines . RCURL
    (66) if -> IF LPAREN condicion RPAREN LCURL morelines . RCURL else

    RCURL           shift and go to state 199


state 194

    (32) morelines -> line .
    (33) morelines -> line . morelines
    (32) morelines -> . line
    (33) morelines -> . line morelines
    (1) line -> . impresion SEMICOLON
    (2) line -> . asignacion SEMICOLON
    (3) line -> . expression
    (4) line -> . estructurasControl
    (5) line -> . estructurasDatos SEMICOLON
    (6) line -> . condicion
    (28) impresion -> . PRINT LPAREN expression RPAREN
    (29) impresion -> . PRINTLN LPAREN expression RPAREN
    (34) asignacion -> . keywordVariables asignacionSimple
    (35) asignacion -> . asignacionSimple
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (17) estructurasControl -> . for
    (18) estructurasControl -> . if
    (19) estructurasControl -> . while
    (7) estructurasDatos -> . queue
    (8) estructurasDatos -> . queue_operations
    (9) estructurasDatos -> . stack
    (10) estructurasDatos -> . stack_actuar
    (11) estructurasDatos -> . instance_arraylist
    (12) estructurasDatos -> . def_estruct_tipoDato
    (13) estructurasDatos -> . lista
    (14) estructurasDatos -> . lsimplem
    (15) estructurasDatos -> . lcomp
    (16) estructurasDatos -> .
    (68) condicion -> . condicionL
    (69) condicion -> . condicionR
    (70) condicion -> . condicionN
    (36) keywordVariables -> . VAR
    (37) keywordVariables -> . VAL
    (38) asignacionSimple -> . ID DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> . ID EQUAL valor
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (31) for -> . FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL
    (65) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (66) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (105) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (30) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (20) queue_operations -> . queue_add
    (21) queue_operations -> . queue_peek
    (22) queue_operations -> . queue_remove
    (23) queue_operations -> . queue_poll
    (85) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (88) stack_actuar -> . ID DOT stack_funciones
    (87) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (86) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (106) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (107) lsimplem -> . ID DOT Lmetod
    (108) lcomp -> . ID DOT Cmetod
    (71) condicionL -> . term opL term
    (72) condicionR -> . term opR term
    (73) condicionN -> . EXCL_WS term
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1
    (24) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (25) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (27) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (26) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 32 (morelines -> line .)
    PRINT           shift and go to state 8
    PRINTLN         shift and go to state 10
    SEMICOLON       reduce using rule 16 (estructurasDatos -> .)
    VAR             shift and go to state 29
    VAL             shift and go to state 30
    ID              shift and go to state 31
    LPAREN          shift and go to state 9
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    ARRAYLIST       shift and go to state 41
    STACK           shift and go to state 42
    EXCL_WS         shift and go to state 43
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    STRING_1        shift and go to state 48

    line                           shift and go to state 194
    morelines                      shift and go to state 200
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    expression                     shift and go to state 4
    estructurasControl             shift and go to state 5
    estructurasDatos               shift and go to state 6
    condicion                      shift and go to state 7
    keywordVariables               shift and go to state 11
    asignacionSimple               shift and go to state 12
    term                           shift and go to state 13
    for                            shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    queue                          shift and go to state 17
    queue_operations               shift and go to state 18
    stack                          shift and go to state 19
    stack_actuar                   shift and go to state 20
    instance_arraylist             shift and go to state 21
    def_estruct_tipoDato           shift and go to state 22
    lista                          shift and go to state 23
    lsimplem                       shift and go to state 24
    lcomp                          shift and go to state 25
    condicionL                     shift and go to state 26
    condicionR                     shift and go to state 27
    condicionN                     shift and go to state 28
    factor                         shift and go to state 32
    queue_add                      shift and go to state 37
    queue_peek                     shift and go to state 38
    queue_remove                   shift and go to state 39
    queue_poll                     shift and go to state 40

state 195

    (105) while -> WHILE LPAREN ID opR INT RPAREN . LCURL morelines RCURL

    LCURL           shift and go to state 201


state 196

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 202


state 197

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 203


state 198

    (31) for -> FOR LPAREN ID IN ID RPAREN LCURL . morelines RCURL
    (32) morelines -> . line
    (33) morelines -> . line morelines
    (1) line -> . impresion SEMICOLON
    (2) line -> . asignacion SEMICOLON
    (3) line -> . expression
    (4) line -> . estructurasControl
    (5) line -> . estructurasDatos SEMICOLON
    (6) line -> . condicion
    (28) impresion -> . PRINT LPAREN expression RPAREN
    (29) impresion -> . PRINTLN LPAREN expression RPAREN
    (34) asignacion -> . keywordVariables asignacionSimple
    (35) asignacion -> . asignacionSimple
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (17) estructurasControl -> . for
    (18) estructurasControl -> . if
    (19) estructurasControl -> . while
    (7) estructurasDatos -> . queue
    (8) estructurasDatos -> . queue_operations
    (9) estructurasDatos -> . stack
    (10) estructurasDatos -> . stack_actuar
    (11) estructurasDatos -> . instance_arraylist
    (12) estructurasDatos -> . def_estruct_tipoDato
    (13) estructurasDatos -> . lista
    (14) estructurasDatos -> . lsimplem
    (15) estructurasDatos -> . lcomp
    (16) estructurasDatos -> .
    (68) condicion -> . condicionL
    (69) condicion -> . condicionR
    (70) condicion -> . condicionN
    (36) keywordVariables -> . VAR
    (37) keywordVariables -> . VAL
    (38) asignacionSimple -> . ID DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> . ID EQUAL valor
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (31) for -> . FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL
    (65) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (66) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (105) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (30) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (20) queue_operations -> . queue_add
    (21) queue_operations -> . queue_peek
    (22) queue_operations -> . queue_remove
    (23) queue_operations -> . queue_poll
    (85) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (88) stack_actuar -> . ID DOT stack_funciones
    (87) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (86) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (106) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (107) lsimplem -> . ID DOT Lmetod
    (108) lcomp -> . ID DOT Cmetod
    (71) condicionL -> . term opL term
    (72) condicionR -> . term opR term
    (73) condicionN -> . EXCL_WS term
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1
    (24) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (25) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (27) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (26) queue_poll -> . ID DOT POLL LPAREN RPAREN

    PRINT           shift and go to state 8
    PRINTLN         shift and go to state 10
    SEMICOLON       reduce using rule 16 (estructurasDatos -> .)
    VAR             shift and go to state 29
    VAL             shift and go to state 30
    ID              shift and go to state 31
    LPAREN          shift and go to state 9
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    ARRAYLIST       shift and go to state 41
    STACK           shift and go to state 42
    EXCL_WS         shift and go to state 43
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    STRING_1        shift and go to state 48

    morelines                      shift and go to state 204
    line                           shift and go to state 194
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    expression                     shift and go to state 4
    estructurasControl             shift and go to state 5
    estructurasDatos               shift and go to state 6
    condicion                      shift and go to state 7
    keywordVariables               shift and go to state 11
    asignacionSimple               shift and go to state 12
    term                           shift and go to state 13
    for                            shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    queue                          shift and go to state 17
    queue_operations               shift and go to state 18
    stack                          shift and go to state 19
    stack_actuar                   shift and go to state 20
    instance_arraylist             shift and go to state 21
    def_estruct_tipoDato           shift and go to state 22
    lista                          shift and go to state 23
    lsimplem                       shift and go to state 24
    lcomp                          shift and go to state 25
    condicionL                     shift and go to state 26
    condicionR                     shift and go to state 27
    condicionN                     shift and go to state 28
    factor                         shift and go to state 32
    queue_add                      shift and go to state 37
    queue_peek                     shift and go to state 38
    queue_remove                   shift and go to state 39
    queue_poll                     shift and go to state 40

state 199

    (65) if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .
    (66) if -> IF LPAREN condicion RPAREN LCURL morelines RCURL . else
    (67) else -> . ELSE LCURL line RCURL

    $end            reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    ARRAYLIST       reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    SEMICOLON       reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 65 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL .)
    ELSE            shift and go to state 206

    else                           shift and go to state 205

state 200

    (33) morelines -> line morelines .

    RCURL           reduce using rule 33 (morelines -> line morelines .)


state 201

    (105) while -> WHILE LPAREN ID opR INT RPAREN LCURL . morelines RCURL
    (32) morelines -> . line
    (33) morelines -> . line morelines
    (1) line -> . impresion SEMICOLON
    (2) line -> . asignacion SEMICOLON
    (3) line -> . expression
    (4) line -> . estructurasControl
    (5) line -> . estructurasDatos SEMICOLON
    (6) line -> . condicion
    (28) impresion -> . PRINT LPAREN expression RPAREN
    (29) impresion -> . PRINTLN LPAREN expression RPAREN
    (34) asignacion -> . keywordVariables asignacionSimple
    (35) asignacion -> . asignacionSimple
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (17) estructurasControl -> . for
    (18) estructurasControl -> . if
    (19) estructurasControl -> . while
    (7) estructurasDatos -> . queue
    (8) estructurasDatos -> . queue_operations
    (9) estructurasDatos -> . stack
    (10) estructurasDatos -> . stack_actuar
    (11) estructurasDatos -> . instance_arraylist
    (12) estructurasDatos -> . def_estruct_tipoDato
    (13) estructurasDatos -> . lista
    (14) estructurasDatos -> . lsimplem
    (15) estructurasDatos -> . lcomp
    (16) estructurasDatos -> .
    (68) condicion -> . condicionL
    (69) condicion -> . condicionR
    (70) condicion -> . condicionN
    (36) keywordVariables -> . VAR
    (37) keywordVariables -> . VAL
    (38) asignacionSimple -> . ID DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> . ID EQUAL valor
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (31) for -> . FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL
    (65) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (66) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (105) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (30) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (20) queue_operations -> . queue_add
    (21) queue_operations -> . queue_peek
    (22) queue_operations -> . queue_remove
    (23) queue_operations -> . queue_poll
    (85) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (88) stack_actuar -> . ID DOT stack_funciones
    (87) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (86) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (106) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (107) lsimplem -> . ID DOT Lmetod
    (108) lcomp -> . ID DOT Cmetod
    (71) condicionL -> . term opL term
    (72) condicionR -> . term opR term
    (73) condicionN -> . EXCL_WS term
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1
    (24) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (25) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (27) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (26) queue_poll -> . ID DOT POLL LPAREN RPAREN

    PRINT           shift and go to state 8
    PRINTLN         shift and go to state 10
    SEMICOLON       reduce using rule 16 (estructurasDatos -> .)
    VAR             shift and go to state 29
    VAL             shift and go to state 30
    ID              shift and go to state 31
    LPAREN          shift and go to state 9
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    ARRAYLIST       shift and go to state 41
    STACK           shift and go to state 42
    EXCL_WS         shift and go to state 43
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    STRING_1        shift and go to state 48

    morelines                      shift and go to state 207
    line                           shift and go to state 194
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    expression                     shift and go to state 4
    estructurasControl             shift and go to state 5
    estructurasDatos               shift and go to state 6
    condicion                      shift and go to state 7
    keywordVariables               shift and go to state 11
    asignacionSimple               shift and go to state 12
    term                           shift and go to state 13
    for                            shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    queue                          shift and go to state 17
    queue_operations               shift and go to state 18
    stack                          shift and go to state 19
    stack_actuar                   shift and go to state 20
    instance_arraylist             shift and go to state 21
    def_estruct_tipoDato           shift and go to state 22
    lista                          shift and go to state 23
    lsimplem                       shift and go to state 24
    lcomp                          shift and go to state 25
    condicionL                     shift and go to state 26
    condicionR                     shift and go to state 27
    condicionN                     shift and go to state 28
    factor                         shift and go to state 32
    queue_add                      shift and go to state 37
    queue_peek                     shift and go to state 38
    queue_remove                   shift and go to state 39
    queue_poll                     shift and go to state 40

state 202

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 208


state 203

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 209


state 204

    (31) for -> FOR LPAREN ID IN ID RPAREN LCURL morelines . RCURL

    RCURL           shift and go to state 210


state 205

    (66) if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .

    $end            reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    PRINT           reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    PRINTLN         reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    VAR             reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    VAL             reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    ID              reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    LPAREN          reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    FOR             reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    IF              reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    WHILE           reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    ARRAYLIST       reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    STACK           reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    EXCL_WS         reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    INT             reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    FLOAT           reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    LONG            reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    CHAR            reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    BOOLEAN         reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    STRING_1        reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    SEMICOLON       reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)
    RCURL           reduce using rule 66 (if -> IF LPAREN condicion RPAREN LCURL morelines RCURL else .)


state 206

    (67) else -> ELSE . LCURL line RCURL

    LCURL           shift and go to state 211


state 207

    (105) while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines . RCURL

    RCURL           shift and go to state 212


state 208

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 213


state 209

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 214


state 210

    (31) for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .

    $end            reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    ARRAYLIST       reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    SEMICOLON       reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 31 (for -> FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL .)


state 211

    (67) else -> ELSE LCURL . line RCURL
    (1) line -> . impresion SEMICOLON
    (2) line -> . asignacion SEMICOLON
    (3) line -> . expression
    (4) line -> . estructurasControl
    (5) line -> . estructurasDatos SEMICOLON
    (6) line -> . condicion
    (28) impresion -> . PRINT LPAREN expression RPAREN
    (29) impresion -> . PRINTLN LPAREN expression RPAREN
    (34) asignacion -> . keywordVariables asignacionSimple
    (35) asignacion -> . asignacionSimple
    (48) expression -> . expression PLUS term
    (49) expression -> . expression MINUS term
    (50) expression -> . expression TIMES term
    (51) expression -> . expression DIVIDE term
    (52) expression -> . expression MOD term
    (53) expression -> . expression INCREMENTONE
    (54) expression -> . expression DECREMENTONE
    (55) expression -> . term
    (17) estructurasControl -> . for
    (18) estructurasControl -> . if
    (19) estructurasControl -> . while
    (7) estructurasDatos -> . queue
    (8) estructurasDatos -> . queue_operations
    (9) estructurasDatos -> . stack
    (10) estructurasDatos -> . stack_actuar
    (11) estructurasDatos -> . instance_arraylist
    (12) estructurasDatos -> . def_estruct_tipoDato
    (13) estructurasDatos -> . lista
    (14) estructurasDatos -> . lsimplem
    (15) estructurasDatos -> . lcomp
    (16) estructurasDatos -> .
    (68) condicion -> . condicionL
    (69) condicion -> . condicionR
    (70) condicion -> . condicionN
    (36) keywordVariables -> . VAR
    (37) keywordVariables -> . VAL
    (38) asignacionSimple -> . ID DOTS tipoDato EQUAL valor
    (39) asignacionSimple -> . ID EQUAL valor
    (56) term -> . factor
    (57) term -> . LPAREN expression RPAREN
    (31) for -> . FOR LPAREN ID IN ID RPAREN LCURL morelines RCURL
    (65) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL
    (66) if -> . IF LPAREN condicion RPAREN LCURL morelines RCURL else
    (105) while -> . WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL
    (30) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (20) queue_operations -> . queue_add
    (21) queue_operations -> . queue_peek
    (22) queue_operations -> . queue_remove
    (23) queue_operations -> . queue_poll
    (85) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_arraylist
    (88) stack_actuar -> . ID DOT stack_funciones
    (87) instance_arraylist -> . ARRAYLIST LPAREN RPAREN
    (86) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (106) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (107) lsimplem -> . ID DOT Lmetod
    (108) lcomp -> . ID DOT Cmetod
    (71) condicionL -> . term opL term
    (72) condicionR -> . term opR term
    (73) condicionN -> . EXCL_WS term
    (58) factor -> . INT
    (59) factor -> . FLOAT
    (60) factor -> . LONG
    (61) factor -> . CHAR
    (62) factor -> . BOOLEAN
    (63) factor -> . ID
    (64) factor -> . STRING_1
    (24) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (25) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (27) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (26) queue_poll -> . ID DOT POLL LPAREN RPAREN

    PRINT           shift and go to state 8
    PRINTLN         shift and go to state 10
    SEMICOLON       reduce using rule 16 (estructurasDatos -> .)
    VAR             shift and go to state 29
    VAL             shift and go to state 30
    ID              shift and go to state 31
    LPAREN          shift and go to state 9
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    ARRAYLIST       shift and go to state 41
    STACK           shift and go to state 42
    EXCL_WS         shift and go to state 43
    INT             shift and go to state 36
    FLOAT           shift and go to state 44
    LONG            shift and go to state 45
    CHAR            shift and go to state 46
    BOOLEAN         shift and go to state 47
    STRING_1        shift and go to state 48

    line                           shift and go to state 215
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    expression                     shift and go to state 4
    estructurasControl             shift and go to state 5
    estructurasDatos               shift and go to state 6
    condicion                      shift and go to state 7
    keywordVariables               shift and go to state 11
    asignacionSimple               shift and go to state 12
    term                           shift and go to state 13
    for                            shift and go to state 14
    if                             shift and go to state 15
    while                          shift and go to state 16
    queue                          shift and go to state 17
    queue_operations               shift and go to state 18
    stack                          shift and go to state 19
    stack_actuar                   shift and go to state 20
    instance_arraylist             shift and go to state 21
    def_estruct_tipoDato           shift and go to state 22
    lista                          shift and go to state 23
    lsimplem                       shift and go to state 24
    lcomp                          shift and go to state 25
    condicionL                     shift and go to state 26
    condicionR                     shift and go to state 27
    condicionN                     shift and go to state 28
    factor                         shift and go to state 32
    queue_add                      shift and go to state 37
    queue_peek                     shift and go to state 38
    queue_remove                   shift and go to state 39
    queue_poll                     shift and go to state 40

state 212

    (105) while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .

    $end            reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    PRINT           reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    PRINTLN         reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    VAR             reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    VAL             reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    ID              reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    LPAREN          reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    FOR             reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    IF              reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    WHILE           reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    ARRAYLIST       reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    STACK           reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    EXCL_WS         reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    INT             reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    FLOAT           reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    LONG            reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    CHAR            reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    BOOLEAN         reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    STRING_1        reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    SEMICOLON       reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)
    RCURL           reduce using rule 105 (while -> WHILE LPAREN ID opR INT RPAREN LCURL morelines RCURL .)


state 213

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 216


state 214

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (40) tipoDato -> . TINT
    (41) tipoDato -> . TLONG
    (42) tipoDato -> . TFLOAT
    (43) tipoDato -> . TDOUBLE
    (44) tipoDato -> . TBOOLEAN
    (45) tipoDato -> . TCHAR
    (46) tipoDato -> . TSTRING

    TINT            shift and go to state 102
    TLONG           shift and go to state 103
    TFLOAT          shift and go to state 104
    TDOUBLE         shift and go to state 105
    TBOOLEAN        shift and go to state 106
    TCHAR           shift and go to state 107
    TSTRING         shift and go to state 108

    tipoDato                       shift and go to state 217

state 215

    (67) else -> ELSE LCURL line . RCURL

    RCURL           shift and go to state 218


state 216

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 219


state 217

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 220


state 218

    (67) else -> ELSE LCURL line RCURL .

    $end            reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    PRINT           reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    PRINTLN         reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    VAR             reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    VAL             reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    ID              reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    LPAREN          reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    FOR             reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    IF              reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    WHILE           reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    ARRAYLIST       reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    STACK           reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    EXCL_WS         reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    INT             reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    FLOAT           reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    LONG            reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    CHAR            reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    BOOLEAN         reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    STRING_1        reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    SEMICOLON       reduce using rule 67 (else -> ELSE LCURL line RCURL .)
    RCURL           reduce using rule 67 (else -> ELSE LCURL line RCURL .)


state 219

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 221


state 220

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 222


state 221

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 223


state 222

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 224


state 223

    (106) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 106 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 224

    (30) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 30 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: reduce/reduce conflict in state 168 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 168
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced

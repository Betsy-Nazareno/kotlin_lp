Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ANNOTATION
    ARRAYLIST
    ARRAYOF
    ARROW
    AS
    AT_NO_WS
    BREAK
    BY
    CATCH
    CLASS
    COLONCOLON
    COMMA
    COMMENT
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECR
    DECREMENTIN
    DIVIDEIN
    DO
    DOUBLE_ARROW
    DOUBLE_SEMICOLON
    DYNAMIC
    ENUM
    EXCL_NO_WS
    EXPECT
    EXTERNAL
    FIELD
    FILE
    FINAL
    FINALLY
    GET
    HASH
    IMPORT
    INCR
    INCREMENTIN
    INCREMENTTIMES
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LISTOF
    LSQUARE
    MARK_1
    MARK_2
    MODIN
    NOINLINE
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PARAM
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    QUEST_WS
    RANGE
    RECEIVER
    REIFIED
    RETURN
    RSQUARE
    SEALED
    SET
    SETPARAM
    SINGLE_QUOTE
    SUM
    SUPER
    SUSPEND
    TAILREC
    TEMPLATE
    THIS
    THROW
    TRY
    TYPEOF
    TYPE_ALIAS
    VALUE
    VAL_TIPO_1
    VARARG
    VAR_TIPO_1
    WHEN
    WHERE

Grammar

Rule 0     S' -> line
Rule 1     line -> blocks
Rule 2     line -> blocks SEMICOLON
Rule 3     line -> blocks LINEBREAK
Rule 4     line -> blocks LINEBREAK line
Rule 5     line -> blocks LINEBREAK line LINEBREAK
Rule 6     line -> blocks SEMICOLON LINEBREAK
Rule 7     line -> blocks SEMICOLON LINEBREAK line
Rule 8     line -> blocks SEMICOLON LINEBREAK line LINEBREAK
Rule 9     line -> LINEBREAK
Rule 10    blocks -> impresion
Rule 11    blocks -> expression
Rule 12    blocks -> estructurasControl
Rule 13    blocks -> condicion
Rule 14    blocks -> funcion
Rule 15    blocks -> asignacion
Rule 16    blocks -> estructurasDatos
Rule 17    estructurasDatos -> queue
Rule 18    estructurasDatos -> queue_operations
Rule 19    estructurasDatos -> stack
Rule 20    estructurasDatos -> stack_actuar
Rule 21    estructurasDatos -> instance_linkedlist
Rule 22    estructurasDatos -> def_estruct_tipoDato
Rule 23    estructurasDatos -> lista
Rule 24    estructurasDatos -> lsimplem
Rule 25    estructurasDatos -> lcomp
Rule 26    estructurasControl -> for
Rule 27    estructurasControl -> if
Rule 28    estructurasControl -> while
Rule 29    queue_operations -> queue_add
Rule 30    queue_operations -> queue_peek
Rule 31    queue_operations -> queue_remove
Rule 32    queue_operations -> queue_poll
Rule 33    queue_add -> ID DOT ADD LPAREN factor RPAREN
Rule 34    queue_peek -> ID DOT PEEK LPAREN RPAREN
Rule 35    queue_poll -> ID DOT POLL LPAREN RPAREN
Rule 36    queue_remove -> ID DOT REMOVE LPAREN RPAREN
Rule 37    impresion -> PRINT LPAREN expression RPAREN
Rule 38    impresion -> PRINTLN LPAREN expression RPAREN
Rule 39    funcion -> PRINT LPAREN error RPAREN
Rule 40    queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
Rule 41    for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
Rule 42    iterable -> ID
Rule 43    iterable -> INT THREEDOTS INT
Rule 44    iterable -> ID DOT INDICES
Rule 45    asignacion -> keywordVariables asignacionSimple
Rule 46    asignacion -> asignacionSimple
Rule 47    keywordVariables -> VAR
Rule 48    keywordVariables -> VAL
Rule 49    asignacionSimple -> ID DOTS tipoDatoEspecifico
Rule 50    asignacionSimple -> ID EQUAL valor
Rule 51    tipoDatoEspecifico -> TINT EQUAL INT
Rule 52    tipoDatoEspecifico -> TLONG EQUAL LONG
Rule 53    tipoDatoEspecifico -> TFLOAT EQUAL FLOAT
Rule 54    tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN
Rule 55    tipoDatoEspecifico -> TCHAR EQUAL CHAR
Rule 56    tipoDatoEspecifico -> TSTRING EQUAL STRING_1
Rule 57    tipoDato -> TINT
Rule 58    tipoDato -> TLONG
Rule 59    tipoDato -> TFLOAT
Rule 60    tipoDato -> TDOUBLE
Rule 61    tipoDato -> TBOOLEAN
Rule 62    tipoDato -> TCHAR
Rule 63    tipoDato -> TSTRING
Rule 64    valor -> expression
Rule 65    expression -> expression PLUS term
Rule 66    expression -> expression MINUS term
Rule 67    expression -> expression TIMES term
Rule 68    expression -> expression DIVIDE term
Rule 69    expression -> expression MOD term
Rule 70    expression -> expression INCREMENTONE
Rule 71    expression -> expression DECREMENTONE
Rule 72    expression -> term
Rule 73    term -> factor
Rule 74    term -> LPAREN expression RPAREN
Rule 75    factor -> INT
Rule 76    factor -> FLOAT
Rule 77    factor -> LONG
Rule 78    factor -> CHAR
Rule 79    factor -> BOOLEAN
Rule 80    factor -> ID
Rule 81    factor -> STRING_1
Rule 82    funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
Rule 83    funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
Rule 84    funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL
Rule 85    funcion -> FUN ID LPAREN RPAREN LCURL RCURL
Rule 86    funcion -> FUN ID LPAREN RPAREN LCURL error RCURL
Rule 87    lineorBreak -> line
Rule 88    lineorBreak -> LINEBREAK line LINEBREAK
Rule 89    lineorBreak -> LINEBREAK line
Rule 90    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
Rule 91    if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
Rule 92    else -> ELSE LCURL lineorBreak RCURL
Rule 93    condicion -> condicionL
Rule 94    condicion -> condicionR
Rule 95    condicion -> condicionN
Rule 96    condicionL -> BOOLEAN opL BOOLEAN
Rule 97    condicionL -> ID opL ID
Rule 98    condicionL -> ID opL BOOLEAN
Rule 99    condicionL -> BOOLEAN opL ID
Rule 100   condicionR -> INT opR INT
Rule 101   condicionR -> INT opR FLOAT
Rule 102   condicionR -> INT opR LONG
Rule 103   condicionR -> INT opR ID
Rule 104   condicionR -> FLOAT opR FLOAT
Rule 105   condicionR -> FLOAT opR INT
Rule 106   condicionR -> FLOAT opR LONG
Rule 107   condicionR -> FLOAT opR ID
Rule 108   condicionR -> LONG opR LONG
Rule 109   condicionR -> LONG opR INT
Rule 110   condicionR -> LONG opR FLOAT
Rule 111   condicionR -> LONG opR ID
Rule 112   condicionR -> STRING_1 opR STRING_1
Rule 113   condicionR -> STRING_1 opR ID
Rule 114   condicionR -> CHAR opR CHAR
Rule 115   condicionR -> CHAR opR ID
Rule 116   condicionR -> ID opR ID
Rule 117   condicionR -> ID opR INT
Rule 118   condicionR -> ID opR FLOAT
Rule 119   condicionR -> ID opR LONG
Rule 120   condicionR -> ID opR STRING_1
Rule 121   condicionR -> ID opR CHAR
Rule 122   condicionN -> EXCL_WS BOOLEAN
Rule 123   condicionN -> EXCL_WS ID
Rule 124   opL -> CONJ
Rule 125   opL -> DISJ
Rule 126   opR -> LANGLE
Rule 127   opR -> RANGLE
Rule 128   opR -> LE
Rule 129   opR -> GE
Rule 130   opR -> EXCL_EQ
Rule 131   opR -> EXCL_EQEQ
Rule 132   opR -> AS_SAFE
Rule 133   opR -> EQEQ
Rule 134   opR -> EQEQEQ
Rule 135   stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
Rule 136   def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE
Rule 137   instance_linkedlist -> LINKEDL LPAREN RPAREN
Rule 138   stack_actuar -> ID DOT stack_funciones
Rule 139   stack_funciones -> stack_isEmpty
Rule 140   stack_funciones -> stack_push
Rule 141   stack_funciones -> stack_pop
Rule 142   stack_funciones -> stack_peek
Rule 143   stack_funciones -> stack_size
Rule 144   stack_isEmpty -> ISEMPTY LPAREN RPAREN
Rule 145   stack_pop -> POP LPAREN RPAREN
Rule 146   stack_push -> PUSH LPAREN factor RPAREN
Rule 147   stack_peek -> PEEK LPAREN RPAREN
Rule 148   stack_size -> SIZE LPAREN RPAREN
Rule 149   Lmetod -> FIRST LPAREN RPAREN
Rule 150   Lmetod -> LAST LPAREN RPAREN
Rule 151   Lmetod -> REMOVEL LPAREN RPAREN
Rule 152   Cmetod -> APPEND LPAREN OBJECT RPAREN
Rule 153   Cmetod -> REMOVEN LPAREN OBJECT RPAREN
Rule 154   Cmetod -> REMOVEI LPAREN TINT RPAREN
Rule 155   while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
Rule 156   lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
Rule 157   lsimplem -> ID DOT Lmetod
Rule 158   lcomp -> ID DOT Cmetod

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADD                  : 33
ANNOTATION           : 
APPEND               : 152
ARRAYLIST            : 
ARRAYOF              : 
ARROW                : 
AS                   : 
AS_SAFE              : 132
AT_NO_WS             : 
BOOLEAN              : 54 79 96 96 98 99 122
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 55 78 114 114 115 121
CLASS                : 
COLONCOLON           : 
COMMA                : 
COMMENT              : 
COMPANION            : 
CONJ                 : 124
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECR                 : 
DECREMENTIN          : 
DECREMENTONE         : 71
DISJ                 : 125
DIVIDE               : 68
DIVIDEIN             : 
DO                   : 
DOT                  : 33 34 35 36 44 138 157 158
DOTS                 : 40 49 135 156
DOUBLE_ARROW         : 
DOUBLE_SEMICOLON     : 
DYNAMIC              : 
ELSE                 : 92
ENUM                 : 
EQEQ                 : 133
EQEQEQ               : 134
EQUAL                : 40 50 51 52 53 54 55 56 135 156
EXCL_EQ              : 130
EXCL_EQEQ            : 131
EXCL_NO_WS           : 
EXCL_WS              : 122 123
EXPECT               : 
EXTERNAL             : 
FIELD                : 
FILE                 : 
FINAL                : 
FINALLY              : 
FIRST                : 149
FLOAT                : 53 76 101 104 104 105 106 107 110 118
FOR                  : 41
FUN                  : 82 83 84 85 86
GE                   : 129
GET                  : 
HASH                 : 
ID                   : 33 34 35 36 40 41 42 44 49 50 80 82 83 83 84 84 85 86 97 97 98 99 103 107 111 113 115 116 116 117 118 119 120 121 123 135 138 155 156 157 158
IF                   : 90 91
IMPORT               : 
IN                   : 41
INCR                 : 
INCREMENTIN          : 
INCREMENTONE         : 70
INCREMENTTIMES       : 
INDICES              : 44
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INT                  : 43 43 51 75 100 100 101 102 103 105 109 117 155
INTERFACE            : 
INTERNAL             : 
IS                   : 
ISEMPTY              : 144
LANGLE               : 40 40 126 136 156 156
LAST                 : 150
LATEINIT             : 
LCURL                : 41 82 83 84 85 86 90 91 92 155
LE                   : 128
LINEBREAK            : 3 4 5 5 6 7 8 8 9 88 88 89
LINKEDL              : 40 137 156 156
LISTOF               : 
LONG                 : 52 77 102 106 108 108 109 110 111 119
LPAREN               : 33 34 35 36 37 38 39 40 41 74 82 83 84 85 86 90 91 137 144 145 146 147 148 149 150 151 152 153 154 155 156
LSQUARE              : 
MARK_1               : 
MARK_2               : 
MINUS                : 66
MOD                  : 69
MODIN                : 
NOINLINE             : 
OBJECT               : 152 153 156 156
OPEN                 : 
OPERATOR             : 
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PARAM                : 
PEEK                 : 34 147
PLUS                 : 65
POLL                 : 35
POP                  : 145
PRINT                : 37 39
PRINTLN              : 38
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUSH                 : 146
QUEST_WS             : 
QUEUE                : 40
RANGE                : 
RANGLE               : 40 40 127 136 156 156
RCURL                : 41 82 83 84 85 86 90 91 92 155
RECEIVER             : 
REIFIED              : 
REMOVE               : 36
REMOVEI              : 154
REMOVEL              : 151
REMOVEN              : 153
RETURN               : 
RPAREN               : 33 34 35 36 37 38 39 40 41 74 82 83 84 85 86 90 91 137 144 145 146 147 148 149 150 151 152 153 154 155 156
RSQUARE              : 
SEALED               : 
SEMICOLON            : 2 6 7 8
SET                  : 
SETPARAM             : 
SINGLE_QUOTE         : 
SIZE                 : 148
STACK                : 136
STRING_1             : 56 81 112 112 113 120
SUM                  : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
TBOOLEAN             : 54 61
TCHAR                : 55 62
TDOUBLE              : 60
TEMPLATE             : 
TFLOAT               : 53 59
THIS                 : 
THREEDOTS            : 43
THROW                : 
TIMES                : 67
TINT                 : 51 57 154
TLONG                : 52 58
TRY                  : 
TSTRING              : 56 63
TYPEOF               : 
TYPE_ALIAS           : 
VAL                  : 40 48
VALUE                : 
VAL_TIPO_1           : 
VAR                  : 47
VARARG               : 
VAR_TIPO_1           : 
WHEN                 : 
WHERE                : 
WHILE                : 155
error                : 39 86

Nonterminals, with rules where they appear

Cmetod               : 158
Lmetod               : 157
asignacion           : 15
asignacionSimple     : 45 46
blocks               : 1 2 3 4 5 6 7 8
condicion            : 13 90 91
condicionL           : 93
condicionN           : 95
condicionR           : 94
def_estruct_tipoDato : 22 135
else                 : 91
estructurasControl   : 12
estructurasDatos     : 16
expression           : 11 37 38 64 65 66 67 68 69 70 71 74
factor               : 33 73 146
for                  : 26
funcion              : 14
if                   : 27
impresion            : 10
instance_linkedlist  : 21 135
iterable             : 41
keywordVariables     : 45 135 156
lcomp                : 25
line                 : 4 5 7 8 87 88 89 0
lineorBreak          : 41 82 83 90 91 92 155
lista                : 23
lsimplem             : 24
opL                  : 96 97 98 99
opR                  : 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 155
queue                : 17
queue_add            : 29
queue_operations     : 18
queue_peek           : 30
queue_poll           : 32
queue_remove         : 31
stack                : 19
stack_actuar         : 20
stack_funciones      : 138
stack_isEmpty        : 139
stack_peek           : 142
stack_pop            : 141
stack_push           : 140
stack_size           : 143
term                 : 65 66 67 68 69 72
tipoDato             : 40 40 136
tipoDatoEspecifico   : 49
valor                : 50
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 1
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 1

    (0) S' -> line .



state 2

    (1) line -> blocks .
    (2) line -> blocks . SEMICOLON
    (3) line -> blocks . LINEBREAK
    (4) line -> blocks . LINEBREAK line
    (5) line -> blocks . LINEBREAK line LINEBREAK
    (6) line -> blocks . SEMICOLON LINEBREAK
    (7) line -> blocks . SEMICOLON LINEBREAK line
    (8) line -> blocks . SEMICOLON LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 1 (line -> blocks .)
    RCURL           reduce using rule 1 (line -> blocks .)
    SEMICOLON       shift and go to state 53
    LINEBREAK       shift and go to state 54

  ! LINEBREAK       [ reduce using rule 1 (line -> blocks .) ]


state 3

    (9) line -> LINEBREAK .

    $end            reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       reduce using rule 9 (line -> LINEBREAK .)
    RCURL           reduce using rule 9 (line -> LINEBREAK .)


state 4

    (10) blocks -> impresion .

    SEMICOLON       reduce using rule 10 (blocks -> impresion .)
    LINEBREAK       reduce using rule 10 (blocks -> impresion .)
    $end            reduce using rule 10 (blocks -> impresion .)
    RCURL           reduce using rule 10 (blocks -> impresion .)


state 5

    (11) blocks -> expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (67) expression -> expression . TIMES term
    (68) expression -> expression . DIVIDE term
    (69) expression -> expression . MOD term
    (70) expression -> expression . INCREMENTONE
    (71) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 11 (blocks -> expression .)
    LINEBREAK       reduce using rule 11 (blocks -> expression .)
    $end            reduce using rule 11 (blocks -> expression .)
    RCURL           reduce using rule 11 (blocks -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 6

    (12) blocks -> estructurasControl .

    SEMICOLON       reduce using rule 12 (blocks -> estructurasControl .)
    LINEBREAK       reduce using rule 12 (blocks -> estructurasControl .)
    $end            reduce using rule 12 (blocks -> estructurasControl .)
    RCURL           reduce using rule 12 (blocks -> estructurasControl .)


state 7

    (13) blocks -> condicion .

    SEMICOLON       reduce using rule 13 (blocks -> condicion .)
    LINEBREAK       reduce using rule 13 (blocks -> condicion .)
    $end            reduce using rule 13 (blocks -> condicion .)
    RCURL           reduce using rule 13 (blocks -> condicion .)


state 8

    (14) blocks -> funcion .

    SEMICOLON       reduce using rule 14 (blocks -> funcion .)
    LINEBREAK       reduce using rule 14 (blocks -> funcion .)
    $end            reduce using rule 14 (blocks -> funcion .)
    RCURL           reduce using rule 14 (blocks -> funcion .)


state 9

    (15) blocks -> asignacion .

    SEMICOLON       reduce using rule 15 (blocks -> asignacion .)
    LINEBREAK       reduce using rule 15 (blocks -> asignacion .)
    $end            reduce using rule 15 (blocks -> asignacion .)
    RCURL           reduce using rule 15 (blocks -> asignacion .)


state 10

    (16) blocks -> estructurasDatos .

    SEMICOLON       reduce using rule 16 (blocks -> estructurasDatos .)
    LINEBREAK       reduce using rule 16 (blocks -> estructurasDatos .)
    $end            reduce using rule 16 (blocks -> estructurasDatos .)
    RCURL           reduce using rule 16 (blocks -> estructurasDatos .)


state 11

    (37) impresion -> PRINT . LPAREN expression RPAREN
    (39) funcion -> PRINT . LPAREN error RPAREN

    LPAREN          shift and go to state 62


state 12

    (74) term -> LPAREN . expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 63
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 13

    (38) impresion -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 71


state 14

    (72) expression -> term .

    PLUS            reduce using rule 72 (expression -> term .)
    MINUS           reduce using rule 72 (expression -> term .)
    TIMES           reduce using rule 72 (expression -> term .)
    DIVIDE          reduce using rule 72 (expression -> term .)
    MOD             reduce using rule 72 (expression -> term .)
    INCREMENTONE    reduce using rule 72 (expression -> term .)
    DECREMENTONE    reduce using rule 72 (expression -> term .)
    SEMICOLON       reduce using rule 72 (expression -> term .)
    LINEBREAK       reduce using rule 72 (expression -> term .)
    $end            reduce using rule 72 (expression -> term .)
    RPAREN          reduce using rule 72 (expression -> term .)
    RCURL           reduce using rule 72 (expression -> term .)


state 15

    (26) estructurasControl -> for .

    SEMICOLON       reduce using rule 26 (estructurasControl -> for .)
    LINEBREAK       reduce using rule 26 (estructurasControl -> for .)
    $end            reduce using rule 26 (estructurasControl -> for .)
    RCURL           reduce using rule 26 (estructurasControl -> for .)


state 16

    (27) estructurasControl -> if .

    SEMICOLON       reduce using rule 27 (estructurasControl -> if .)
    LINEBREAK       reduce using rule 27 (estructurasControl -> if .)
    $end            reduce using rule 27 (estructurasControl -> if .)
    RCURL           reduce using rule 27 (estructurasControl -> if .)


state 17

    (28) estructurasControl -> while .

    SEMICOLON       reduce using rule 28 (estructurasControl -> while .)
    LINEBREAK       reduce using rule 28 (estructurasControl -> while .)
    $end            reduce using rule 28 (estructurasControl -> while .)
    RCURL           reduce using rule 28 (estructurasControl -> while .)


state 18

    (93) condicion -> condicionL .

    SEMICOLON       reduce using rule 93 (condicion -> condicionL .)
    LINEBREAK       reduce using rule 93 (condicion -> condicionL .)
    $end            reduce using rule 93 (condicion -> condicionL .)
    RCURL           reduce using rule 93 (condicion -> condicionL .)
    RPAREN          reduce using rule 93 (condicion -> condicionL .)


state 19

    (94) condicion -> condicionR .

    SEMICOLON       reduce using rule 94 (condicion -> condicionR .)
    LINEBREAK       reduce using rule 94 (condicion -> condicionR .)
    $end            reduce using rule 94 (condicion -> condicionR .)
    RCURL           reduce using rule 94 (condicion -> condicionR .)
    RPAREN          reduce using rule 94 (condicion -> condicionR .)


state 20

    (95) condicion -> condicionN .

    SEMICOLON       reduce using rule 95 (condicion -> condicionN .)
    LINEBREAK       reduce using rule 95 (condicion -> condicionN .)
    $end            reduce using rule 95 (condicion -> condicionN .)
    RCURL           reduce using rule 95 (condicion -> condicionN .)
    RPAREN          reduce using rule 95 (condicion -> condicionN .)


state 21

    (82) funcion -> FUN . ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> FUN . ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> FUN . ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> FUN . ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> FUN . ID LPAREN RPAREN LCURL error RCURL

    ID              shift and go to state 72


state 22

    (97) condicionL -> ID . opL ID
    (98) condicionL -> ID . opL BOOLEAN
    (116) condicionR -> ID . opR ID
    (117) condicionR -> ID . opR INT
    (118) condicionR -> ID . opR FLOAT
    (119) condicionR -> ID . opR LONG
    (120) condicionR -> ID . opR STRING_1
    (121) condicionR -> ID . opR CHAR
    (49) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (50) asignacionSimple -> ID . EQUAL valor
    (138) stack_actuar -> ID . DOT stack_funciones
    (157) lsimplem -> ID . DOT Lmetod
    (158) lcomp -> ID . DOT Cmetod
    (80) factor -> ID .
    (33) queue_add -> ID . DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> ID . DOT PEEK LPAREN RPAREN
    (36) queue_remove -> ID . DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> ID . DOT POLL LPAREN RPAREN
    (124) opL -> . CONJ
    (125) opL -> . DISJ
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    DOTS            shift and go to state 75
    EQUAL           shift and go to state 76
    DOT             shift and go to state 77
    PLUS            reduce using rule 80 (factor -> ID .)
    MINUS           reduce using rule 80 (factor -> ID .)
    TIMES           reduce using rule 80 (factor -> ID .)
    DIVIDE          reduce using rule 80 (factor -> ID .)
    MOD             reduce using rule 80 (factor -> ID .)
    INCREMENTONE    reduce using rule 80 (factor -> ID .)
    DECREMENTONE    reduce using rule 80 (factor -> ID .)
    SEMICOLON       reduce using rule 80 (factor -> ID .)
    LINEBREAK       reduce using rule 80 (factor -> ID .)
    $end            reduce using rule 80 (factor -> ID .)
    RCURL           reduce using rule 80 (factor -> ID .)
    CONJ            shift and go to state 78
    DISJ            shift and go to state 79
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opL                            shift and go to state 73
    opR                            shift and go to state 74

state 23

    (45) asignacion -> keywordVariables . asignacionSimple
    (135) stack -> keywordVariables . ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (156) lista -> keywordVariables . ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor

    ID              shift and go to state 90

    asignacionSimple               shift and go to state 89

state 24

    (46) asignacion -> asignacionSimple .

    SEMICOLON       reduce using rule 46 (asignacion -> asignacionSimple .)
    LINEBREAK       reduce using rule 46 (asignacion -> asignacionSimple .)
    $end            reduce using rule 46 (asignacion -> asignacionSimple .)
    RCURL           reduce using rule 46 (asignacion -> asignacionSimple .)


state 25

    (17) estructurasDatos -> queue .

    SEMICOLON       reduce using rule 17 (estructurasDatos -> queue .)
    LINEBREAK       reduce using rule 17 (estructurasDatos -> queue .)
    $end            reduce using rule 17 (estructurasDatos -> queue .)
    RCURL           reduce using rule 17 (estructurasDatos -> queue .)


state 26

    (18) estructurasDatos -> queue_operations .

    SEMICOLON       reduce using rule 18 (estructurasDatos -> queue_operations .)
    LINEBREAK       reduce using rule 18 (estructurasDatos -> queue_operations .)
    $end            reduce using rule 18 (estructurasDatos -> queue_operations .)
    RCURL           reduce using rule 18 (estructurasDatos -> queue_operations .)


state 27

    (19) estructurasDatos -> stack .

    SEMICOLON       reduce using rule 19 (estructurasDatos -> stack .)
    LINEBREAK       reduce using rule 19 (estructurasDatos -> stack .)
    $end            reduce using rule 19 (estructurasDatos -> stack .)
    RCURL           reduce using rule 19 (estructurasDatos -> stack .)


state 28

    (20) estructurasDatos -> stack_actuar .

    SEMICOLON       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    LINEBREAK       reduce using rule 20 (estructurasDatos -> stack_actuar .)
    $end            reduce using rule 20 (estructurasDatos -> stack_actuar .)
    RCURL           reduce using rule 20 (estructurasDatos -> stack_actuar .)


state 29

    (21) estructurasDatos -> instance_linkedlist .

    SEMICOLON       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    LINEBREAK       reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    $end            reduce using rule 21 (estructurasDatos -> instance_linkedlist .)
    RCURL           reduce using rule 21 (estructurasDatos -> instance_linkedlist .)


state 30

    (22) estructurasDatos -> def_estruct_tipoDato .

    SEMICOLON       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    LINEBREAK       reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    $end            reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)
    RCURL           reduce using rule 22 (estructurasDatos -> def_estruct_tipoDato .)


state 31

    (23) estructurasDatos -> lista .

    SEMICOLON       reduce using rule 23 (estructurasDatos -> lista .)
    LINEBREAK       reduce using rule 23 (estructurasDatos -> lista .)
    $end            reduce using rule 23 (estructurasDatos -> lista .)
    RCURL           reduce using rule 23 (estructurasDatos -> lista .)


state 32

    (24) estructurasDatos -> lsimplem .

    SEMICOLON       reduce using rule 24 (estructurasDatos -> lsimplem .)
    LINEBREAK       reduce using rule 24 (estructurasDatos -> lsimplem .)
    $end            reduce using rule 24 (estructurasDatos -> lsimplem .)
    RCURL           reduce using rule 24 (estructurasDatos -> lsimplem .)


state 33

    (25) estructurasDatos -> lcomp .

    SEMICOLON       reduce using rule 25 (estructurasDatos -> lcomp .)
    LINEBREAK       reduce using rule 25 (estructurasDatos -> lcomp .)
    $end            reduce using rule 25 (estructurasDatos -> lcomp .)
    RCURL           reduce using rule 25 (estructurasDatos -> lcomp .)


state 34

    (73) term -> factor .

    PLUS            reduce using rule 73 (term -> factor .)
    MINUS           reduce using rule 73 (term -> factor .)
    TIMES           reduce using rule 73 (term -> factor .)
    DIVIDE          reduce using rule 73 (term -> factor .)
    MOD             reduce using rule 73 (term -> factor .)
    INCREMENTONE    reduce using rule 73 (term -> factor .)
    DECREMENTONE    reduce using rule 73 (term -> factor .)
    SEMICOLON       reduce using rule 73 (term -> factor .)
    LINEBREAK       reduce using rule 73 (term -> factor .)
    $end            reduce using rule 73 (term -> factor .)
    RPAREN          reduce using rule 73 (term -> factor .)
    RCURL           reduce using rule 73 (term -> factor .)


state 35

    (41) for -> FOR . LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 91


state 36

    (90) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> IF . LPAREN condicion RPAREN LCURL lineorBreak RCURL else

    LPAREN          shift and go to state 92


state 37

    (155) while -> WHILE . LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL

    LPAREN          shift and go to state 93


state 38

    (100) condicionR -> INT . opR INT
    (101) condicionR -> INT . opR FLOAT
    (102) condicionR -> INT . opR LONG
    (103) condicionR -> INT . opR ID
    (75) factor -> INT .
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    PLUS            reduce using rule 75 (factor -> INT .)
    MINUS           reduce using rule 75 (factor -> INT .)
    TIMES           reduce using rule 75 (factor -> INT .)
    DIVIDE          reduce using rule 75 (factor -> INT .)
    MOD             reduce using rule 75 (factor -> INT .)
    INCREMENTONE    reduce using rule 75 (factor -> INT .)
    DECREMENTONE    reduce using rule 75 (factor -> INT .)
    SEMICOLON       reduce using rule 75 (factor -> INT .)
    LINEBREAK       reduce using rule 75 (factor -> INT .)
    $end            reduce using rule 75 (factor -> INT .)
    RCURL           reduce using rule 75 (factor -> INT .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 94

state 39

    (96) condicionL -> BOOLEAN . opL BOOLEAN
    (99) condicionL -> BOOLEAN . opL ID
    (79) factor -> BOOLEAN .
    (124) opL -> . CONJ
    (125) opL -> . DISJ

    PLUS            reduce using rule 79 (factor -> BOOLEAN .)
    MINUS           reduce using rule 79 (factor -> BOOLEAN .)
    TIMES           reduce using rule 79 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 79 (factor -> BOOLEAN .)
    MOD             reduce using rule 79 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 79 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 79 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 79 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 79 (factor -> BOOLEAN .)
    $end            reduce using rule 79 (factor -> BOOLEAN .)
    RCURL           reduce using rule 79 (factor -> BOOLEAN .)
    CONJ            shift and go to state 78
    DISJ            shift and go to state 79

    opL                            shift and go to state 95

state 40

    (104) condicionR -> FLOAT . opR FLOAT
    (105) condicionR -> FLOAT . opR INT
    (106) condicionR -> FLOAT . opR LONG
    (107) condicionR -> FLOAT . opR ID
    (76) factor -> FLOAT .
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    PLUS            reduce using rule 76 (factor -> FLOAT .)
    MINUS           reduce using rule 76 (factor -> FLOAT .)
    TIMES           reduce using rule 76 (factor -> FLOAT .)
    DIVIDE          reduce using rule 76 (factor -> FLOAT .)
    MOD             reduce using rule 76 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 76 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 76 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 76 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 76 (factor -> FLOAT .)
    $end            reduce using rule 76 (factor -> FLOAT .)
    RCURL           reduce using rule 76 (factor -> FLOAT .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 96

state 41

    (108) condicionR -> LONG . opR LONG
    (109) condicionR -> LONG . opR INT
    (110) condicionR -> LONG . opR FLOAT
    (111) condicionR -> LONG . opR ID
    (77) factor -> LONG .
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    PLUS            reduce using rule 77 (factor -> LONG .)
    MINUS           reduce using rule 77 (factor -> LONG .)
    TIMES           reduce using rule 77 (factor -> LONG .)
    DIVIDE          reduce using rule 77 (factor -> LONG .)
    MOD             reduce using rule 77 (factor -> LONG .)
    INCREMENTONE    reduce using rule 77 (factor -> LONG .)
    DECREMENTONE    reduce using rule 77 (factor -> LONG .)
    SEMICOLON       reduce using rule 77 (factor -> LONG .)
    LINEBREAK       reduce using rule 77 (factor -> LONG .)
    $end            reduce using rule 77 (factor -> LONG .)
    RCURL           reduce using rule 77 (factor -> LONG .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 97

state 42

    (112) condicionR -> STRING_1 . opR STRING_1
    (113) condicionR -> STRING_1 . opR ID
    (81) factor -> STRING_1 .
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    PLUS            reduce using rule 81 (factor -> STRING_1 .)
    MINUS           reduce using rule 81 (factor -> STRING_1 .)
    TIMES           reduce using rule 81 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 81 (factor -> STRING_1 .)
    MOD             reduce using rule 81 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 81 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 81 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 81 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 81 (factor -> STRING_1 .)
    $end            reduce using rule 81 (factor -> STRING_1 .)
    RCURL           reduce using rule 81 (factor -> STRING_1 .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 98

state 43

    (114) condicionR -> CHAR . opR CHAR
    (115) condicionR -> CHAR . opR ID
    (78) factor -> CHAR .
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    PLUS            reduce using rule 78 (factor -> CHAR .)
    MINUS           reduce using rule 78 (factor -> CHAR .)
    TIMES           reduce using rule 78 (factor -> CHAR .)
    DIVIDE          reduce using rule 78 (factor -> CHAR .)
    MOD             reduce using rule 78 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 78 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 78 (factor -> CHAR .)
    SEMICOLON       reduce using rule 78 (factor -> CHAR .)
    LINEBREAK       reduce using rule 78 (factor -> CHAR .)
    $end            reduce using rule 78 (factor -> CHAR .)
    RCURL           reduce using rule 78 (factor -> CHAR .)
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 99

state 44

    (122) condicionN -> EXCL_WS . BOOLEAN
    (123) condicionN -> EXCL_WS . ID

    BOOLEAN         shift and go to state 100
    ID              shift and go to state 101


state 45

    (47) keywordVariables -> VAR .

    ID              reduce using rule 47 (keywordVariables -> VAR .)


state 46

    (48) keywordVariables -> VAL .
    (40) queue -> VAL . ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 102

  ! ID              [ reduce using rule 48 (keywordVariables -> VAL .) ]


state 47

    (137) instance_linkedlist -> LINKEDL . LPAREN RPAREN

    LPAREN          shift and go to state 103


state 48

    (29) queue_operations -> queue_add .

    SEMICOLON       reduce using rule 29 (queue_operations -> queue_add .)
    LINEBREAK       reduce using rule 29 (queue_operations -> queue_add .)
    $end            reduce using rule 29 (queue_operations -> queue_add .)
    RCURL           reduce using rule 29 (queue_operations -> queue_add .)


state 49

    (30) queue_operations -> queue_peek .

    SEMICOLON       reduce using rule 30 (queue_operations -> queue_peek .)
    LINEBREAK       reduce using rule 30 (queue_operations -> queue_peek .)
    $end            reduce using rule 30 (queue_operations -> queue_peek .)
    RCURL           reduce using rule 30 (queue_operations -> queue_peek .)


state 50

    (31) queue_operations -> queue_remove .

    SEMICOLON       reduce using rule 31 (queue_operations -> queue_remove .)
    LINEBREAK       reduce using rule 31 (queue_operations -> queue_remove .)
    $end            reduce using rule 31 (queue_operations -> queue_remove .)
    RCURL           reduce using rule 31 (queue_operations -> queue_remove .)


state 51

    (32) queue_operations -> queue_poll .

    SEMICOLON       reduce using rule 32 (queue_operations -> queue_poll .)
    LINEBREAK       reduce using rule 32 (queue_operations -> queue_poll .)
    $end            reduce using rule 32 (queue_operations -> queue_poll .)
    RCURL           reduce using rule 32 (queue_operations -> queue_poll .)


state 52

    (136) def_estruct_tipoDato -> STACK . LANGLE tipoDato RANGLE

    LANGLE          shift and go to state 104


state 53

    (2) line -> blocks SEMICOLON .
    (6) line -> blocks SEMICOLON . LINEBREAK
    (7) line -> blocks SEMICOLON . LINEBREAK line
    (8) line -> blocks SEMICOLON . LINEBREAK line LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 2 (line -> blocks SEMICOLON .)
    RCURL           reduce using rule 2 (line -> blocks SEMICOLON .)
    LINEBREAK       shift and go to state 105

  ! LINEBREAK       [ reduce using rule 2 (line -> blocks SEMICOLON .) ]


state 54

    (3) line -> blocks LINEBREAK .
    (4) line -> blocks LINEBREAK . line
    (5) line -> blocks LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 3 (line -> blocks LINEBREAK .)
    RCURL           reduce using rule 3 (line -> blocks LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 3 (line -> blocks LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 106
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 55

    (65) expression -> expression PLUS . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 107
    factor                         shift and go to state 34

state 56

    (66) expression -> expression MINUS . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 108
    factor                         shift and go to state 34

state 57

    (67) expression -> expression TIMES . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 109
    factor                         shift and go to state 34

state 58

    (68) expression -> expression DIVIDE . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 110
    factor                         shift and go to state 34

state 59

    (69) expression -> expression MOD . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    term                           shift and go to state 111
    factor                         shift and go to state 34

state 60

    (70) expression -> expression INCREMENTONE .

    PLUS            reduce using rule 70 (expression -> expression INCREMENTONE .)
    MINUS           reduce using rule 70 (expression -> expression INCREMENTONE .)
    TIMES           reduce using rule 70 (expression -> expression INCREMENTONE .)
    DIVIDE          reduce using rule 70 (expression -> expression INCREMENTONE .)
    MOD             reduce using rule 70 (expression -> expression INCREMENTONE .)
    INCREMENTONE    reduce using rule 70 (expression -> expression INCREMENTONE .)
    DECREMENTONE    reduce using rule 70 (expression -> expression INCREMENTONE .)
    SEMICOLON       reduce using rule 70 (expression -> expression INCREMENTONE .)
    LINEBREAK       reduce using rule 70 (expression -> expression INCREMENTONE .)
    $end            reduce using rule 70 (expression -> expression INCREMENTONE .)
    RPAREN          reduce using rule 70 (expression -> expression INCREMENTONE .)
    RCURL           reduce using rule 70 (expression -> expression INCREMENTONE .)


state 61

    (71) expression -> expression DECREMENTONE .

    PLUS            reduce using rule 71 (expression -> expression DECREMENTONE .)
    MINUS           reduce using rule 71 (expression -> expression DECREMENTONE .)
    TIMES           reduce using rule 71 (expression -> expression DECREMENTONE .)
    DIVIDE          reduce using rule 71 (expression -> expression DECREMENTONE .)
    MOD             reduce using rule 71 (expression -> expression DECREMENTONE .)
    INCREMENTONE    reduce using rule 71 (expression -> expression DECREMENTONE .)
    DECREMENTONE    reduce using rule 71 (expression -> expression DECREMENTONE .)
    SEMICOLON       reduce using rule 71 (expression -> expression DECREMENTONE .)
    LINEBREAK       reduce using rule 71 (expression -> expression DECREMENTONE .)
    $end            reduce using rule 71 (expression -> expression DECREMENTONE .)
    RPAREN          reduce using rule 71 (expression -> expression DECREMENTONE .)
    RCURL           reduce using rule 71 (expression -> expression DECREMENTONE .)


state 62

    (37) impresion -> PRINT LPAREN . expression RPAREN
    (39) funcion -> PRINT LPAREN . error RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    error           shift and go to state 113
    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 112
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 63

    (74) term -> LPAREN expression . RPAREN
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (67) expression -> expression . TIMES term
    (68) expression -> expression . DIVIDE term
    (69) expression -> expression . MOD term
    (70) expression -> expression . INCREMENTONE
    (71) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 114
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 64

    (75) factor -> INT .

    RPAREN          reduce using rule 75 (factor -> INT .)
    PLUS            reduce using rule 75 (factor -> INT .)
    MINUS           reduce using rule 75 (factor -> INT .)
    TIMES           reduce using rule 75 (factor -> INT .)
    DIVIDE          reduce using rule 75 (factor -> INT .)
    MOD             reduce using rule 75 (factor -> INT .)
    INCREMENTONE    reduce using rule 75 (factor -> INT .)
    DECREMENTONE    reduce using rule 75 (factor -> INT .)
    SEMICOLON       reduce using rule 75 (factor -> INT .)
    LINEBREAK       reduce using rule 75 (factor -> INT .)
    $end            reduce using rule 75 (factor -> INT .)
    RCURL           reduce using rule 75 (factor -> INT .)


state 65

    (76) factor -> FLOAT .

    RPAREN          reduce using rule 76 (factor -> FLOAT .)
    PLUS            reduce using rule 76 (factor -> FLOAT .)
    MINUS           reduce using rule 76 (factor -> FLOAT .)
    TIMES           reduce using rule 76 (factor -> FLOAT .)
    DIVIDE          reduce using rule 76 (factor -> FLOAT .)
    MOD             reduce using rule 76 (factor -> FLOAT .)
    INCREMENTONE    reduce using rule 76 (factor -> FLOAT .)
    DECREMENTONE    reduce using rule 76 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 76 (factor -> FLOAT .)
    LINEBREAK       reduce using rule 76 (factor -> FLOAT .)
    $end            reduce using rule 76 (factor -> FLOAT .)
    RCURL           reduce using rule 76 (factor -> FLOAT .)


state 66

    (77) factor -> LONG .

    RPAREN          reduce using rule 77 (factor -> LONG .)
    PLUS            reduce using rule 77 (factor -> LONG .)
    MINUS           reduce using rule 77 (factor -> LONG .)
    TIMES           reduce using rule 77 (factor -> LONG .)
    DIVIDE          reduce using rule 77 (factor -> LONG .)
    MOD             reduce using rule 77 (factor -> LONG .)
    INCREMENTONE    reduce using rule 77 (factor -> LONG .)
    DECREMENTONE    reduce using rule 77 (factor -> LONG .)
    SEMICOLON       reduce using rule 77 (factor -> LONG .)
    LINEBREAK       reduce using rule 77 (factor -> LONG .)
    $end            reduce using rule 77 (factor -> LONG .)
    RCURL           reduce using rule 77 (factor -> LONG .)


state 67

    (78) factor -> CHAR .

    RPAREN          reduce using rule 78 (factor -> CHAR .)
    PLUS            reduce using rule 78 (factor -> CHAR .)
    MINUS           reduce using rule 78 (factor -> CHAR .)
    TIMES           reduce using rule 78 (factor -> CHAR .)
    DIVIDE          reduce using rule 78 (factor -> CHAR .)
    MOD             reduce using rule 78 (factor -> CHAR .)
    INCREMENTONE    reduce using rule 78 (factor -> CHAR .)
    DECREMENTONE    reduce using rule 78 (factor -> CHAR .)
    SEMICOLON       reduce using rule 78 (factor -> CHAR .)
    LINEBREAK       reduce using rule 78 (factor -> CHAR .)
    $end            reduce using rule 78 (factor -> CHAR .)
    RCURL           reduce using rule 78 (factor -> CHAR .)


state 68

    (79) factor -> BOOLEAN .

    RPAREN          reduce using rule 79 (factor -> BOOLEAN .)
    PLUS            reduce using rule 79 (factor -> BOOLEAN .)
    MINUS           reduce using rule 79 (factor -> BOOLEAN .)
    TIMES           reduce using rule 79 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 79 (factor -> BOOLEAN .)
    MOD             reduce using rule 79 (factor -> BOOLEAN .)
    INCREMENTONE    reduce using rule 79 (factor -> BOOLEAN .)
    DECREMENTONE    reduce using rule 79 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 79 (factor -> BOOLEAN .)
    LINEBREAK       reduce using rule 79 (factor -> BOOLEAN .)
    $end            reduce using rule 79 (factor -> BOOLEAN .)
    RCURL           reduce using rule 79 (factor -> BOOLEAN .)


state 69

    (80) factor -> ID .

    RPAREN          reduce using rule 80 (factor -> ID .)
    PLUS            reduce using rule 80 (factor -> ID .)
    MINUS           reduce using rule 80 (factor -> ID .)
    TIMES           reduce using rule 80 (factor -> ID .)
    DIVIDE          reduce using rule 80 (factor -> ID .)
    MOD             reduce using rule 80 (factor -> ID .)
    INCREMENTONE    reduce using rule 80 (factor -> ID .)
    DECREMENTONE    reduce using rule 80 (factor -> ID .)
    SEMICOLON       reduce using rule 80 (factor -> ID .)
    LINEBREAK       reduce using rule 80 (factor -> ID .)
    $end            reduce using rule 80 (factor -> ID .)
    RCURL           reduce using rule 80 (factor -> ID .)


state 70

    (81) factor -> STRING_1 .

    RPAREN          reduce using rule 81 (factor -> STRING_1 .)
    PLUS            reduce using rule 81 (factor -> STRING_1 .)
    MINUS           reduce using rule 81 (factor -> STRING_1 .)
    TIMES           reduce using rule 81 (factor -> STRING_1 .)
    DIVIDE          reduce using rule 81 (factor -> STRING_1 .)
    MOD             reduce using rule 81 (factor -> STRING_1 .)
    INCREMENTONE    reduce using rule 81 (factor -> STRING_1 .)
    DECREMENTONE    reduce using rule 81 (factor -> STRING_1 .)
    SEMICOLON       reduce using rule 81 (factor -> STRING_1 .)
    LINEBREAK       reduce using rule 81 (factor -> STRING_1 .)
    $end            reduce using rule 81 (factor -> STRING_1 .)
    RCURL           reduce using rule 81 (factor -> STRING_1 .)


state 71

    (38) impresion -> PRINTLN LPAREN . expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    expression                     shift and go to state 115
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 72

    (82) funcion -> FUN ID . LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> FUN ID . LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> FUN ID . LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> FUN ID . LPAREN RPAREN LCURL RCURL
    (86) funcion -> FUN ID . LPAREN RPAREN LCURL error RCURL

    LPAREN          shift and go to state 116


state 73

    (97) condicionL -> ID opL . ID
    (98) condicionL -> ID opL . BOOLEAN

    ID              shift and go to state 117
    BOOLEAN         shift and go to state 118


state 74

    (116) condicionR -> ID opR . ID
    (117) condicionR -> ID opR . INT
    (118) condicionR -> ID opR . FLOAT
    (119) condicionR -> ID opR . LONG
    (120) condicionR -> ID opR . STRING_1
    (121) condicionR -> ID opR . CHAR

    ID              shift and go to state 119
    INT             shift and go to state 120
    FLOAT           shift and go to state 121
    LONG            shift and go to state 122
    STRING_1        shift and go to state 123
    CHAR            shift and go to state 124


state 75

    (49) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (51) tipoDatoEspecifico -> . TINT EQUAL INT
    (52) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (53) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (54) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (55) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (56) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    TINT            shift and go to state 126
    TLONG           shift and go to state 127
    TFLOAT          shift and go to state 128
    TBOOLEAN        shift and go to state 129
    TCHAR           shift and go to state 130
    TSTRING         shift and go to state 131

    tipoDatoEspecifico             shift and go to state 125

state 76

    (50) asignacionSimple -> ID EQUAL . valor
    (64) valor -> . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    LPAREN          shift and go to state 12
    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    valor                          shift and go to state 132
    expression                     shift and go to state 133
    term                           shift and go to state 14
    factor                         shift and go to state 34

state 77

    (138) stack_actuar -> ID DOT . stack_funciones
    (157) lsimplem -> ID DOT . Lmetod
    (158) lcomp -> ID DOT . Cmetod
    (33) queue_add -> ID DOT . ADD LPAREN factor RPAREN
    (34) queue_peek -> ID DOT . PEEK LPAREN RPAREN
    (36) queue_remove -> ID DOT . REMOVE LPAREN RPAREN
    (35) queue_poll -> ID DOT . POLL LPAREN RPAREN
    (139) stack_funciones -> . stack_isEmpty
    (140) stack_funciones -> . stack_push
    (141) stack_funciones -> . stack_pop
    (142) stack_funciones -> . stack_peek
    (143) stack_funciones -> . stack_size
    (149) Lmetod -> . FIRST LPAREN RPAREN
    (150) Lmetod -> . LAST LPAREN RPAREN
    (151) Lmetod -> . REMOVEL LPAREN RPAREN
    (152) Cmetod -> . APPEND LPAREN OBJECT RPAREN
    (153) Cmetod -> . REMOVEN LPAREN OBJECT RPAREN
    (154) Cmetod -> . REMOVEI LPAREN TINT RPAREN
    (144) stack_isEmpty -> . ISEMPTY LPAREN RPAREN
    (146) stack_push -> . PUSH LPAREN factor RPAREN
    (145) stack_pop -> . POP LPAREN RPAREN
    (147) stack_peek -> . PEEK LPAREN RPAREN
    (148) stack_size -> . SIZE LPAREN RPAREN

    ADD             shift and go to state 137
    PEEK            shift and go to state 138
    REMOVE          shift and go to state 139
    POLL            shift and go to state 140
    FIRST           shift and go to state 146
    LAST            shift and go to state 147
    REMOVEL         shift and go to state 148
    APPEND          shift and go to state 149
    REMOVEN         shift and go to state 150
    REMOVEI         shift and go to state 151
    ISEMPTY         shift and go to state 152
    PUSH            shift and go to state 153
    POP             shift and go to state 154
    SIZE            shift and go to state 155

    stack_funciones                shift and go to state 134
    Lmetod                         shift and go to state 135
    Cmetod                         shift and go to state 136
    stack_isEmpty                  shift and go to state 141
    stack_push                     shift and go to state 142
    stack_pop                      shift and go to state 143
    stack_peek                     shift and go to state 144
    stack_size                     shift and go to state 145

state 78

    (124) opL -> CONJ .

    ID              reduce using rule 124 (opL -> CONJ .)
    BOOLEAN         reduce using rule 124 (opL -> CONJ .)


state 79

    (125) opL -> DISJ .

    ID              reduce using rule 125 (opL -> DISJ .)
    BOOLEAN         reduce using rule 125 (opL -> DISJ .)


state 80

    (126) opR -> LANGLE .

    ID              reduce using rule 126 (opR -> LANGLE .)
    INT             reduce using rule 126 (opR -> LANGLE .)
    FLOAT           reduce using rule 126 (opR -> LANGLE .)
    LONG            reduce using rule 126 (opR -> LANGLE .)
    STRING_1        reduce using rule 126 (opR -> LANGLE .)
    CHAR            reduce using rule 126 (opR -> LANGLE .)


state 81

    (127) opR -> RANGLE .

    ID              reduce using rule 127 (opR -> RANGLE .)
    INT             reduce using rule 127 (opR -> RANGLE .)
    FLOAT           reduce using rule 127 (opR -> RANGLE .)
    LONG            reduce using rule 127 (opR -> RANGLE .)
    STRING_1        reduce using rule 127 (opR -> RANGLE .)
    CHAR            reduce using rule 127 (opR -> RANGLE .)


state 82

    (128) opR -> LE .

    ID              reduce using rule 128 (opR -> LE .)
    INT             reduce using rule 128 (opR -> LE .)
    FLOAT           reduce using rule 128 (opR -> LE .)
    LONG            reduce using rule 128 (opR -> LE .)
    STRING_1        reduce using rule 128 (opR -> LE .)
    CHAR            reduce using rule 128 (opR -> LE .)


state 83

    (129) opR -> GE .

    ID              reduce using rule 129 (opR -> GE .)
    INT             reduce using rule 129 (opR -> GE .)
    FLOAT           reduce using rule 129 (opR -> GE .)
    LONG            reduce using rule 129 (opR -> GE .)
    STRING_1        reduce using rule 129 (opR -> GE .)
    CHAR            reduce using rule 129 (opR -> GE .)


state 84

    (130) opR -> EXCL_EQ .

    ID              reduce using rule 130 (opR -> EXCL_EQ .)
    INT             reduce using rule 130 (opR -> EXCL_EQ .)
    FLOAT           reduce using rule 130 (opR -> EXCL_EQ .)
    LONG            reduce using rule 130 (opR -> EXCL_EQ .)
    STRING_1        reduce using rule 130 (opR -> EXCL_EQ .)
    CHAR            reduce using rule 130 (opR -> EXCL_EQ .)


state 85

    (131) opR -> EXCL_EQEQ .

    ID              reduce using rule 131 (opR -> EXCL_EQEQ .)
    INT             reduce using rule 131 (opR -> EXCL_EQEQ .)
    FLOAT           reduce using rule 131 (opR -> EXCL_EQEQ .)
    LONG            reduce using rule 131 (opR -> EXCL_EQEQ .)
    STRING_1        reduce using rule 131 (opR -> EXCL_EQEQ .)
    CHAR            reduce using rule 131 (opR -> EXCL_EQEQ .)


state 86

    (132) opR -> AS_SAFE .

    ID              reduce using rule 132 (opR -> AS_SAFE .)
    INT             reduce using rule 132 (opR -> AS_SAFE .)
    FLOAT           reduce using rule 132 (opR -> AS_SAFE .)
    LONG            reduce using rule 132 (opR -> AS_SAFE .)
    STRING_1        reduce using rule 132 (opR -> AS_SAFE .)
    CHAR            reduce using rule 132 (opR -> AS_SAFE .)


state 87

    (133) opR -> EQEQ .

    ID              reduce using rule 133 (opR -> EQEQ .)
    INT             reduce using rule 133 (opR -> EQEQ .)
    FLOAT           reduce using rule 133 (opR -> EQEQ .)
    LONG            reduce using rule 133 (opR -> EQEQ .)
    STRING_1        reduce using rule 133 (opR -> EQEQ .)
    CHAR            reduce using rule 133 (opR -> EQEQ .)


state 88

    (134) opR -> EQEQEQ .

    ID              reduce using rule 134 (opR -> EQEQEQ .)
    INT             reduce using rule 134 (opR -> EQEQEQ .)
    FLOAT           reduce using rule 134 (opR -> EQEQEQ .)
    LONG            reduce using rule 134 (opR -> EQEQEQ .)
    STRING_1        reduce using rule 134 (opR -> EQEQEQ .)
    CHAR            reduce using rule 134 (opR -> EQEQEQ .)


state 89

    (45) asignacion -> keywordVariables asignacionSimple .

    SEMICOLON       reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)
    LINEBREAK       reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)
    $end            reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)
    RCURL           reduce using rule 45 (asignacion -> keywordVariables asignacionSimple .)


state 90

    (135) stack -> keywordVariables ID . DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (156) lista -> keywordVariables ID . DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (49) asignacionSimple -> ID . DOTS tipoDatoEspecifico
    (50) asignacionSimple -> ID . EQUAL valor

    DOTS            shift and go to state 156
    EQUAL           shift and go to state 76


state 91

    (41) for -> FOR LPAREN . ID IN iterable RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 157


state 92

    (90) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> IF LPAREN . condicion RPAREN LCURL lineorBreak RCURL else
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID

    BOOLEAN         shift and go to state 159
    ID              shift and go to state 160
    INT             shift and go to state 161
    FLOAT           shift and go to state 162
    LONG            shift and go to state 163
    STRING_1        shift and go to state 164
    CHAR            shift and go to state 165
    EXCL_WS         shift and go to state 44

    condicion                      shift and go to state 158
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20

state 93

    (155) while -> WHILE LPAREN . ID opR INT RPAREN LCURL lineorBreak RCURL

    ID              shift and go to state 166


state 94

    (100) condicionR -> INT opR . INT
    (101) condicionR -> INT opR . FLOAT
    (102) condicionR -> INT opR . LONG
    (103) condicionR -> INT opR . ID

    INT             shift and go to state 167
    FLOAT           shift and go to state 168
    LONG            shift and go to state 169
    ID              shift and go to state 170


state 95

    (96) condicionL -> BOOLEAN opL . BOOLEAN
    (99) condicionL -> BOOLEAN opL . ID

    BOOLEAN         shift and go to state 171
    ID              shift and go to state 172


state 96

    (104) condicionR -> FLOAT opR . FLOAT
    (105) condicionR -> FLOAT opR . INT
    (106) condicionR -> FLOAT opR . LONG
    (107) condicionR -> FLOAT opR . ID

    FLOAT           shift and go to state 173
    INT             shift and go to state 174
    LONG            shift and go to state 175
    ID              shift and go to state 176


state 97

    (108) condicionR -> LONG opR . LONG
    (109) condicionR -> LONG opR . INT
    (110) condicionR -> LONG opR . FLOAT
    (111) condicionR -> LONG opR . ID

    LONG            shift and go to state 177
    INT             shift and go to state 178
    FLOAT           shift and go to state 179
    ID              shift and go to state 180


state 98

    (112) condicionR -> STRING_1 opR . STRING_1
    (113) condicionR -> STRING_1 opR . ID

    STRING_1        shift and go to state 181
    ID              shift and go to state 182


state 99

    (114) condicionR -> CHAR opR . CHAR
    (115) condicionR -> CHAR opR . ID

    CHAR            shift and go to state 183
    ID              shift and go to state 184


state 100

    (122) condicionN -> EXCL_WS BOOLEAN .

    SEMICOLON       reduce using rule 122 (condicionN -> EXCL_WS BOOLEAN .)
    LINEBREAK       reduce using rule 122 (condicionN -> EXCL_WS BOOLEAN .)
    $end            reduce using rule 122 (condicionN -> EXCL_WS BOOLEAN .)
    RCURL           reduce using rule 122 (condicionN -> EXCL_WS BOOLEAN .)
    RPAREN          reduce using rule 122 (condicionN -> EXCL_WS BOOLEAN .)


state 101

    (123) condicionN -> EXCL_WS ID .

    SEMICOLON       reduce using rule 123 (condicionN -> EXCL_WS ID .)
    LINEBREAK       reduce using rule 123 (condicionN -> EXCL_WS ID .)
    $end            reduce using rule 123 (condicionN -> EXCL_WS ID .)
    RCURL           reduce using rule 123 (condicionN -> EXCL_WS ID .)
    RPAREN          reduce using rule 123 (condicionN -> EXCL_WS ID .)


state 102

    (40) queue -> VAL ID . DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    DOTS            shift and go to state 185


state 103

    (137) instance_linkedlist -> LINKEDL LPAREN . RPAREN

    RPAREN          shift and go to state 186


state 104

    (136) def_estruct_tipoDato -> STACK LANGLE . tipoDato RANGLE
    (57) tipoDato -> . TINT
    (58) tipoDato -> . TLONG
    (59) tipoDato -> . TFLOAT
    (60) tipoDato -> . TDOUBLE
    (61) tipoDato -> . TBOOLEAN
    (62) tipoDato -> . TCHAR
    (63) tipoDato -> . TSTRING

    TINT            shift and go to state 188
    TLONG           shift and go to state 189
    TFLOAT          shift and go to state 190
    TDOUBLE         shift and go to state 191
    TBOOLEAN        shift and go to state 192
    TCHAR           shift and go to state 193
    TSTRING         shift and go to state 194

    tipoDato                       shift and go to state 187

state 105

    (6) line -> blocks SEMICOLON LINEBREAK .
    (7) line -> blocks SEMICOLON LINEBREAK . line
    (8) line -> blocks SEMICOLON LINEBREAK . line LINEBREAK
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    RCURL           reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

  ! LINEBREAK       [ reduce using rule 6 (line -> blocks SEMICOLON LINEBREAK .) ]

    blocks                         shift and go to state 2
    line                           shift and go to state 195
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 106

    (4) line -> blocks LINEBREAK line .
    (5) line -> blocks LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 4 (line -> blocks LINEBREAK line .)
    RCURL           reduce using rule 4 (line -> blocks LINEBREAK line .)
    LINEBREAK       shift and go to state 196

  ! LINEBREAK       [ reduce using rule 4 (line -> blocks LINEBREAK line .) ]


state 107

    (65) expression -> expression PLUS term .

    PLUS            reduce using rule 65 (expression -> expression PLUS term .)
    MINUS           reduce using rule 65 (expression -> expression PLUS term .)
    TIMES           reduce using rule 65 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 65 (expression -> expression PLUS term .)
    MOD             reduce using rule 65 (expression -> expression PLUS term .)
    INCREMENTONE    reduce using rule 65 (expression -> expression PLUS term .)
    DECREMENTONE    reduce using rule 65 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 65 (expression -> expression PLUS term .)
    LINEBREAK       reduce using rule 65 (expression -> expression PLUS term .)
    $end            reduce using rule 65 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 65 (expression -> expression PLUS term .)
    RCURL           reduce using rule 65 (expression -> expression PLUS term .)


state 108

    (66) expression -> expression MINUS term .

    PLUS            reduce using rule 66 (expression -> expression MINUS term .)
    MINUS           reduce using rule 66 (expression -> expression MINUS term .)
    TIMES           reduce using rule 66 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 66 (expression -> expression MINUS term .)
    MOD             reduce using rule 66 (expression -> expression MINUS term .)
    INCREMENTONE    reduce using rule 66 (expression -> expression MINUS term .)
    DECREMENTONE    reduce using rule 66 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 66 (expression -> expression MINUS term .)
    LINEBREAK       reduce using rule 66 (expression -> expression MINUS term .)
    $end            reduce using rule 66 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 66 (expression -> expression MINUS term .)
    RCURL           reduce using rule 66 (expression -> expression MINUS term .)


state 109

    (67) expression -> expression TIMES term .

    PLUS            reduce using rule 67 (expression -> expression TIMES term .)
    MINUS           reduce using rule 67 (expression -> expression TIMES term .)
    TIMES           reduce using rule 67 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 67 (expression -> expression TIMES term .)
    MOD             reduce using rule 67 (expression -> expression TIMES term .)
    INCREMENTONE    reduce using rule 67 (expression -> expression TIMES term .)
    DECREMENTONE    reduce using rule 67 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 67 (expression -> expression TIMES term .)
    LINEBREAK       reduce using rule 67 (expression -> expression TIMES term .)
    $end            reduce using rule 67 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 67 (expression -> expression TIMES term .)
    RCURL           reduce using rule 67 (expression -> expression TIMES term .)


state 110

    (68) expression -> expression DIVIDE term .

    PLUS            reduce using rule 68 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 68 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 68 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 68 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 68 (expression -> expression DIVIDE term .)
    INCREMENTONE    reduce using rule 68 (expression -> expression DIVIDE term .)
    DECREMENTONE    reduce using rule 68 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 68 (expression -> expression DIVIDE term .)
    LINEBREAK       reduce using rule 68 (expression -> expression DIVIDE term .)
    $end            reduce using rule 68 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 68 (expression -> expression DIVIDE term .)
    RCURL           reduce using rule 68 (expression -> expression DIVIDE term .)


state 111

    (69) expression -> expression MOD term .

    PLUS            reduce using rule 69 (expression -> expression MOD term .)
    MINUS           reduce using rule 69 (expression -> expression MOD term .)
    TIMES           reduce using rule 69 (expression -> expression MOD term .)
    DIVIDE          reduce using rule 69 (expression -> expression MOD term .)
    MOD             reduce using rule 69 (expression -> expression MOD term .)
    INCREMENTONE    reduce using rule 69 (expression -> expression MOD term .)
    DECREMENTONE    reduce using rule 69 (expression -> expression MOD term .)
    SEMICOLON       reduce using rule 69 (expression -> expression MOD term .)
    LINEBREAK       reduce using rule 69 (expression -> expression MOD term .)
    $end            reduce using rule 69 (expression -> expression MOD term .)
    RPAREN          reduce using rule 69 (expression -> expression MOD term .)
    RCURL           reduce using rule 69 (expression -> expression MOD term .)


state 112

    (37) impresion -> PRINT LPAREN expression . RPAREN
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (67) expression -> expression . TIMES term
    (68) expression -> expression . DIVIDE term
    (69) expression -> expression . MOD term
    (70) expression -> expression . INCREMENTONE
    (71) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 197
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 113

    (39) funcion -> PRINT LPAREN error . RPAREN

    RPAREN          shift and go to state 198


state 114

    (74) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 74 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 74 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 74 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 74 (term -> LPAREN expression RPAREN .)
    MOD             reduce using rule 74 (term -> LPAREN expression RPAREN .)
    INCREMENTONE    reduce using rule 74 (term -> LPAREN expression RPAREN .)
    DECREMENTONE    reduce using rule 74 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 74 (term -> LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 74 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 74 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 74 (term -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 74 (term -> LPAREN expression RPAREN .)


state 115

    (38) impresion -> PRINTLN LPAREN expression . RPAREN
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (67) expression -> expression . TIMES term
    (68) expression -> expression . DIVIDE term
    (69) expression -> expression . MOD term
    (70) expression -> expression . INCREMENTONE
    (71) expression -> expression . DECREMENTONE

    RPAREN          shift and go to state 199
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 116

    (82) funcion -> FUN ID LPAREN . RPAREN LCURL lineorBreak RCURL
    (83) funcion -> FUN ID LPAREN . ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> FUN ID LPAREN . ID RPAREN LCURL RCURL
    (85) funcion -> FUN ID LPAREN . RPAREN LCURL RCURL
    (86) funcion -> FUN ID LPAREN . RPAREN LCURL error RCURL

    RPAREN          shift and go to state 201
    ID              shift and go to state 200


state 117

    (97) condicionL -> ID opL ID .

    SEMICOLON       reduce using rule 97 (condicionL -> ID opL ID .)
    LINEBREAK       reduce using rule 97 (condicionL -> ID opL ID .)
    $end            reduce using rule 97 (condicionL -> ID opL ID .)
    RCURL           reduce using rule 97 (condicionL -> ID opL ID .)
    RPAREN          reduce using rule 97 (condicionL -> ID opL ID .)


state 118

    (98) condicionL -> ID opL BOOLEAN .

    SEMICOLON       reduce using rule 98 (condicionL -> ID opL BOOLEAN .)
    LINEBREAK       reduce using rule 98 (condicionL -> ID opL BOOLEAN .)
    $end            reduce using rule 98 (condicionL -> ID opL BOOLEAN .)
    RCURL           reduce using rule 98 (condicionL -> ID opL BOOLEAN .)
    RPAREN          reduce using rule 98 (condicionL -> ID opL BOOLEAN .)


state 119

    (116) condicionR -> ID opR ID .

    SEMICOLON       reduce using rule 116 (condicionR -> ID opR ID .)
    LINEBREAK       reduce using rule 116 (condicionR -> ID opR ID .)
    $end            reduce using rule 116 (condicionR -> ID opR ID .)
    RCURL           reduce using rule 116 (condicionR -> ID opR ID .)
    RPAREN          reduce using rule 116 (condicionR -> ID opR ID .)


state 120

    (117) condicionR -> ID opR INT .

    SEMICOLON       reduce using rule 117 (condicionR -> ID opR INT .)
    LINEBREAK       reduce using rule 117 (condicionR -> ID opR INT .)
    $end            reduce using rule 117 (condicionR -> ID opR INT .)
    RCURL           reduce using rule 117 (condicionR -> ID opR INT .)
    RPAREN          reduce using rule 117 (condicionR -> ID opR INT .)


state 121

    (118) condicionR -> ID opR FLOAT .

    SEMICOLON       reduce using rule 118 (condicionR -> ID opR FLOAT .)
    LINEBREAK       reduce using rule 118 (condicionR -> ID opR FLOAT .)
    $end            reduce using rule 118 (condicionR -> ID opR FLOAT .)
    RCURL           reduce using rule 118 (condicionR -> ID opR FLOAT .)
    RPAREN          reduce using rule 118 (condicionR -> ID opR FLOAT .)


state 122

    (119) condicionR -> ID opR LONG .

    SEMICOLON       reduce using rule 119 (condicionR -> ID opR LONG .)
    LINEBREAK       reduce using rule 119 (condicionR -> ID opR LONG .)
    $end            reduce using rule 119 (condicionR -> ID opR LONG .)
    RCURL           reduce using rule 119 (condicionR -> ID opR LONG .)
    RPAREN          reduce using rule 119 (condicionR -> ID opR LONG .)


state 123

    (120) condicionR -> ID opR STRING_1 .

    SEMICOLON       reduce using rule 120 (condicionR -> ID opR STRING_1 .)
    LINEBREAK       reduce using rule 120 (condicionR -> ID opR STRING_1 .)
    $end            reduce using rule 120 (condicionR -> ID opR STRING_1 .)
    RCURL           reduce using rule 120 (condicionR -> ID opR STRING_1 .)
    RPAREN          reduce using rule 120 (condicionR -> ID opR STRING_1 .)


state 124

    (121) condicionR -> ID opR CHAR .

    SEMICOLON       reduce using rule 121 (condicionR -> ID opR CHAR .)
    LINEBREAK       reduce using rule 121 (condicionR -> ID opR CHAR .)
    $end            reduce using rule 121 (condicionR -> ID opR CHAR .)
    RCURL           reduce using rule 121 (condicionR -> ID opR CHAR .)
    RPAREN          reduce using rule 121 (condicionR -> ID opR CHAR .)


state 125

    (49) asignacionSimple -> ID DOTS tipoDatoEspecifico .

    SEMICOLON       reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    LINEBREAK       reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    $end            reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)
    RCURL           reduce using rule 49 (asignacionSimple -> ID DOTS tipoDatoEspecifico .)


state 126

    (51) tipoDatoEspecifico -> TINT . EQUAL INT

    EQUAL           shift and go to state 202


state 127

    (52) tipoDatoEspecifico -> TLONG . EQUAL LONG

    EQUAL           shift and go to state 203


state 128

    (53) tipoDatoEspecifico -> TFLOAT . EQUAL FLOAT

    EQUAL           shift and go to state 204


state 129

    (54) tipoDatoEspecifico -> TBOOLEAN . EQUAL BOOLEAN

    EQUAL           shift and go to state 205


state 130

    (55) tipoDatoEspecifico -> TCHAR . EQUAL CHAR

    EQUAL           shift and go to state 206


state 131

    (56) tipoDatoEspecifico -> TSTRING . EQUAL STRING_1

    EQUAL           shift and go to state 207


state 132

    (50) asignacionSimple -> ID EQUAL valor .

    SEMICOLON       reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)
    LINEBREAK       reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)
    $end            reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)
    RCURL           reduce using rule 50 (asignacionSimple -> ID EQUAL valor .)


state 133

    (64) valor -> expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (67) expression -> expression . TIMES term
    (68) expression -> expression . DIVIDE term
    (69) expression -> expression . MOD term
    (70) expression -> expression . INCREMENTONE
    (71) expression -> expression . DECREMENTONE

    SEMICOLON       reduce using rule 64 (valor -> expression .)
    LINEBREAK       reduce using rule 64 (valor -> expression .)
    $end            reduce using rule 64 (valor -> expression .)
    RCURL           reduce using rule 64 (valor -> expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    INCREMENTONE    shift and go to state 60
    DECREMENTONE    shift and go to state 61


state 134

    (138) stack_actuar -> ID DOT stack_funciones .

    SEMICOLON       reduce using rule 138 (stack_actuar -> ID DOT stack_funciones .)
    LINEBREAK       reduce using rule 138 (stack_actuar -> ID DOT stack_funciones .)
    $end            reduce using rule 138 (stack_actuar -> ID DOT stack_funciones .)
    RCURL           reduce using rule 138 (stack_actuar -> ID DOT stack_funciones .)


state 135

    (157) lsimplem -> ID DOT Lmetod .

    SEMICOLON       reduce using rule 157 (lsimplem -> ID DOT Lmetod .)
    LINEBREAK       reduce using rule 157 (lsimplem -> ID DOT Lmetod .)
    $end            reduce using rule 157 (lsimplem -> ID DOT Lmetod .)
    RCURL           reduce using rule 157 (lsimplem -> ID DOT Lmetod .)


state 136

    (158) lcomp -> ID DOT Cmetod .

    SEMICOLON       reduce using rule 158 (lcomp -> ID DOT Cmetod .)
    LINEBREAK       reduce using rule 158 (lcomp -> ID DOT Cmetod .)
    $end            reduce using rule 158 (lcomp -> ID DOT Cmetod .)
    RCURL           reduce using rule 158 (lcomp -> ID DOT Cmetod .)


state 137

    (33) queue_add -> ID DOT ADD . LPAREN factor RPAREN

    LPAREN          shift and go to state 208


state 138

    (34) queue_peek -> ID DOT PEEK . LPAREN RPAREN
    (147) stack_peek -> PEEK . LPAREN RPAREN

    LPAREN          shift and go to state 209


state 139

    (36) queue_remove -> ID DOT REMOVE . LPAREN RPAREN

    LPAREN          shift and go to state 210


state 140

    (35) queue_poll -> ID DOT POLL . LPAREN RPAREN

    LPAREN          shift and go to state 211


state 141

    (139) stack_funciones -> stack_isEmpty .

    SEMICOLON       reduce using rule 139 (stack_funciones -> stack_isEmpty .)
    LINEBREAK       reduce using rule 139 (stack_funciones -> stack_isEmpty .)
    $end            reduce using rule 139 (stack_funciones -> stack_isEmpty .)
    RCURL           reduce using rule 139 (stack_funciones -> stack_isEmpty .)


state 142

    (140) stack_funciones -> stack_push .

    SEMICOLON       reduce using rule 140 (stack_funciones -> stack_push .)
    LINEBREAK       reduce using rule 140 (stack_funciones -> stack_push .)
    $end            reduce using rule 140 (stack_funciones -> stack_push .)
    RCURL           reduce using rule 140 (stack_funciones -> stack_push .)


state 143

    (141) stack_funciones -> stack_pop .

    SEMICOLON       reduce using rule 141 (stack_funciones -> stack_pop .)
    LINEBREAK       reduce using rule 141 (stack_funciones -> stack_pop .)
    $end            reduce using rule 141 (stack_funciones -> stack_pop .)
    RCURL           reduce using rule 141 (stack_funciones -> stack_pop .)


state 144

    (142) stack_funciones -> stack_peek .

    SEMICOLON       reduce using rule 142 (stack_funciones -> stack_peek .)
    LINEBREAK       reduce using rule 142 (stack_funciones -> stack_peek .)
    $end            reduce using rule 142 (stack_funciones -> stack_peek .)
    RCURL           reduce using rule 142 (stack_funciones -> stack_peek .)


state 145

    (143) stack_funciones -> stack_size .

    SEMICOLON       reduce using rule 143 (stack_funciones -> stack_size .)
    LINEBREAK       reduce using rule 143 (stack_funciones -> stack_size .)
    $end            reduce using rule 143 (stack_funciones -> stack_size .)
    RCURL           reduce using rule 143 (stack_funciones -> stack_size .)


state 146

    (149) Lmetod -> FIRST . LPAREN RPAREN

    LPAREN          shift and go to state 212


state 147

    (150) Lmetod -> LAST . LPAREN RPAREN

    LPAREN          shift and go to state 213


state 148

    (151) Lmetod -> REMOVEL . LPAREN RPAREN

    LPAREN          shift and go to state 214


state 149

    (152) Cmetod -> APPEND . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 215


state 150

    (153) Cmetod -> REMOVEN . LPAREN OBJECT RPAREN

    LPAREN          shift and go to state 216


state 151

    (154) Cmetod -> REMOVEI . LPAREN TINT RPAREN

    LPAREN          shift and go to state 217


state 152

    (144) stack_isEmpty -> ISEMPTY . LPAREN RPAREN

    LPAREN          shift and go to state 218


state 153

    (146) stack_push -> PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 219


state 154

    (145) stack_pop -> POP . LPAREN RPAREN

    LPAREN          shift and go to state 220


state 155

    (148) stack_size -> SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 221


state 156

    (135) stack -> keywordVariables ID DOTS . def_estruct_tipoDato EQUAL instance_linkedlist
    (156) lista -> keywordVariables ID DOTS . LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (49) asignacionSimple -> ID DOTS . tipoDatoEspecifico
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (51) tipoDatoEspecifico -> . TINT EQUAL INT
    (52) tipoDatoEspecifico -> . TLONG EQUAL LONG
    (53) tipoDatoEspecifico -> . TFLOAT EQUAL FLOAT
    (54) tipoDatoEspecifico -> . TBOOLEAN EQUAL BOOLEAN
    (55) tipoDatoEspecifico -> . TCHAR EQUAL CHAR
    (56) tipoDatoEspecifico -> . TSTRING EQUAL STRING_1

    LINKEDL         shift and go to state 223
    STACK           shift and go to state 52
    TINT            shift and go to state 126
    TLONG           shift and go to state 127
    TFLOAT          shift and go to state 128
    TBOOLEAN        shift and go to state 129
    TCHAR           shift and go to state 130
    TSTRING         shift and go to state 131

    def_estruct_tipoDato           shift and go to state 222
    tipoDatoEspecifico             shift and go to state 125

state 157

    (41) for -> FOR LPAREN ID . IN iterable RPAREN LCURL lineorBreak RCURL

    IN              shift and go to state 224


state 158

    (90) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL
    (91) if -> IF LPAREN condicion . RPAREN LCURL lineorBreak RCURL else

    RPAREN          shift and go to state 225


state 159

    (96) condicionL -> BOOLEAN . opL BOOLEAN
    (99) condicionL -> BOOLEAN . opL ID
    (124) opL -> . CONJ
    (125) opL -> . DISJ

    CONJ            shift and go to state 78
    DISJ            shift and go to state 79

    opL                            shift and go to state 95

state 160

    (97) condicionL -> ID . opL ID
    (98) condicionL -> ID . opL BOOLEAN
    (116) condicionR -> ID . opR ID
    (117) condicionR -> ID . opR INT
    (118) condicionR -> ID . opR FLOAT
    (119) condicionR -> ID . opR LONG
    (120) condicionR -> ID . opR STRING_1
    (121) condicionR -> ID . opR CHAR
    (124) opL -> . CONJ
    (125) opL -> . DISJ
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    CONJ            shift and go to state 78
    DISJ            shift and go to state 79
    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opL                            shift and go to state 73
    opR                            shift and go to state 74

state 161

    (100) condicionR -> INT . opR INT
    (101) condicionR -> INT . opR FLOAT
    (102) condicionR -> INT . opR LONG
    (103) condicionR -> INT . opR ID
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 94

state 162

    (104) condicionR -> FLOAT . opR FLOAT
    (105) condicionR -> FLOAT . opR INT
    (106) condicionR -> FLOAT . opR LONG
    (107) condicionR -> FLOAT . opR ID
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 96

state 163

    (108) condicionR -> LONG . opR LONG
    (109) condicionR -> LONG . opR INT
    (110) condicionR -> LONG . opR FLOAT
    (111) condicionR -> LONG . opR ID
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 97

state 164

    (112) condicionR -> STRING_1 . opR STRING_1
    (113) condicionR -> STRING_1 . opR ID
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 98

state 165

    (114) condicionR -> CHAR . opR CHAR
    (115) condicionR -> CHAR . opR ID
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 99

state 166

    (155) while -> WHILE LPAREN ID . opR INT RPAREN LCURL lineorBreak RCURL
    (126) opR -> . LANGLE
    (127) opR -> . RANGLE
    (128) opR -> . LE
    (129) opR -> . GE
    (130) opR -> . EXCL_EQ
    (131) opR -> . EXCL_EQEQ
    (132) opR -> . AS_SAFE
    (133) opR -> . EQEQ
    (134) opR -> . EQEQEQ

    LANGLE          shift and go to state 80
    RANGLE          shift and go to state 81
    LE              shift and go to state 82
    GE              shift and go to state 83
    EXCL_EQ         shift and go to state 84
    EXCL_EQEQ       shift and go to state 85
    AS_SAFE         shift and go to state 86
    EQEQ            shift and go to state 87
    EQEQEQ          shift and go to state 88

    opR                            shift and go to state 226

state 167

    (100) condicionR -> INT opR INT .

    SEMICOLON       reduce using rule 100 (condicionR -> INT opR INT .)
    LINEBREAK       reduce using rule 100 (condicionR -> INT opR INT .)
    $end            reduce using rule 100 (condicionR -> INT opR INT .)
    RCURL           reduce using rule 100 (condicionR -> INT opR INT .)
    RPAREN          reduce using rule 100 (condicionR -> INT opR INT .)


state 168

    (101) condicionR -> INT opR FLOAT .

    SEMICOLON       reduce using rule 101 (condicionR -> INT opR FLOAT .)
    LINEBREAK       reduce using rule 101 (condicionR -> INT opR FLOAT .)
    $end            reduce using rule 101 (condicionR -> INT opR FLOAT .)
    RCURL           reduce using rule 101 (condicionR -> INT opR FLOAT .)
    RPAREN          reduce using rule 101 (condicionR -> INT opR FLOAT .)


state 169

    (102) condicionR -> INT opR LONG .

    SEMICOLON       reduce using rule 102 (condicionR -> INT opR LONG .)
    LINEBREAK       reduce using rule 102 (condicionR -> INT opR LONG .)
    $end            reduce using rule 102 (condicionR -> INT opR LONG .)
    RCURL           reduce using rule 102 (condicionR -> INT opR LONG .)
    RPAREN          reduce using rule 102 (condicionR -> INT opR LONG .)


state 170

    (103) condicionR -> INT opR ID .

    SEMICOLON       reduce using rule 103 (condicionR -> INT opR ID .)
    LINEBREAK       reduce using rule 103 (condicionR -> INT opR ID .)
    $end            reduce using rule 103 (condicionR -> INT opR ID .)
    RCURL           reduce using rule 103 (condicionR -> INT opR ID .)
    RPAREN          reduce using rule 103 (condicionR -> INT opR ID .)


state 171

    (96) condicionL -> BOOLEAN opL BOOLEAN .

    SEMICOLON       reduce using rule 96 (condicionL -> BOOLEAN opL BOOLEAN .)
    LINEBREAK       reduce using rule 96 (condicionL -> BOOLEAN opL BOOLEAN .)
    $end            reduce using rule 96 (condicionL -> BOOLEAN opL BOOLEAN .)
    RCURL           reduce using rule 96 (condicionL -> BOOLEAN opL BOOLEAN .)
    RPAREN          reduce using rule 96 (condicionL -> BOOLEAN opL BOOLEAN .)


state 172

    (99) condicionL -> BOOLEAN opL ID .

    SEMICOLON       reduce using rule 99 (condicionL -> BOOLEAN opL ID .)
    LINEBREAK       reduce using rule 99 (condicionL -> BOOLEAN opL ID .)
    $end            reduce using rule 99 (condicionL -> BOOLEAN opL ID .)
    RCURL           reduce using rule 99 (condicionL -> BOOLEAN opL ID .)
    RPAREN          reduce using rule 99 (condicionL -> BOOLEAN opL ID .)


state 173

    (104) condicionR -> FLOAT opR FLOAT .

    SEMICOLON       reduce using rule 104 (condicionR -> FLOAT opR FLOAT .)
    LINEBREAK       reduce using rule 104 (condicionR -> FLOAT opR FLOAT .)
    $end            reduce using rule 104 (condicionR -> FLOAT opR FLOAT .)
    RCURL           reduce using rule 104 (condicionR -> FLOAT opR FLOAT .)
    RPAREN          reduce using rule 104 (condicionR -> FLOAT opR FLOAT .)


state 174

    (105) condicionR -> FLOAT opR INT .

    SEMICOLON       reduce using rule 105 (condicionR -> FLOAT opR INT .)
    LINEBREAK       reduce using rule 105 (condicionR -> FLOAT opR INT .)
    $end            reduce using rule 105 (condicionR -> FLOAT opR INT .)
    RCURL           reduce using rule 105 (condicionR -> FLOAT opR INT .)
    RPAREN          reduce using rule 105 (condicionR -> FLOAT opR INT .)


state 175

    (106) condicionR -> FLOAT opR LONG .

    SEMICOLON       reduce using rule 106 (condicionR -> FLOAT opR LONG .)
    LINEBREAK       reduce using rule 106 (condicionR -> FLOAT opR LONG .)
    $end            reduce using rule 106 (condicionR -> FLOAT opR LONG .)
    RCURL           reduce using rule 106 (condicionR -> FLOAT opR LONG .)
    RPAREN          reduce using rule 106 (condicionR -> FLOAT opR LONG .)


state 176

    (107) condicionR -> FLOAT opR ID .

    SEMICOLON       reduce using rule 107 (condicionR -> FLOAT opR ID .)
    LINEBREAK       reduce using rule 107 (condicionR -> FLOAT opR ID .)
    $end            reduce using rule 107 (condicionR -> FLOAT opR ID .)
    RCURL           reduce using rule 107 (condicionR -> FLOAT opR ID .)
    RPAREN          reduce using rule 107 (condicionR -> FLOAT opR ID .)


state 177

    (108) condicionR -> LONG opR LONG .

    SEMICOLON       reduce using rule 108 (condicionR -> LONG opR LONG .)
    LINEBREAK       reduce using rule 108 (condicionR -> LONG opR LONG .)
    $end            reduce using rule 108 (condicionR -> LONG opR LONG .)
    RCURL           reduce using rule 108 (condicionR -> LONG opR LONG .)
    RPAREN          reduce using rule 108 (condicionR -> LONG opR LONG .)


state 178

    (109) condicionR -> LONG opR INT .

    SEMICOLON       reduce using rule 109 (condicionR -> LONG opR INT .)
    LINEBREAK       reduce using rule 109 (condicionR -> LONG opR INT .)
    $end            reduce using rule 109 (condicionR -> LONG opR INT .)
    RCURL           reduce using rule 109 (condicionR -> LONG opR INT .)
    RPAREN          reduce using rule 109 (condicionR -> LONG opR INT .)


state 179

    (110) condicionR -> LONG opR FLOAT .

    SEMICOLON       reduce using rule 110 (condicionR -> LONG opR FLOAT .)
    LINEBREAK       reduce using rule 110 (condicionR -> LONG opR FLOAT .)
    $end            reduce using rule 110 (condicionR -> LONG opR FLOAT .)
    RCURL           reduce using rule 110 (condicionR -> LONG opR FLOAT .)
    RPAREN          reduce using rule 110 (condicionR -> LONG opR FLOAT .)


state 180

    (111) condicionR -> LONG opR ID .

    SEMICOLON       reduce using rule 111 (condicionR -> LONG opR ID .)
    LINEBREAK       reduce using rule 111 (condicionR -> LONG opR ID .)
    $end            reduce using rule 111 (condicionR -> LONG opR ID .)
    RCURL           reduce using rule 111 (condicionR -> LONG opR ID .)
    RPAREN          reduce using rule 111 (condicionR -> LONG opR ID .)


state 181

    (112) condicionR -> STRING_1 opR STRING_1 .

    SEMICOLON       reduce using rule 112 (condicionR -> STRING_1 opR STRING_1 .)
    LINEBREAK       reduce using rule 112 (condicionR -> STRING_1 opR STRING_1 .)
    $end            reduce using rule 112 (condicionR -> STRING_1 opR STRING_1 .)
    RCURL           reduce using rule 112 (condicionR -> STRING_1 opR STRING_1 .)
    RPAREN          reduce using rule 112 (condicionR -> STRING_1 opR STRING_1 .)


state 182

    (113) condicionR -> STRING_1 opR ID .

    SEMICOLON       reduce using rule 113 (condicionR -> STRING_1 opR ID .)
    LINEBREAK       reduce using rule 113 (condicionR -> STRING_1 opR ID .)
    $end            reduce using rule 113 (condicionR -> STRING_1 opR ID .)
    RCURL           reduce using rule 113 (condicionR -> STRING_1 opR ID .)
    RPAREN          reduce using rule 113 (condicionR -> STRING_1 opR ID .)


state 183

    (114) condicionR -> CHAR opR CHAR .

    SEMICOLON       reduce using rule 114 (condicionR -> CHAR opR CHAR .)
    LINEBREAK       reduce using rule 114 (condicionR -> CHAR opR CHAR .)
    $end            reduce using rule 114 (condicionR -> CHAR opR CHAR .)
    RCURL           reduce using rule 114 (condicionR -> CHAR opR CHAR .)
    RPAREN          reduce using rule 114 (condicionR -> CHAR opR CHAR .)


state 184

    (115) condicionR -> CHAR opR ID .

    SEMICOLON       reduce using rule 115 (condicionR -> CHAR opR ID .)
    LINEBREAK       reduce using rule 115 (condicionR -> CHAR opR ID .)
    $end            reduce using rule 115 (condicionR -> CHAR opR ID .)
    RCURL           reduce using rule 115 (condicionR -> CHAR opR ID .)
    RPAREN          reduce using rule 115 (condicionR -> CHAR opR ID .)


state 185

    (40) queue -> VAL ID DOTS . QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    QUEUE           shift and go to state 227


state 186

    (137) instance_linkedlist -> LINKEDL LPAREN RPAREN .

    SEMICOLON       reduce using rule 137 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 137 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    $end            reduce using rule 137 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)
    RCURL           reduce using rule 137 (instance_linkedlist -> LINKEDL LPAREN RPAREN .)


state 187

    (136) def_estruct_tipoDato -> STACK LANGLE tipoDato . RANGLE

    RANGLE          shift and go to state 228


state 188

    (57) tipoDato -> TINT .

    RANGLE          reduce using rule 57 (tipoDato -> TINT .)


state 189

    (58) tipoDato -> TLONG .

    RANGLE          reduce using rule 58 (tipoDato -> TLONG .)


state 190

    (59) tipoDato -> TFLOAT .

    RANGLE          reduce using rule 59 (tipoDato -> TFLOAT .)


state 191

    (60) tipoDato -> TDOUBLE .

    RANGLE          reduce using rule 60 (tipoDato -> TDOUBLE .)


state 192

    (61) tipoDato -> TBOOLEAN .

    RANGLE          reduce using rule 61 (tipoDato -> TBOOLEAN .)


state 193

    (62) tipoDato -> TCHAR .

    RANGLE          reduce using rule 62 (tipoDato -> TCHAR .)


state 194

    (63) tipoDato -> TSTRING .

    RANGLE          reduce using rule 63 (tipoDato -> TSTRING .)


state 195

    (7) line -> blocks SEMICOLON LINEBREAK line .
    (8) line -> blocks SEMICOLON LINEBREAK line . LINEBREAK

  ! shift/reduce conflict for LINEBREAK resolved as shift
    $end            reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    RCURL           reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .)
    LINEBREAK       shift and go to state 229

  ! LINEBREAK       [ reduce using rule 7 (line -> blocks SEMICOLON LINEBREAK line .) ]


state 196

    (5) line -> blocks LINEBREAK line LINEBREAK .

    $end            reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 5 (line -> blocks LINEBREAK line LINEBREAK .)


state 197

    (37) impresion -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)
    RCURL           reduce using rule 37 (impresion -> PRINT LPAREN expression RPAREN .)


state 198

    (39) funcion -> PRINT LPAREN error RPAREN .

    SEMICOLON       reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)
    LINEBREAK       reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)
    $end            reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)
    RCURL           reduce using rule 39 (funcion -> PRINT LPAREN error RPAREN .)


state 199

    (38) impresion -> PRINTLN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    LINEBREAK       reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)
    RCURL           reduce using rule 38 (impresion -> PRINTLN LPAREN expression RPAREN .)


state 200

    (83) funcion -> FUN ID LPAREN ID . RPAREN LCURL lineorBreak RCURL
    (84) funcion -> FUN ID LPAREN ID . RPAREN LCURL RCURL

    RPAREN          shift and go to state 230


state 201

    (82) funcion -> FUN ID LPAREN RPAREN . LCURL lineorBreak RCURL
    (85) funcion -> FUN ID LPAREN RPAREN . LCURL RCURL
    (86) funcion -> FUN ID LPAREN RPAREN . LCURL error RCURL

    LCURL           shift and go to state 231


state 202

    (51) tipoDatoEspecifico -> TINT EQUAL . INT

    INT             shift and go to state 232


state 203

    (52) tipoDatoEspecifico -> TLONG EQUAL . LONG

    LONG            shift and go to state 233


state 204

    (53) tipoDatoEspecifico -> TFLOAT EQUAL . FLOAT

    FLOAT           shift and go to state 234


state 205

    (54) tipoDatoEspecifico -> TBOOLEAN EQUAL . BOOLEAN

    BOOLEAN         shift and go to state 235


state 206

    (55) tipoDatoEspecifico -> TCHAR EQUAL . CHAR

    CHAR            shift and go to state 236


state 207

    (56) tipoDatoEspecifico -> TSTRING EQUAL . STRING_1

    STRING_1        shift and go to state 237


state 208

    (33) queue_add -> ID DOT ADD LPAREN . factor RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 238

state 209

    (34) queue_peek -> ID DOT PEEK LPAREN . RPAREN
    (147) stack_peek -> PEEK LPAREN . RPAREN

    RPAREN          shift and go to state 239


state 210

    (36) queue_remove -> ID DOT REMOVE LPAREN . RPAREN

    RPAREN          shift and go to state 240


state 211

    (35) queue_poll -> ID DOT POLL LPAREN . RPAREN

    RPAREN          shift and go to state 241


state 212

    (149) Lmetod -> FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 242


state 213

    (150) Lmetod -> LAST LPAREN . RPAREN

    RPAREN          shift and go to state 243


state 214

    (151) Lmetod -> REMOVEL LPAREN . RPAREN

    RPAREN          shift and go to state 244


state 215

    (152) Cmetod -> APPEND LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 245


state 216

    (153) Cmetod -> REMOVEN LPAREN . OBJECT RPAREN

    OBJECT          shift and go to state 246


state 217

    (154) Cmetod -> REMOVEI LPAREN . TINT RPAREN

    TINT            shift and go to state 247


state 218

    (144) stack_isEmpty -> ISEMPTY LPAREN . RPAREN

    RPAREN          shift and go to state 248


state 219

    (146) stack_push -> PUSH LPAREN . factor RPAREN
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1

    INT             shift and go to state 64
    FLOAT           shift and go to state 65
    LONG            shift and go to state 66
    CHAR            shift and go to state 67
    BOOLEAN         shift and go to state 68
    ID              shift and go to state 69
    STRING_1        shift and go to state 70

    factor                         shift and go to state 249

state 220

    (145) stack_pop -> POP LPAREN . RPAREN

    RPAREN          shift and go to state 250


state 221

    (148) stack_size -> SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 251


state 222

    (135) stack -> keywordVariables ID DOTS def_estruct_tipoDato . EQUAL instance_linkedlist

    EQUAL           shift and go to state 252


state 223

    (156) lista -> keywordVariables ID DOTS LINKEDL . LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 253


state 224

    (41) for -> FOR LPAREN ID IN . iterable RPAREN LCURL lineorBreak RCURL
    (42) iterable -> . ID
    (43) iterable -> . INT THREEDOTS INT
    (44) iterable -> . ID DOT INDICES

    ID              shift and go to state 254
    INT             shift and go to state 256

    iterable                       shift and go to state 255

state 225

    (90) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL
    (91) if -> IF LPAREN condicion RPAREN . LCURL lineorBreak RCURL else

    LCURL           shift and go to state 257


state 226

    (155) while -> WHILE LPAREN ID opR . INT RPAREN LCURL lineorBreak RCURL

    INT             shift and go to state 258


state 227

    (40) queue -> VAL ID DOTS QUEUE . LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 259


state 228

    (136) def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .

    SEMICOLON       reduce using rule 136 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    LINEBREAK       reduce using rule 136 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    $end            reduce using rule 136 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    RCURL           reduce using rule 136 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)
    EQUAL           reduce using rule 136 (def_estruct_tipoDato -> STACK LANGLE tipoDato RANGLE .)


state 229

    (8) line -> blocks SEMICOLON LINEBREAK line LINEBREAK .

    $end            reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    LINEBREAK       reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)
    RCURL           reduce using rule 8 (line -> blocks SEMICOLON LINEBREAK line LINEBREAK .)


state 230

    (83) funcion -> FUN ID LPAREN ID RPAREN . LCURL lineorBreak RCURL
    (84) funcion -> FUN ID LPAREN ID RPAREN . LCURL RCURL

    LCURL           shift and go to state 260


state 231

    (82) funcion -> FUN ID LPAREN RPAREN LCURL . lineorBreak RCURL
    (85) funcion -> FUN ID LPAREN RPAREN LCURL . RCURL
    (86) funcion -> FUN ID LPAREN RPAREN LCURL . error RCURL
    (87) lineorBreak -> . line
    (88) lineorBreak -> . LINEBREAK line LINEBREAK
    (89) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 262
    error           shift and go to state 263
    LINEBREAK       shift and go to state 265
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 261
    line                           shift and go to state 264
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 232

    (51) tipoDatoEspecifico -> TINT EQUAL INT .

    SEMICOLON       reduce using rule 51 (tipoDatoEspecifico -> TINT EQUAL INT .)
    LINEBREAK       reduce using rule 51 (tipoDatoEspecifico -> TINT EQUAL INT .)
    $end            reduce using rule 51 (tipoDatoEspecifico -> TINT EQUAL INT .)
    RCURL           reduce using rule 51 (tipoDatoEspecifico -> TINT EQUAL INT .)


state 233

    (52) tipoDatoEspecifico -> TLONG EQUAL LONG .

    SEMICOLON       reduce using rule 52 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    LINEBREAK       reduce using rule 52 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    $end            reduce using rule 52 (tipoDatoEspecifico -> TLONG EQUAL LONG .)
    RCURL           reduce using rule 52 (tipoDatoEspecifico -> TLONG EQUAL LONG .)


state 234

    (53) tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .

    SEMICOLON       reduce using rule 53 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    LINEBREAK       reduce using rule 53 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    $end            reduce using rule 53 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)
    RCURL           reduce using rule 53 (tipoDatoEspecifico -> TFLOAT EQUAL FLOAT .)


state 235

    (54) tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .

    SEMICOLON       reduce using rule 54 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    LINEBREAK       reduce using rule 54 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    $end            reduce using rule 54 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)
    RCURL           reduce using rule 54 (tipoDatoEspecifico -> TBOOLEAN EQUAL BOOLEAN .)


state 236

    (55) tipoDatoEspecifico -> TCHAR EQUAL CHAR .

    SEMICOLON       reduce using rule 55 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    LINEBREAK       reduce using rule 55 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    $end            reduce using rule 55 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)
    RCURL           reduce using rule 55 (tipoDatoEspecifico -> TCHAR EQUAL CHAR .)


state 237

    (56) tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .

    SEMICOLON       reduce using rule 56 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    LINEBREAK       reduce using rule 56 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    $end            reduce using rule 56 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)
    RCURL           reduce using rule 56 (tipoDatoEspecifico -> TSTRING EQUAL STRING_1 .)


state 238

    (33) queue_add -> ID DOT ADD LPAREN factor . RPAREN

    RPAREN          shift and go to state 266


state 239

    (34) queue_peek -> ID DOT PEEK LPAREN RPAREN .
    (147) stack_peek -> PEEK LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for LINEBREAK resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
  ! reduce/reduce conflict for RCURL resolved using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    SEMICOLON       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    LINEBREAK       reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    $end            reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)
    RCURL           reduce using rule 34 (queue_peek -> ID DOT PEEK LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 147 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! LINEBREAK       [ reduce using rule 147 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! $end            [ reduce using rule 147 (stack_peek -> PEEK LPAREN RPAREN .) ]
  ! RCURL           [ reduce using rule 147 (stack_peek -> PEEK LPAREN RPAREN .) ]


state 240

    (36) queue_remove -> ID DOT REMOVE LPAREN RPAREN .

    SEMICOLON       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    $end            reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)
    RCURL           reduce using rule 36 (queue_remove -> ID DOT REMOVE LPAREN RPAREN .)


state 241

    (35) queue_poll -> ID DOT POLL LPAREN RPAREN .

    SEMICOLON       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    $end            reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)
    RCURL           reduce using rule 35 (queue_poll -> ID DOT POLL LPAREN RPAREN .)


state 242

    (149) Lmetod -> FIRST LPAREN RPAREN .

    SEMICOLON       reduce using rule 149 (Lmetod -> FIRST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 149 (Lmetod -> FIRST LPAREN RPAREN .)
    $end            reduce using rule 149 (Lmetod -> FIRST LPAREN RPAREN .)
    RCURL           reduce using rule 149 (Lmetod -> FIRST LPAREN RPAREN .)


state 243

    (150) Lmetod -> LAST LPAREN RPAREN .

    SEMICOLON       reduce using rule 150 (Lmetod -> LAST LPAREN RPAREN .)
    LINEBREAK       reduce using rule 150 (Lmetod -> LAST LPAREN RPAREN .)
    $end            reduce using rule 150 (Lmetod -> LAST LPAREN RPAREN .)
    RCURL           reduce using rule 150 (Lmetod -> LAST LPAREN RPAREN .)


state 244

    (151) Lmetod -> REMOVEL LPAREN RPAREN .

    SEMICOLON       reduce using rule 151 (Lmetod -> REMOVEL LPAREN RPAREN .)
    LINEBREAK       reduce using rule 151 (Lmetod -> REMOVEL LPAREN RPAREN .)
    $end            reduce using rule 151 (Lmetod -> REMOVEL LPAREN RPAREN .)
    RCURL           reduce using rule 151 (Lmetod -> REMOVEL LPAREN RPAREN .)


state 245

    (152) Cmetod -> APPEND LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 267


state 246

    (153) Cmetod -> REMOVEN LPAREN OBJECT . RPAREN

    RPAREN          shift and go to state 268


state 247

    (154) Cmetod -> REMOVEI LPAREN TINT . RPAREN

    RPAREN          shift and go to state 269


state 248

    (144) stack_isEmpty -> ISEMPTY LPAREN RPAREN .

    SEMICOLON       reduce using rule 144 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    LINEBREAK       reduce using rule 144 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    $end            reduce using rule 144 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)
    RCURL           reduce using rule 144 (stack_isEmpty -> ISEMPTY LPAREN RPAREN .)


state 249

    (146) stack_push -> PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 270


state 250

    (145) stack_pop -> POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 145 (stack_pop -> POP LPAREN RPAREN .)
    LINEBREAK       reduce using rule 145 (stack_pop -> POP LPAREN RPAREN .)
    $end            reduce using rule 145 (stack_pop -> POP LPAREN RPAREN .)
    RCURL           reduce using rule 145 (stack_pop -> POP LPAREN RPAREN .)


state 251

    (148) stack_size -> SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 148 (stack_size -> SIZE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 148 (stack_size -> SIZE LPAREN RPAREN .)
    $end            reduce using rule 148 (stack_size -> SIZE LPAREN RPAREN .)
    RCURL           reduce using rule 148 (stack_size -> SIZE LPAREN RPAREN .)


state 252

    (135) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL . instance_linkedlist
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN

    LINKEDL         shift and go to state 47

    instance_linkedlist            shift and go to state 271

state 253

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE . OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 272


state 254

    (42) iterable -> ID .
    (44) iterable -> ID . DOT INDICES

    RPAREN          reduce using rule 42 (iterable -> ID .)
    DOT             shift and go to state 273


state 255

    (41) for -> FOR LPAREN ID IN iterable . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 274


state 256

    (43) iterable -> INT . THREEDOTS INT

    THREEDOTS       shift and go to state 275


state 257

    (90) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL
    (91) if -> IF LPAREN condicion RPAREN LCURL . lineorBreak RCURL else
    (87) lineorBreak -> . line
    (88) lineorBreak -> . LINEBREAK line LINEBREAK
    (89) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 265
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    condicion                      shift and go to state 7
    lineorBreak                    shift and go to state 276
    line                           shift and go to state 264
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 258

    (155) while -> WHILE LPAREN ID opR INT . RPAREN LCURL lineorBreak RCURL

    RPAREN          shift and go to state 277


state 259

    (40) queue -> VAL ID DOTS QUEUE LANGLE . tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (57) tipoDato -> . TINT
    (58) tipoDato -> . TLONG
    (59) tipoDato -> . TFLOAT
    (60) tipoDato -> . TDOUBLE
    (61) tipoDato -> . TBOOLEAN
    (62) tipoDato -> . TCHAR
    (63) tipoDato -> . TSTRING

    TINT            shift and go to state 188
    TLONG           shift and go to state 189
    TFLOAT          shift and go to state 190
    TDOUBLE         shift and go to state 191
    TBOOLEAN        shift and go to state 192
    TCHAR           shift and go to state 193
    TSTRING         shift and go to state 194

    tipoDato                       shift and go to state 278

state 260

    (83) funcion -> FUN ID LPAREN ID RPAREN LCURL . lineorBreak RCURL
    (84) funcion -> FUN ID LPAREN ID RPAREN LCURL . RCURL
    (87) lineorBreak -> . line
    (88) lineorBreak -> . LINEBREAK line LINEBREAK
    (89) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           shift and go to state 280
    LINEBREAK       shift and go to state 265
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 279
    line                           shift and go to state 264
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 261

    (82) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 281


state 262

    (85) funcion -> FUN ID LPAREN RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 85 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 85 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    $end            reduce using rule 85 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)
    RCURL           reduce using rule 85 (funcion -> FUN ID LPAREN RPAREN LCURL RCURL .)


state 263

    (86) funcion -> FUN ID LPAREN RPAREN LCURL error . RCURL

    RCURL           shift and go to state 282


state 264

    (87) lineorBreak -> line .

    RCURL           reduce using rule 87 (lineorBreak -> line .)


state 265

    (88) lineorBreak -> LINEBREAK . line LINEBREAK
    (89) lineorBreak -> LINEBREAK . line
    (9) line -> LINEBREAK .
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    RCURL           reduce using rule 9 (line -> LINEBREAK .)
    LINEBREAK       shift and go to state 3
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    line                           shift and go to state 283
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 266

    (33) queue_add -> ID DOT ADD LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    $end            reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)
    RCURL           reduce using rule 33 (queue_add -> ID DOT ADD LPAREN factor RPAREN .)


state 267

    (152) Cmetod -> APPEND LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 152 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 152 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    $end            reduce using rule 152 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 152 (Cmetod -> APPEND LPAREN OBJECT RPAREN .)


state 268

    (153) Cmetod -> REMOVEN LPAREN OBJECT RPAREN .

    SEMICOLON       reduce using rule 153 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    LINEBREAK       reduce using rule 153 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    $end            reduce using rule 153 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)
    RCURL           reduce using rule 153 (Cmetod -> REMOVEN LPAREN OBJECT RPAREN .)


state 269

    (154) Cmetod -> REMOVEI LPAREN TINT RPAREN .

    SEMICOLON       reduce using rule 154 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    LINEBREAK       reduce using rule 154 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    $end            reduce using rule 154 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)
    RCURL           reduce using rule 154 (Cmetod -> REMOVEI LPAREN TINT RPAREN .)


state 270

    (146) stack_push -> PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 146 (stack_push -> PUSH LPAREN factor RPAREN .)
    LINEBREAK       reduce using rule 146 (stack_push -> PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 146 (stack_push -> PUSH LPAREN factor RPAREN .)
    RCURL           reduce using rule 146 (stack_push -> PUSH LPAREN factor RPAREN .)


state 271

    (135) stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .

    SEMICOLON       reduce using rule 135 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    LINEBREAK       reduce using rule 135 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    $end            reduce using rule 135 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)
    RCURL           reduce using rule 135 (stack -> keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist .)


state 272

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT . RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 284


state 273

    (44) iterable -> ID DOT . INDICES

    INDICES         shift and go to state 285


state 274

    (41) for -> FOR LPAREN ID IN iterable RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 286


state 275

    (43) iterable -> INT THREEDOTS . INT

    INT             shift and go to state 287


state 276

    (90) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL
    (91) if -> IF LPAREN condicion RPAREN LCURL lineorBreak . RCURL else

    RCURL           shift and go to state 288


state 277

    (155) while -> WHILE LPAREN ID opR INT RPAREN . LCURL lineorBreak RCURL

    LCURL           shift and go to state 289


state 278

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato . RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 290


state 279

    (83) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 291


state 280

    (84) funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .

    SEMICOLON       reduce using rule 84 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    LINEBREAK       reduce using rule 84 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    $end            reduce using rule 84 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)
    RCURL           reduce using rule 84 (funcion -> FUN ID LPAREN ID RPAREN LCURL RCURL .)


state 281

    (82) funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 82 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 82 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 82 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 82 (funcion -> FUN ID LPAREN RPAREN LCURL lineorBreak RCURL .)


state 282

    (86) funcion -> FUN ID LPAREN RPAREN LCURL error RCURL .

    SEMICOLON       reduce using rule 86 (funcion -> FUN ID LPAREN RPAREN LCURL error RCURL .)
    LINEBREAK       reduce using rule 86 (funcion -> FUN ID LPAREN RPAREN LCURL error RCURL .)
    $end            reduce using rule 86 (funcion -> FUN ID LPAREN RPAREN LCURL error RCURL .)
    RCURL           reduce using rule 86 (funcion -> FUN ID LPAREN RPAREN LCURL error RCURL .)


state 283

    (88) lineorBreak -> LINEBREAK line . LINEBREAK
    (89) lineorBreak -> LINEBREAK line .

    LINEBREAK       shift and go to state 292
    RCURL           reduce using rule 89 (lineorBreak -> LINEBREAK line .)


state 284

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE . EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 293


state 285

    (44) iterable -> ID DOT INDICES .

    RPAREN          reduce using rule 44 (iterable -> ID DOT INDICES .)


state 286

    (41) for -> FOR LPAREN ID IN iterable RPAREN LCURL . lineorBreak RCURL
    (87) lineorBreak -> . line
    (88) lineorBreak -> . LINEBREAK line LINEBREAK
    (89) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 265
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 294
    line                           shift and go to state 264
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 287

    (43) iterable -> INT THREEDOTS INT .

    RPAREN          reduce using rule 43 (iterable -> INT THREEDOTS INT .)


state 288

    (90) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .
    (91) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL . else
    (92) else -> . ELSE LCURL lineorBreak RCURL

    SEMICOLON       reduce using rule 90 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 90 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 90 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 90 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL .)
    ELSE            shift and go to state 296

    else                           shift and go to state 295

state 289

    (155) while -> WHILE LPAREN ID opR INT RPAREN LCURL . lineorBreak RCURL
    (87) lineorBreak -> . line
    (88) lineorBreak -> . LINEBREAK line LINEBREAK
    (89) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 265
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 297
    line                           shift and go to state 264
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 290

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE . EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    EQUAL           shift and go to state 298


state 291

    (83) funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 83 (funcion -> FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL .)


state 292

    (88) lineorBreak -> LINEBREAK line LINEBREAK .

    RCURL           reduce using rule 88 (lineorBreak -> LINEBREAK line LINEBREAK .)


state 293

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL . LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 299


state 294

    (41) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 300


state 295

    (91) if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .

    SEMICOLON       reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    LINEBREAK       reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    $end            reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)
    RCURL           reduce using rule 91 (if -> IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else .)


state 296

    (92) else -> ELSE . LCURL lineorBreak RCURL

    LCURL           shift and go to state 301


state 297

    (155) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak . RCURL

    RCURL           shift and go to state 302


state 298

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL . LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN

    LINKEDL         shift and go to state 303


state 299

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL . LANGLE OBJECT RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 304


state 300

    (41) for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 41 (for -> FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL .)


state 301

    (92) else -> ELSE LCURL . lineorBreak RCURL
    (87) lineorBreak -> . line
    (88) lineorBreak -> . LINEBREAK line LINEBREAK
    (89) lineorBreak -> . LINEBREAK line
    (1) line -> . blocks
    (2) line -> . blocks SEMICOLON
    (3) line -> . blocks LINEBREAK
    (4) line -> . blocks LINEBREAK line
    (5) line -> . blocks LINEBREAK line LINEBREAK
    (6) line -> . blocks SEMICOLON LINEBREAK
    (7) line -> . blocks SEMICOLON LINEBREAK line
    (8) line -> . blocks SEMICOLON LINEBREAK line LINEBREAK
    (9) line -> . LINEBREAK
    (10) blocks -> . impresion
    (11) blocks -> . expression
    (12) blocks -> . estructurasControl
    (13) blocks -> . condicion
    (14) blocks -> . funcion
    (15) blocks -> . asignacion
    (16) blocks -> . estructurasDatos
    (37) impresion -> . PRINT LPAREN expression RPAREN
    (38) impresion -> . PRINTLN LPAREN expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . expression TIMES term
    (68) expression -> . expression DIVIDE term
    (69) expression -> . expression MOD term
    (70) expression -> . expression INCREMENTONE
    (71) expression -> . expression DECREMENTONE
    (72) expression -> . term
    (26) estructurasControl -> . for
    (27) estructurasControl -> . if
    (28) estructurasControl -> . while
    (93) condicion -> . condicionL
    (94) condicion -> . condicionR
    (95) condicion -> . condicionN
    (39) funcion -> . PRINT LPAREN error RPAREN
    (82) funcion -> . FUN ID LPAREN RPAREN LCURL lineorBreak RCURL
    (83) funcion -> . FUN ID LPAREN ID RPAREN LCURL lineorBreak RCURL
    (84) funcion -> . FUN ID LPAREN ID RPAREN LCURL RCURL
    (85) funcion -> . FUN ID LPAREN RPAREN LCURL RCURL
    (86) funcion -> . FUN ID LPAREN RPAREN LCURL error RCURL
    (45) asignacion -> . keywordVariables asignacionSimple
    (46) asignacion -> . asignacionSimple
    (17) estructurasDatos -> . queue
    (18) estructurasDatos -> . queue_operations
    (19) estructurasDatos -> . stack
    (20) estructurasDatos -> . stack_actuar
    (21) estructurasDatos -> . instance_linkedlist
    (22) estructurasDatos -> . def_estruct_tipoDato
    (23) estructurasDatos -> . lista
    (24) estructurasDatos -> . lsimplem
    (25) estructurasDatos -> . lcomp
    (73) term -> . factor
    (74) term -> . LPAREN expression RPAREN
    (41) for -> . FOR LPAREN ID IN iterable RPAREN LCURL lineorBreak RCURL
    (90) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL
    (91) if -> . IF LPAREN condicion RPAREN LCURL lineorBreak RCURL else
    (155) while -> . WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL
    (96) condicionL -> . BOOLEAN opL BOOLEAN
    (97) condicionL -> . ID opL ID
    (98) condicionL -> . ID opL BOOLEAN
    (99) condicionL -> . BOOLEAN opL ID
    (100) condicionR -> . INT opR INT
    (101) condicionR -> . INT opR FLOAT
    (102) condicionR -> . INT opR LONG
    (103) condicionR -> . INT opR ID
    (104) condicionR -> . FLOAT opR FLOAT
    (105) condicionR -> . FLOAT opR INT
    (106) condicionR -> . FLOAT opR LONG
    (107) condicionR -> . FLOAT opR ID
    (108) condicionR -> . LONG opR LONG
    (109) condicionR -> . LONG opR INT
    (110) condicionR -> . LONG opR FLOAT
    (111) condicionR -> . LONG opR ID
    (112) condicionR -> . STRING_1 opR STRING_1
    (113) condicionR -> . STRING_1 opR ID
    (114) condicionR -> . CHAR opR CHAR
    (115) condicionR -> . CHAR opR ID
    (116) condicionR -> . ID opR ID
    (117) condicionR -> . ID opR INT
    (118) condicionR -> . ID opR FLOAT
    (119) condicionR -> . ID opR LONG
    (120) condicionR -> . ID opR STRING_1
    (121) condicionR -> . ID opR CHAR
    (122) condicionN -> . EXCL_WS BOOLEAN
    (123) condicionN -> . EXCL_WS ID
    (47) keywordVariables -> . VAR
    (48) keywordVariables -> . VAL
    (49) asignacionSimple -> . ID DOTS tipoDatoEspecifico
    (50) asignacionSimple -> . ID EQUAL valor
    (40) queue -> . VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN
    (29) queue_operations -> . queue_add
    (30) queue_operations -> . queue_peek
    (31) queue_operations -> . queue_remove
    (32) queue_operations -> . queue_poll
    (135) stack -> . keywordVariables ID DOTS def_estruct_tipoDato EQUAL instance_linkedlist
    (138) stack_actuar -> . ID DOT stack_funciones
    (137) instance_linkedlist -> . LINKEDL LPAREN RPAREN
    (136) def_estruct_tipoDato -> . STACK LANGLE tipoDato RANGLE
    (156) lista -> . keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN
    (157) lsimplem -> . ID DOT Lmetod
    (158) lcomp -> . ID DOT Cmetod
    (75) factor -> . INT
    (76) factor -> . FLOAT
    (77) factor -> . LONG
    (78) factor -> . CHAR
    (79) factor -> . BOOLEAN
    (80) factor -> . ID
    (81) factor -> . STRING_1
    (33) queue_add -> . ID DOT ADD LPAREN factor RPAREN
    (34) queue_peek -> . ID DOT PEEK LPAREN RPAREN
    (36) queue_remove -> . ID DOT REMOVE LPAREN RPAREN
    (35) queue_poll -> . ID DOT POLL LPAREN RPAREN

    LINEBREAK       shift and go to state 265
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 13
    FUN             shift and go to state 21
    LPAREN          shift and go to state 12
    FOR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    BOOLEAN         shift and go to state 39
    ID              shift and go to state 22
    INT             shift and go to state 38
    FLOAT           shift and go to state 40
    LONG            shift and go to state 41
    STRING_1        shift and go to state 42
    CHAR            shift and go to state 43
    EXCL_WS         shift and go to state 44
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    LINKEDL         shift and go to state 47
    STACK           shift and go to state 52

    lineorBreak                    shift and go to state 305
    line                           shift and go to state 264
    blocks                         shift and go to state 2
    impresion                      shift and go to state 4
    expression                     shift and go to state 5
    estructurasControl             shift and go to state 6
    condicion                      shift and go to state 7
    funcion                        shift and go to state 8
    asignacion                     shift and go to state 9
    estructurasDatos               shift and go to state 10
    term                           shift and go to state 14
    for                            shift and go to state 15
    if                             shift and go to state 16
    while                          shift and go to state 17
    condicionL                     shift and go to state 18
    condicionR                     shift and go to state 19
    condicionN                     shift and go to state 20
    keywordVariables               shift and go to state 23
    asignacionSimple               shift and go to state 24
    queue                          shift and go to state 25
    queue_operations               shift and go to state 26
    stack                          shift and go to state 27
    stack_actuar                   shift and go to state 28
    instance_linkedlist            shift and go to state 29
    def_estruct_tipoDato           shift and go to state 30
    lista                          shift and go to state 31
    lsimplem                       shift and go to state 32
    lcomp                          shift and go to state 33
    factor                         shift and go to state 34
    queue_add                      shift and go to state 48
    queue_peek                     shift and go to state 49
    queue_remove                   shift and go to state 50
    queue_poll                     shift and go to state 51

state 302

    (155) while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 155 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 155 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    $end            reduce using rule 155 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 155 (while -> WHILE LPAREN ID opR INT RPAREN LCURL lineorBreak RCURL .)


state 303

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL . LANGLE tipoDato RANGLE LPAREN RPAREN

    LANGLE          shift and go to state 306


state 304

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE . OBJECT RANGLE LPAREN RPAREN

    OBJECT          shift and go to state 307


state 305

    (92) else -> ELSE LCURL lineorBreak . RCURL

    RCURL           shift and go to state 308


state 306

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE . tipoDato RANGLE LPAREN RPAREN
    (57) tipoDato -> . TINT
    (58) tipoDato -> . TLONG
    (59) tipoDato -> . TFLOAT
    (60) tipoDato -> . TDOUBLE
    (61) tipoDato -> . TBOOLEAN
    (62) tipoDato -> . TCHAR
    (63) tipoDato -> . TSTRING

    TINT            shift and go to state 188
    TLONG           shift and go to state 189
    TFLOAT          shift and go to state 190
    TDOUBLE         shift and go to state 191
    TBOOLEAN        shift and go to state 192
    TCHAR           shift and go to state 193
    TSTRING         shift and go to state 194

    tipoDato                       shift and go to state 309

state 307

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 310


state 308

    (92) else -> ELSE LCURL lineorBreak RCURL .

    SEMICOLON       reduce using rule 92 (else -> ELSE LCURL lineorBreak RCURL .)
    LINEBREAK       reduce using rule 92 (else -> ELSE LCURL lineorBreak RCURL .)
    $end            reduce using rule 92 (else -> ELSE LCURL lineorBreak RCURL .)
    RCURL           reduce using rule 92 (else -> ELSE LCURL lineorBreak RCURL .)


state 309

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato . RANGLE LPAREN RPAREN

    RANGLE          shift and go to state 311


state 310

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 312


state 311

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE . LPAREN RPAREN

    LPAREN          shift and go to state 313


state 312

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 314


state 313

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN . RPAREN

    RPAREN          shift and go to state 315


state 314

    (156) lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 156 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 156 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    $end            reduce using rule 156 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 156 (lista -> keywordVariables ID DOTS LINKEDL LANGLE OBJECT RANGLE EQUAL LINKEDL LANGLE OBJECT RANGLE LPAREN RPAREN .)


state 315

    (40) queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .

    SEMICOLON       reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    LINEBREAK       reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    $end            reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)
    RCURL           reduce using rule 40 (queue -> VAL ID DOTS QUEUE LANGLE tipoDato RANGLE EQUAL LINKEDL LANGLE tipoDato RANGLE LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINEBREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 53 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 54 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 105 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 106 resolved as shift
WARNING: shift/reduce conflict for LINEBREAK in state 195 resolved as shift
WARNING: reduce/reduce conflict in state 239 resolved using rule (queue_peek -> ID DOT PEEK LPAREN RPAREN)
WARNING: rejected rule (stack_peek -> PEEK LPAREN RPAREN) in state 239
WARNING: Rule (stack_peek -> PEEK LPAREN RPAREN) is never reduced
